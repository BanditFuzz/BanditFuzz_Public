(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 4.089787483215332
; 	answer => sat
; solvers/bitwuzla
; 	time => 0.41991734504699707
; 	answer => sat
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvslt (bvudiv (bvsmod bv_1 bv_0) (bvxnor bv_1 bv_2)) (bvshl (bvxor #x4f46c849  #x5084e9a8 ) (bvand #xb5f693c8  bv_1))))
(assert (bvslt (bvmul (bvudiv #x555cc0be  bv_2) (bvor #x16b5df55  #x8579aad5 )) (bvand (bvnor #x67f6af99  #x26f114fa ) (bvudiv #xd8594901  bv_3))))
(assert (bvult (bvxnor (bvlshr bv_2 #xfe95b37b ) (bvadd #x76983080  bv_3)) (bvxor (bvmul #xe2269f77  bv_0) (bvudiv #x1c14d2d8  #xd583bb95 ))))
(assert (xor (=> (bvslt #x7ddbed4a  #xcbcb19b3 ) (bvsgt #x2e5260d4  #x7fedfefa )) (bvult (bvurem bv_4 bv_3) (bvsub #xb7f1bf00  bv_4))))
(assert (=> (bvsge (bvshl bv_3 #x4f66e940 ) (bvashr #x52a1756d  #xebd92aec )) (bvsle (bvsrem bv_0 bv_2) (bvashr #x23078855  bv_1))))
(check-sat)
(exit)
