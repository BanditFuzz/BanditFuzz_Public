(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.5833466053009033
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.08060264587402344
; 	answer => sat
(set-logic QF_NIRA)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const int_0 Int)
(declare-const int_1 Int)
(declare-const int_2 Int)
(declare-const int_3 Int)
(declare-const int_4 Int)
(declare-const real_0 Real)
(declare-const real_1 Real)
(declare-const real_2 Real)
(declare-const real_3 Real)
(declare-const real_4 Real)
(assert (< (/ (- (- 191630774.62623537)) (- real_0 real_1)) (/ (- real_4) (* (- 639749898.0990682) real_0))))
(assert (> (mod (mod int_0 int_3) (* int_0 (- 333111133))) (mod (* (- 837372103) int_2) (mod int_0 int_2))))
(assert (=> (< (/ real_2 (- 435458409.1814146)) (/ 783020708.1053281 (- 496102127.3256549))) (> (- 976425831.3656833) (+ real_4 real_4))))
(assert (not (and (< real_3 real_1) (< (- 304146338.05544806) 292750698.6779506))))
(assert (and (xor (<= (- 71965711) (- 909271536)) (=> false true)) (and (<= int_2 int_1) (<= 45174661 858389951))))
(check-sat)
(exit)
