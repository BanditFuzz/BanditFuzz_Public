(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.18784523010253906
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.11364006996154785
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.14264678955078125
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvsge (bvlshr (bvsrem #x000000c8  #x00000055 ) (bvnand bv_2 bv_4)) (bvsub (bvxnor bv_2 #x000000ff ) (bvxor #x000000da  bv_2))))
(assert (and (bvuge (bvor #x0000005e  #x0000003d ) (bvsdiv #x000000d7  #x000000e7 )) (and (bvugt #x00000023  #x000000ac ) (bvsgt bv_4 bv_3))))
(assert (bvslt (bvurem (bvxor #x00000008  #x0000009c ) (bvlshr #x0000009c  bv_3)) (bvxor (bvsrem #x000000fd  bv_1) (bvxnor bv_4 #x0000006e ))))
(assert (and (and (bvslt bv_1 bv_1) (bvuge #x00000053  #x00000045 )) (bvuge (bvand bv_1 #x00000086 ) (bvmul #x000000a5  bv_3))))
(assert (bvsle (bvand (bvmul #x00000066  bv_0) (bvor #x000000b1  #x000000ff )) (bvadd (bvsdiv bv_0 bv_4) (bvudiv #x000000b5  bv_0))))
(check-sat)
(exit)
