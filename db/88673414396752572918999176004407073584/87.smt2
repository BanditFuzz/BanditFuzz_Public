(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.20859622955322266
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.1919875144958496
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.2331984043121338
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (xor (xor (bvule #x00000060  #x00000004 ) (bvult bv_3 #x0000007a )) (bvule (bvsmod #x000000e5  bv_1) (bvshl #x00000050  bv_4))))
(assert (=> (bvugt (bvsmod bv_3 bv_3) (bvlshr bv_0 bv_4)) (bvsle (bvadd bv_0 #x000000c3 ) (bvashr bv_4 #x00000049 ))))
(assert (bvuge (bvlshr (bvlshr bv_3 bv_3) (bvand bv_2 bv_1)) (bvsdiv (bvxnor bv_1 bv_2) (bvashr #x000000d4  #x000000ae ))))
(assert (bvugt (bvor (bvand bv_2 #x000000eb ) (bvshl #x000000e0  bv_4)) (bvlshr (bvnand #x000000b7  #x00000050 ) (bvand bv_1 #x00000046 ))))
(assert (xor (bvsgt (bvnand bv_4 #x000000b5 ) (bvxor #x0000005e  #x0000009f )) (bvuge (bvurem bv_4 #x0000001f ) (bvsmod #x000000c0  bv_1))))
(check-sat)
(exit)
