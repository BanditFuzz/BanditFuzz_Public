(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.13503694534301758
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.12525367736816406
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.2220461368560791
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (=> (or (bvsge bv_4 #x0000008a ) (bvule bv_1 #x00000073 )) (not (bvult bv_0 #x00000050 ))))
(assert (=> (or (bvslt bv_2 #x00000069 ) (bvugt #x00000050  #x00000023 )) (and (bvslt bv_3 #x00000091 ) (bvsge bv_0 bv_0))))
(assert (not (or (bvule bv_0 bv_3) (not bool_1))))
(assert (=> (bvslt (bvor #x000000ff  #x00000005 ) (bvsub bv_2 bv_4)) (and (bvslt #x000000ec  #x000000fb ) (bvult #x0000001e  bv_3))))
(assert (=> (xor (bvsle bv_4 bv_4) (bvule bv_3 #x000000c8 )) (bvslt (bvshl bv_0 bv_0) (bvor #x000000ad  #x000000a5 ))))
(check-sat)
(exit)
