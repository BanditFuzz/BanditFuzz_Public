(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.2280120849609375
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.16295313835144043
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.19628119468688965
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvuge (bvsdiv (bvxor bv_3 bv_0) (bvor #x0000005d  #x00000090 )) (bvmul (bvand #x0000009f  #x000000f8 ) (bvand bv_1 #x000000d7 ))))
(assert (bvsle (bvudiv (bvmul #x000000e3  #x000000a7 ) (bvshl #x00000094  #x0000001a )) (bvand (bvxor #x000000dc  #x000000cf ) (bvsmod bv_4 bv_4))))
(assert (or (and (bvsgt bv_1 #x00000005 ) (bvuge bv_1 #x00000004 )) (and (bvsgt #x000000ce  bv_2) (bvsle #x0000006b  #x00000047 ))))
(assert (bvsge (bvshl (bvudiv bv_4 #x00000094 ) (bvxnor #x0000005a  #x00000017 )) (bvsub (bvurem bv_3 bv_0) (bvsub #x000000b3  #x000000ed ))))
(assert (xor (=> (bvsge #x0000000b  bv_2) (and false bool_3)) (bvult (bvashr bv_2 bv_2) (bvsrem #x0000006d  bv_4))))
(check-sat)
(exit)
