(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.1714017391204834
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.16769099235534668
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.20802974700927734
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (=> (bvuge (bvlshr #x000000c3  #x00000031 ) (bvashr #x0000001a  bv_3)) (xor (bvule bv_3 bv_3) (bvsgt #x000000c8  bv_3))))
(assert (and (=> (bvsge bv_4 bv_2) (and bool_1 true)) (or (=> false false) (bvugt bv_0 bv_4))))
(assert (=> (bvslt (bvudiv bv_0 #x00000026 ) (bvmul #x000000fb  #x000000f7 )) (=> (bvslt #x00000097  #x00000096 ) (and true false))))
(assert (bvuge (bvlshr (bvsub bv_2 #x0000004e ) (bvxor #x00000082  bv_4)) (bvudiv (bvshl #x000000a9  bv_3) (bvsmod bv_1 #x000000b2 ))))
(assert (bvule (bvudiv (bvxnor #x0000009e  bv_3) (bvashr #x000000ce  #x0000003c )) (bvadd (bvlshr #x0000009d  #x000000db ) (bvnor #x00000085  #x00000015 ))))
(check-sat)
(exit)
