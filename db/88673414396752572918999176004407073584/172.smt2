(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.17119169235229492
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.15713119506835938
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.1822371482849121
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvugt (bvadd (bvudiv #x000000d7  bv_0) (bvurem bv_1 #x00000077 )) (bvxor (bvxor bv_0 #x0000008a ) (bvashr bv_1 bv_2))))
(assert (and (and (=> true false) (bvugt #x00000008  #x00000009 )) (bvugt (bvurem #x000000e9  #x00000014 ) (bvashr #x00000059  bv_1))))
(assert (and (=> (bvsle bv_0 bv_2) (bvsle bv_4 bv_2)) (bvult (bvurem bv_1 #x0000002f ) (bvxnor #x00000070  bv_2))))
(assert (bvult (bvlshr (bvnor #x0000005a  bv_3) (bvand #x0000005b  bv_4)) (bvnor (bvxor #x000000d2  #x0000001d ) (bvsrem bv_4 #x00000008 ))))
(assert (and (bvugt (bvurem bv_3 bv_1) (bvand bv_0 #x0000001c )) (bvsge (bvshl bv_0 #x00000091 ) (bvudiv #x00000018  bv_0))))
(check-sat)
(exit)
