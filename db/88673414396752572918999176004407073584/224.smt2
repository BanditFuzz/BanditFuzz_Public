(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.17862343788146973
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.19075751304626465
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.17536306381225586
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvuge (bvsub (bvand #x0000006e  #x000000a4 ) (bvurem bv_0 bv_3)) (bvashr (bvmul bv_4 #x00000004 ) (bvsub bv_3 #x00000088 ))))
(assert (bvult (bvsmod (bvxnor bv_3 #x0000002b ) (bvlshr bv_0 #x00000039 )) (bvxor (bvor bv_0 bv_0) (bvashr bv_2 bv_0))))
(assert (bvsle (bvsmod (bvor bv_3 bv_3) (bvsub bv_4 bv_3)) (bvand (bvlshr bv_3 bv_4) (bvand #x00000024  #x000000d9 ))))
(assert (or (=> (bvsgt bv_0 #x0000009e ) (and bool_4 true)) (or (or true true) (bvuge bv_0 #x00000079 ))))
(assert (and (xor (bvule bv_4 #x0000004b ) (bvule #x00000025  bv_1)) (bvult (bvsmod bv_4 bv_3) (bvadd bv_4 #x0000004d ))))
(check-sat)
(exit)
