(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.1994624137878418
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.14917278289794922
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.21089887619018555
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (=> (bvule (bvsdiv #x00000000  bv_2) (bvsub bv_0 #x0000008c )) (xor (bvugt bv_2 bv_1) (=> true bool_0))))
(assert (and (xor (bvslt bv_2 bv_0) (bvule bv_0 bv_3)) (bvule (bvor #x00000018  bv_0) (bvadd bv_4 bv_4))))
(assert (and (and (bvsgt #x000000d9  bv_3) (or bool_3 bool_0)) (bvult (bvsdiv #x000000a8  #x0000003f ) (bvmul bv_1 #x000000d0 ))))
(assert (or (bvuge (bvnor bv_4 bv_2) (bvsub bv_3 #x00000075 )) (or (bvsle bv_0 bv_4) (bvsle bv_4 bv_3))))
(assert (xor (bvslt (bvxor bv_1 #x0000004d ) (bvand bv_4 #x00000000 )) (not (bvslt #x000000ad  bv_3))))
(check-sat)
(exit)
