(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.21439766883850098
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.2280592918395996
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.19887614250183105
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (=> (or (bvuge #x000000c6  #x00000082 ) (or true bool_1)) (bvule (bvnand bv_4 #x000000ad ) (bvmul bv_3 bv_1))))
(assert (bvule (bvnand (bvsrem bv_3 #x0000004c ) (bvshl bv_0 #x0000000e )) (bvxnor (bvand #x0000002f  bv_4) (bvxor bv_0 bv_1))))
(assert (not (and (bvsgt #x000000d5  #x00000025 ) (xor bool_1 bool_0))))
(assert (=> (bvuge (bvshl #x0000008a  bv_0) (bvshl bv_3 bv_0)) (bvult (bvnand #x00000003  bv_3) (bvnand #x00000039  bv_2))))
(assert (not (bvsle (bvor #x00000010  #x0000006b ) (bvxnor bv_2 bv_4))))
(check-sat)
(exit)
