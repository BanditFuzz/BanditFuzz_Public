(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.17286133766174316
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.15598154067993164
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.18330979347229004
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvult (bvor (bvsub #x000000cb  #x00000029 ) (bvsub #x00000011  #x00000057 )) (bvadd (bvudiv bv_4 #x00000073 ) (bvnor #x000000e1  #x000000fe ))))
(assert (bvsge (bvlshr (bvnor #x00000046  #x0000001a ) (bvshl #x00000004  bv_3)) (bvshl (bvudiv #x000000d7  bv_0) (bvadd bv_2 bv_0))))
(assert (=> (bvslt (bvxnor bv_3 bv_3) (bvsrem bv_0 bv_1)) (bvule (bvsdiv #x000000b0  bv_3) (bvsrem bv_0 #x000000d9 ))))
(assert (or (=> (xor true false) (and bool_2 bool_4)) (bvsle (bvsub bv_3 bv_1) (bvor bv_4 bv_1))))
(assert (bvugt (bvxnor (bvxor bv_3 bv_2) (bvmul bv_4 #x00000070 )) (bvashr (bvadd #x000000ce  bv_2) (bvmul #x00000084  #x000000f5 ))))
(check-sat)
(exit)
