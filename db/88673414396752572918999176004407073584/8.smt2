(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.1439049243927002
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.1477053165435791
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.3688514232635498
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvule (bvsmod (bvmul bv_2 #x000000ee ) (bvxor #x000000cc  bv_3)) (bvor (bvsrem #x000000b5  #x000000d2 ) (bvlshr #x0000009c  bv_1))))
(assert (or (and (bvugt bv_3 #x0000009b ) (bvule #x000000f2  #x00000052 )) (bvult (bvand #x000000dd  bv_3) (bvsmod bv_0 #x00000002 ))))
(assert (=> (bvsgt (bvxor #x000000e4  #x000000ef ) (bvshl #x00000092  bv_0)) (bvsle (bvurem bv_1 #x00000048 ) (bvudiv bv_2 #x0000001d ))))
(assert (bvsle (bvsrem (bvand #x00000074  #x00000030 ) (bvor #x000000b5  #x00000063 )) (bvor (bvand #x00000003  bv_1) (bvsdiv bv_3 #x00000031 ))))
(assert (bvsge (bvashr (bvxnor bv_1 #x000000f9 ) (bvnand bv_3 #x0000008e )) (bvshl (bvxor #x00000013  bv_4) (bvsrem bv_1 #x000000a5 ))))
(check-sat)
(exit)
