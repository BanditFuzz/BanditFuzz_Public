(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.1880955696105957
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.12236952781677246
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.18425893783569336
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvsle (bvand (bvudiv #x00000042  bv_0) (bvashr #x00000026  #x00000047 )) (bvsdiv (bvashr #x00000094  #x000000a9 ) (bvsmod bv_1 bv_3))))
(assert (bvsge (bvor (bvnor bv_0 bv_3) (bvor #x000000ad  #x00000093 )) (bvsdiv (bvor bv_2 bv_0) (bvxor bv_4 bv_1))))
(assert (xor (bvsle (bvsmod #x000000b2  bv_3) (bvnand bv_3 bv_3)) (bvsle (bvsmod #x000000d0  #x00000039 ) (bvadd bv_4 #x00000056 ))))
(assert (bvuge (bvsub (bvshl #x0000004a  bv_4) (bvor #x00000052  bv_4)) (bvxor (bvnand bv_0 #x000000dd ) (bvxnor bv_1 #x00000069 ))))
(assert (bvslt (bvsmod (bvxor #x000000d0  #x00000040 ) (bvxnor bv_0 bv_3)) (bvadd (bvsub #x00000064  #x00000099 ) (bvsrem #x00000076  #x000000ad ))))
(check-sat)
(exit)
