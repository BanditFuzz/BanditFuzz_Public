(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.14634060859680176
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.13837599754333496
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.14931488037109375
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (not (bvuge (bvand bv_4 bv_1) (bvnand bv_1 #x000000cf ))))
(assert (=> (bvuge (bvnand #x00000060  #x0000004a ) (bvsdiv #x000000bf  bv_0)) (=> (or false bool_2) (xor false bool_0))))
(assert (bvsle (bvsrem (bvor bv_2 #x00000049 ) (bvsrem bv_2 bv_0)) (bvand (bvadd bv_4 bv_0) (bvlshr bv_0 bv_4))))
(assert (bvsge (bvxor (bvsmod bv_4 bv_0) (bvudiv bv_3 bv_2)) (bvnor (bvadd bv_4 #x00000013 ) (bvsdiv bv_4 #x0000006a ))))
(assert (not (bvuge (bvshl bv_1 #x0000006d ) (bvudiv bv_2 bv_4))))
(check-sat)
(exit)
