(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.22123408317565918
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.17922711372375488
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.21879243850708008
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (or (xor (xor true true) (bvult bv_0 #x00000057 )) (bvslt (bvxor #x00000004  #x0000000a ) (bvashr bv_2 #x000000e7 ))))
(assert (bvuge (bvmul (bvashr bv_4 bv_1) (bvnand bv_2 #x000000f1 )) (bvnor (bvlshr #x000000e4  bv_3) (bvand bv_4 bv_4))))
(assert (or (xor (not false) (not true)) (bvsge (bvudiv #x000000e9  bv_0) (bvudiv #x000000ad  #x000000ae ))))
(assert (and (bvsle (bvadd bv_2 #x000000f5 ) (bvor bv_3 #x000000aa )) (bvuge (bvashr #x000000e0  #x00000051 ) (bvsrem #x00000043  #x000000bd ))))
(assert (or (bvule (bvsub #x000000b6  #x00000085 ) (bvsmod bv_2 #x000000e0 )) (bvule (bvxor bv_1 bv_1) (bvnand #x00000035  #x0000005a ))))
(check-sat)
(exit)
