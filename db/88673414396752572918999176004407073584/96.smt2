(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.21412062644958496
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.15410828590393066
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.22341561317443848
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvugt (bvshl (bvudiv bv_1 bv_1) (bvmul bv_2 bv_0)) (bvand (bvnand #x000000dc  #x00000047 ) (bvsdiv #x000000ca  #x000000fe ))))
(assert (xor (bvsle (bvsrem bv_2 bv_2) (bvsrem #x000000d4  #x00000004 )) (bvuge (bvshl #x0000008a  bv_1) (bvshl #x0000000c  bv_4))))
(assert (not (bvslt (bvlshr #x00000083  #x000000fc ) (bvashr #x0000009f  bv_1))))
(assert (=> (xor (bvsge bv_4 bv_2) (bvugt bv_4 bv_2)) (=> (bvugt bv_4 #x00000073 ) (and bool_3 true))))
(assert (bvule (bvsub (bvshl #x0000000c  #x000000dd ) (bvsub bv_4 bv_1)) (bvnor (bvurem #x0000004a  bv_4) (bvsdiv #x0000003f  bv_1))))
(check-sat)
(exit)
