(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.17653751373291016
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.15783095359802246
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.1952526569366455
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (xor (bvsgt (bvnor bv_1 bv_0) (bvnand bv_2 bv_4)) (bvuge (bvsmod #x000000c0  #x00000014 ) (bvurem #x00000018  #x000000be ))))
(assert (or (bvuge (bvsmod bv_3 #x0000007c ) (bvlshr #x0000000e  bv_4)) (=> (and false true) (bvule #x000000f4  #x00000061 ))))
(assert (bvsgt (bvnand (bvsub bv_4 #x000000b4 ) (bvnand bv_0 bv_1)) (bvsdiv (bvudiv #x0000006c  bv_3) (bvshl bv_1 bv_1))))
(assert (xor (and (bvsle #x0000001e  bv_1) (bvslt bv_3 #x00000082 )) (bvslt (bvudiv #x00000034  #x00000051 ) (bvshl #x0000001d  bv_1))))
(assert (bvslt (bvsmod (bvxnor #x000000db  bv_0) (bvadd #x0000009f  bv_3)) (bvsdiv (bvnor bv_3 bv_2) (bvxor #x000000cb  #x000000c7 ))))
(check-sat)
(exit)
