(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.2070906162261963
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.17168116569519043
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.193220853805542
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvsle (bvxor (bvudiv #x00000031  bv_4) (bvlshr bv_3 bv_2)) (bvxnor (bvudiv bv_2 #x000000dc ) (bvxnor #x00000026  #x0000005a ))))
(assert (bvule (bvxor (bvurem bv_0 #x00000004 ) (bvadd #x000000de  #x0000000e )) (bvudiv (bvudiv #x0000002f  #x000000a7 ) (bvsub bv_1 bv_3))))
(assert (or (and (and bool_0 true) (and true true)) (bvslt (bvnor bv_3 bv_3) (bvsmod bv_4 #x000000c6 ))))
(assert (bvugt (bvudiv (bvnor bv_1 bv_1) (bvxnor bv_4 bv_1)) (bvand (bvurem bv_3 bv_3) (bvxnor bv_0 #x000000c9 ))))
(assert (not (bvult (bvor #x00000066  bv_4) (bvnand bv_3 bv_1))))
(check-sat)
(exit)
