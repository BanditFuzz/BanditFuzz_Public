(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.19728565216064453
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.1299457550048828
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.2299518585205078
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (and (bvuge (bvadd bv_4 bv_4) (bvlshr #x00000036  bv_0)) (bvugt (bvlshr bv_2 bv_3) (bvsdiv #x0000004e  #x000000dc ))))
(assert (bvugt (bvashr (bvurem #x00000063  bv_0) (bvudiv #x000000f9  bv_0)) (bvshl (bvnor #x00000002  bv_2) (bvor #x00000087  bv_3))))
(assert (or (bvugt (bvudiv bv_3 #x000000e5 ) (bvashr #x0000009c  #x00000089 )) (and (bvsgt #x000000d4  #x0000001e ) (bvsle #x0000002c  bv_2))))
(assert (or (and (bvuge #x0000007a  #x000000e6 ) (bvult #x000000ea  #x000000ba )) (or (and true true) (=> bool_1 bool_0))))
(assert (bvslt (bvurem (bvor #x000000be  bv_3) (bvsmod bv_3 #x00000045 )) (bvurem (bvxor #x00000088  #x0000003e ) (bvlshr bv_3 bv_1))))
(check-sat)
(exit)
