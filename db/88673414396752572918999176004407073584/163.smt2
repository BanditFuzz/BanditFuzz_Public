(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.19868969917297363
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.15860724449157715
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.2190687656402588
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvslt (bvxor (bvadd #x00000095  bv_2) (bvshl #x00000055  bv_1)) (bvsdiv (bvudiv #x00000011  bv_4) (bvand #x00000010  #x000000a2 ))))
(assert (bvslt (bvxor (bvsub #x00000000  bv_3) (bvsdiv #x00000024  #x00000084 )) (bvmul (bvlshr bv_1 bv_0) (bvlshr #x000000f7  #x0000002f ))))
(assert (or (bvuge (bvsmod bv_3 #x00000030 ) (bvxnor #x00000017  bv_4)) (and (xor bool_2 bool_1) (bvuge #x00000081  bv_4))))
(assert (xor (bvuge (bvsub bv_2 #x0000000b ) (bvand #x000000ed  bv_2)) (and (bvsge bv_0 bv_0) (xor bool_2 bool_1))))
(assert (bvslt (bvmul (bvand bv_1 bv_4) (bvsrem bv_2 #x00000015 )) (bvsub (bvsdiv bv_2 bv_4) (bvadd #x000000e5  bv_3))))
(check-sat)
(exit)
