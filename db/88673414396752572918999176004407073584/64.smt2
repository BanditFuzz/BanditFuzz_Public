(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.15215826034545898
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.17948079109191895
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.22551751136779785
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (and (xor (bvult bv_0 bv_2) (bvuge #x00000071  #x000000a5 )) (=> (bvugt #x000000bb  bv_4) (bvult #x0000000d  bv_4))))
(assert (bvugt (bvashr (bvashr bv_4 bv_1) (bvshl #x000000de  #x000000c9 )) (bvsmod (bvnor bv_4 bv_3) (bvlshr bv_2 #x000000f0 ))))
(assert (xor (bvult (bvadd #x00000085  #x000000e9 ) (bvnand bv_0 bv_0)) (not (bvsge #x000000ad  #x00000012 ))))
(assert (bvslt (bvnand (bvor bv_4 bv_1) (bvsmod bv_2 #x000000f3 )) (bvashr (bvsdiv bv_3 bv_3) (bvand bv_0 bv_4))))
(assert (bvslt (bvor (bvsrem #x000000d5  #x00000085 ) (bvlshr bv_2 #x000000fe )) (bvsrem (bvnand #x00000043  #x000000c6 ) (bvlshr #x00000063  #x000000e7 ))))
(check-sat)
(exit)
