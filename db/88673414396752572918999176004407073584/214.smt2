(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.2241060733795166
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.16043543815612793
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.2070479393005371
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (or (not (and bool_1 bool_4)) (bvsge (bvudiv #x00000095  #x000000a5 ) (bvmul #x00000014  #x00000019 ))))
(assert (bvult (bvxor (bvlshr #x00000041  bv_2) (bvand #x00000050  bv_2)) (bvor (bvlshr #x0000001c  #x000000ea ) (bvurem #x000000fb  #x00000002 ))))
(assert (and (bvule (bvsub #x00000024  #x000000a5 ) (bvmul #x00000090  #x00000062 )) (xor (bvuge #x00000099  #x00000043 ) (bvslt #x0000008c  bv_4))))
(assert (=> (bvuge (bvsub #x0000008f  #x000000d0 ) (bvnand bv_2 bv_0)) (bvugt (bvnand bv_4 bv_0) (bvxor #x00000031  #x00000091 ))))
(assert (not (bvsle (bvnor bv_1 bv_2) (bvudiv bv_4 bv_0))))
(check-sat)
(exit)
