(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.18967056274414062
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.1582655906677246
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.1651008129119873
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (xor (bvsle (bvurem #x0000005c  bv_3) (bvand bv_4 #x000000cb )) (bvule (bvxor bv_2 #x0000006e ) (bvsdiv #x0000000c  bv_4))))
(assert (bvuge (bvsdiv (bvsrem bv_4 #x00000080 ) (bvshl bv_3 bv_4)) (bvadd (bvshl #x00000095  bv_4) (bvnand bv_4 bv_1))))
(assert (bvule (bvsrem (bvor bv_0 #x0000007c ) (bvor bv_1 bv_0)) (bvnor (bvlshr #x0000006a  bv_2) (bvxnor bv_4 bv_3))))
(assert (bvugt (bvurem (bvlshr #x00000080  #x000000db ) (bvadd bv_3 bv_4)) (bvxor (bvor bv_0 #x000000be ) (bvsmod bv_2 #x000000a5 ))))
(assert (and (bvslt (bvurem #x00000042  bv_0) (bvsub #x000000f5  bv_3)) (bvult (bvxor #x00000034  bv_4) (bvurem bv_1 bv_0))))
(check-sat)
(exit)
