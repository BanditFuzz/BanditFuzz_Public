(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.2028968334197998
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.13102483749389648
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.1960620880126953
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (or (and (bvuge bv_0 bv_0) (and bool_2 false)) (bvsle (bvlshr bv_2 #x000000c3 ) (bvadd bv_3 bv_0))))
(assert (=> (bvsle (bvadd #x0000006b  bv_3) (bvxnor #x000000b0  bv_1)) (bvuge (bvsdiv bv_4 #x000000f6 ) (bvor #x00000076  #x00000085 ))))
(assert (bvsle (bvsub (bvmul bv_1 bv_2) (bvsrem #x00000096  #x00000068 )) (bvsub (bvurem bv_2 bv_4) (bvsrem #x00000071  bv_2))))
(assert (bvsge (bvand (bvashr bv_3 bv_1) (bvxnor bv_1 bv_2)) (bvsdiv (bvnand bv_4 bv_2) (bvand #x000000aa  #x00000084 ))))
(assert (bvsle (bvsmod (bvxor bv_3 #x000000a5 ) (bvudiv bv_0 bv_4)) (bvashr (bvashr bv_4 bv_2) (bvurem bv_4 bv_1))))
(check-sat)
(exit)
