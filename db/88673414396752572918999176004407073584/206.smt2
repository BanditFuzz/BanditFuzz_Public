(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.17898297309875488
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.16449427604675293
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.23496222496032715
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvsgt (bvor (bvor #x00000038  #x0000001a ) (bvxnor bv_0 bv_1)) (bvashr (bvnor #x0000007c  bv_1) (bvand #x000000bd  bv_0))))
(assert (bvsge (bvsmod (bvand #x0000002a  bv_4) (bvshl bv_0 bv_4)) (bvsdiv (bvsdiv bv_1 bv_2) (bvshl bv_2 #x000000cf ))))
(assert (bvuge (bvashr (bvsdiv #x000000c1  #x00000048 ) (bvudiv #x000000ad  bv_0)) (bvsub (bvlshr bv_3 #x000000c4 ) (bvsdiv #x000000ca  #x00000098 ))))
(assert (=> (bvsge (bvadd bv_3 #x000000d8 ) (bvor #x0000009b  #x0000001b )) (and (and bool_2 bool_3) (bvsgt #x000000f5  bv_0))))
(assert (bvslt (bvnor (bvxor bv_1 #x000000d6 ) (bvsdiv #x0000009d  bv_1)) (bvsub (bvmul bv_0 bv_1) (bvudiv #x0000004c  #x0000009a ))))
(check-sat)
(exit)
