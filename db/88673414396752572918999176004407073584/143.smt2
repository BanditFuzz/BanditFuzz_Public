(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.21187520027160645
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.16289496421813965
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.21132302284240723
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (and (bvslt (bvor #x000000f7  #x00000034 ) (bvashr bv_3 bv_0)) (bvsle (bvmul bv_4 bv_0) (bvnand bv_3 #x00000002 ))))
(assert (bvsgt (bvxnor (bvxnor #x0000008e  bv_4) (bvsub #x0000008e  bv_2)) (bvsub (bvsub bv_2 bv_1) (bvashr bv_0 bv_1))))
(assert (=> (and (bvslt bv_4 bv_3) (bvsgt #x00000052  #x0000002c )) (bvsgt (bvnand bv_2 bv_0) (bvsub bv_1 bv_2))))
(assert (or (bvult (bvsdiv #x000000a9  bv_1) (bvurem bv_4 #x00000044 )) (bvsle (bvsrem bv_4 #x00000087 ) (bvsub #x000000cc  #x00000002 ))))
(assert (and (bvsgt (bvxor bv_3 bv_4) (bvsrem #x00000041  bv_0)) (bvsge (bvsub bv_3 bv_1) (bvxor #x00000028  #x000000f6 ))))
(check-sat)
(exit)
