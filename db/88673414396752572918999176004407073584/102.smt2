(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.19456839561462402
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.168670654296875
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.3055918216705322
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (or (bvugt (bvnor #x0000001f  #x00000094 ) (bvxnor bv_1 bv_1)) (or (xor false false) (bvsgt bv_3 bv_1))))
(assert (bvsge (bvsmod (bvlshr bv_4 bv_3) (bvashr #x00000051  #x000000a6 )) (bvashr (bvsub bv_4 bv_4) (bvxnor #x00000007  bv_1))))
(assert (bvuge (bvsdiv (bvlshr #x0000000f  #x000000cb ) (bvsdiv #x000000c8  #x00000074 )) (bvor (bvurem bv_0 bv_3) (bvxor bv_1 #x000000b7 ))))
(assert (and (bvsle (bvnor bv_2 #x0000005d ) (bvsub bv_3 bv_0)) (and (bvsle #x0000000e  bv_4) (bvsle #x00000079  bv_2))))
(assert (xor (not (bvugt bv_4 #x000000ab )) (=> (bvuge #x000000d9  #x00000040 ) (xor bool_1 false))))
(check-sat)
(exit)
