(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.1826622486114502
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.17504596710205078
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.2198035717010498
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvsle (bvadd (bvsmod #x000000fd  bv_2) (bvmul bv_4 #x000000c5 )) (bvshl (bvsmod #x00000071  bv_3) (bvor #x0000008b  bv_2))))
(assert (and (bvuge (bvlshr bv_3 bv_0) (bvurem bv_0 bv_2)) (=> (and true bool_3) (bvule bv_2 #x00000011 ))))
(assert (not (bvsle (bvmul bv_2 bv_0) (bvadd bv_2 #x00000030 ))))
(assert (and (=> (xor false bool_1) (=> false bool_1)) (or (bvuge #x00000027  #x0000000c ) (xor bool_1 bool_2))))
(assert (not (bvuge (bvsmod bv_1 #x00000047 ) (bvnor #x0000003b  bv_1))))
(check-sat)
(exit)
