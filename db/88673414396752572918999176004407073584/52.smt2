(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.191209077835083
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.16655898094177246
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.17380785942077637
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (=> (not (and true bool_2)) (bvsge (bvnor #x000000b9  bv_2) (bvxor bv_0 #x000000bb ))))
(assert (bvslt (bvnor (bvsmod bv_2 bv_1) (bvadd bv_3 #x0000007f )) (bvor (bvmul bv_3 #x0000008a ) (bvxnor bv_3 bv_0))))
(assert (or (bvuge (bvadd bv_2 bv_1) (bvxor #x0000008a  bv_0)) (and (bvsle bv_3 #x00000093 ) (not bool_2))))
(assert (bvsgt (bvudiv (bvsmod bv_4 bv_0) (bvxor #x000000b8  #x00000044 )) (bvsrem (bvxor bv_1 bv_4) (bvshl bv_0 #x0000002d ))))
(assert (not (or (bvule #x0000002f  #x00000087 ) (not bool_2))))
(check-sat)
(exit)
