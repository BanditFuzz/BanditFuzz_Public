(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.2216510772705078
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.15979743003845215
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.17422890663146973
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvsge (bvurem (bvnand #x000000a2  bv_3) (bvashr #x000000f9  #x0000004e )) (bvmul (bvsdiv bv_1 bv_0) (bvor #x000000ca  bv_0))))
(assert (bvult (bvor (bvsmod #x0000005f  bv_2) (bvmul #x0000009c  #x000000c8 )) (bvnor (bvurem #x0000009e  #x00000057 ) (bvshl bv_2 bv_3))))
(assert (and (=> (xor bool_3 bool_0) (bvule bv_4 bv_2)) (xor (and true bool_2) (and true false))))
(assert (bvult (bvsdiv (bvlshr bv_0 bv_4) (bvxor #x0000003d  bv_0)) (bvxnor (bvashr #x00000074  bv_2) (bvnor #x00000009  bv_1))))
(assert (bvslt (bvsrem (bvxnor #x00000079  bv_0) (bvshl bv_1 bv_3)) (bvnand (bvand bv_4 #x00000048 ) (bvsrem bv_0 bv_1))))
(check-sat)
(exit)
