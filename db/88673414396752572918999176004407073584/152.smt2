(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.20209693908691406
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.24769020080566406
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.24491643905639648
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (xor (bvule (bvmul bv_1 #x0000008b ) (bvxor bv_3 #x00000086 )) (bvsle (bvashr #x000000fe  #x00000005 ) (bvsub bv_3 bv_2))))
(assert (xor (or (bvsge #x00000009  #x000000bf ) (bvult #x00000012  bv_1)) (xor (and bool_3 true) (bvsgt #x000000ad  bv_0))))
(assert (=> (bvsge (bvand #x000000c0  #x000000d8 ) (bvurem bv_2 #x00000005 )) (or (or bool_1 false) (bvslt bv_4 bv_3))))
(assert (bvsgt (bvnand (bvxor bv_4 #x000000dd ) (bvsrem bv_1 #x0000003c )) (bvsrem (bvudiv bv_4 #x0000003f ) (bvsrem #x000000d0  #x00000066 ))))
(assert (xor (and (not bool_1) (=> true true)) (and (bvult #x0000003c  #x00000026 ) (bvsge bv_0 bv_2))))
(check-sat)
(exit)
