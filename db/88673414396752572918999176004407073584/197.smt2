(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.19471359252929688
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.24256062507629395
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.21938300132751465
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvslt (bvurem (bvurem bv_3 bv_3) (bvsub bv_2 bv_2)) (bvurem (bvmul #x0000002f  bv_0) (bvlshr #x0000005c  bv_0))))
(assert (not (bvsge (bvadd bv_1 bv_3) (bvurem #x000000e4  #x00000028 ))))
(assert (and (bvuge (bvudiv #x00000011  #x0000007c ) (bvnor #x0000002c  bv_0)) (bvslt (bvadd bv_1 #x0000003b ) (bvurem bv_3 #x0000003c ))))
(assert (not (bvugt (bvsrem bv_2 #x00000098 ) (bvadd bv_0 bv_3))))
(assert (bvule (bvxnor (bvor #x00000096  #x00000073 ) (bvshl #x00000097  #x000000a7 )) (bvxnor (bvshl #x0000004a  bv_1) (bvlshr bv_0 #x0000004b ))))
(check-sat)
(exit)
