(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.19541668891906738
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.142439603805542
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.1377108097076416
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvsgt (bvshl (bvxnor bv_0 #x000000d9 ) (bvlshr bv_4 #x00000078 )) (bvashr (bvudiv bv_2 #x0000001f ) (bvnor bv_1 #x0000000e ))))
(assert (not (bvsge (bvand #x00000001  #x00000027 ) (bvsdiv #x000000ad  bv_3))))
(assert (bvugt (bvsmod (bvnor #x00000075  #x000000d0 ) (bvurem #x00000089  #x000000da )) (bvsub (bvxnor #x000000c8  #x0000005b ) (bvudiv bv_1 bv_4))))
(assert (bvslt (bvsub (bvor #x00000001  bv_0) (bvudiv bv_1 bv_1)) (bvxnor (bvudiv #x000000a3  bv_2) (bvmul bv_1 #x00000095 ))))
(assert (=> (bvule (bvadd bv_4 #x000000f0 ) (bvadd bv_0 bv_3)) (bvslt (bvmul #x00000085  #x00000090 ) (bvsmod bv_1 #x00000040 ))))
(check-sat)
(exit)
