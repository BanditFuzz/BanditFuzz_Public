(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.16956281661987305
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.16723179817199707
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.24733304977416992
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvule (bvsrem (bvnand bv_4 #x00000089 ) (bvshl #x00000063  #x0000001d )) (bvsub (bvand #x000000cf  #x000000d4 ) (bvurem bv_0 #x000000e4 ))))
(assert (=> (or (bvsgt bv_3 bv_3) (=> bool_0 bool_1)) (bvule (bvnand bv_1 #x000000f3 ) (bvxor bv_3 #x0000009e ))))
(assert (or (xor (bvsgt #x00000089  bv_4) (and bool_0 true)) (bvsgt (bvxnor #x000000c4  #x0000001e ) (bvlshr #x000000fb  bv_0))))
(assert (bvsge (bvmul (bvlshr bv_3 #x000000ea ) (bvnand #x0000004a  #x00000095 )) (bvshl (bvsdiv bv_0 #x0000009f ) (bvadd bv_1 #x000000a1 ))))
(assert (and (bvsge (bvlshr bv_1 #x0000009f ) (bvand #x00000047  bv_4)) (bvuge (bvsdiv #x00000001  bv_1) (bvadd bv_3 #x0000008c ))))
(check-sat)
(exit)
