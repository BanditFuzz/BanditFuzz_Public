(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.18377423286437988
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.1680757999420166
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.22434544563293457
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvuge (bvnand (bvurem bv_4 #x000000e3 ) (bvand #x00000045  bv_1)) (bvsmod (bvshl #x0000005c  bv_2) (bvsmod #x00000059  bv_4))))
(assert (=> (bvsge (bvnor bv_1 #x000000d1 ) (bvudiv #x00000046  bv_0)) (bvult (bvshl bv_2 #x0000000f ) (bvadd bv_0 #x000000c8 ))))
(assert (=> (xor (not bool_3) (=> bool_2 bool_3)) (=> (bvult #x0000008e  bv_3) (=> bool_3 bool_2))))
(assert (bvuge (bvor (bvnor bv_2 #x0000006d ) (bvsrem #x0000004e  bv_0)) (bvsrem (bvsub bv_3 bv_0) (bvand bv_3 #x0000009c ))))
(assert (and (=> (bvsge bv_0 bv_4) (=> false false)) (not (bvsge #x00000071  #x000000a3 ))))
(check-sat)
(exit)
