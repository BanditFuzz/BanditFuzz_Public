(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.21761608123779297
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.14087891578674316
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.20282983779907227
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvuge (bvsdiv (bvshl bv_3 bv_1) (bvashr #x0000000f  #x0000005b )) (bvand (bvadd bv_3 bv_4) (bvurem bv_3 bv_4))))
(assert (xor (bvuge (bvlshr bv_3 #x0000008d ) (bvudiv #x000000b4  #x00000003 )) (bvugt (bvurem #x00000009  bv_2) (bvand #x000000c6  bv_2))))
(assert (bvult (bvmul (bvsdiv bv_0 #x00000095 ) (bvurem #x000000d3  #x0000004e )) (bvxor (bvsmod #x00000002  #x000000be ) (bvor #x000000b0  #x0000003d ))))
(assert (and (bvugt (bvadd #x000000e3  bv_2) (bvnor bv_1 #x00000069 )) (and (not bool_2) (bvslt bv_1 bv_4))))
(assert (bvule (bvashr (bvnand bv_2 #x0000000c ) (bvxor #x00000096  bv_0)) (bvxnor (bvsrem #x00000008  bv_2) (bvashr bv_3 bv_4))))
(check-sat)
(exit)
