(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.1841120719909668
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.1587824821472168
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.21607732772827148
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (or (=> (=> bool_4 bool_1) (bvult bv_3 bv_0)) (bvugt (bvlshr bv_2 #x00000087 ) (bvnor #x0000008c  #x000000cb ))))
(assert (bvsle (bvxor (bvlshr bv_1 #x00000088 ) (bvurem bv_2 #x000000bf )) (bvlshr (bvshl #x0000005f  #x00000056 ) (bvsub bv_4 #x0000001b ))))
(assert (bvult (bvudiv (bvshl #x00000007  bv_1) (bvsdiv #x00000096  #x0000000d )) (bvsdiv (bvsub bv_0 bv_1) (bvor #x0000001c  bv_1))))
(assert (xor (=> (and true true) (bvule bv_3 #x000000e4 )) (bvule (bvor #x000000ae  #x000000a7 ) (bvsdiv bv_2 #x0000001c ))))
(assert (bvslt (bvsrem (bvxor #x0000005c  #x0000007d ) (bvnor bv_3 #x0000001a )) (bvor (bvnor bv_1 #x00000035 ) (bvxor #x00000005  #x000000a2 ))))
(check-sat)
(exit)
