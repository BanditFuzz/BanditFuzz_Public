(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.22306537628173828
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.16942095756530762
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.2395012378692627
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (or (bvult (bvsub #x0000005e  #x00000074 ) (bvsmod bv_0 bv_0)) (or (and bool_0 bool_1) (=> bool_0 false))))
(assert (=> (bvsgt (bvlshr bv_3 #x000000ab ) (bvxor bv_4 bv_2)) (bvule (bvnand #x00000038  #x000000b2 ) (bvxor #x00000043  bv_3))))
(assert (or (bvsge (bvsmod #x000000c2  bv_1) (bvudiv #x000000ef  #x00000095 )) (not (bvslt bv_1 bv_3))))
(assert (=> (bvslt (bvxnor bv_1 bv_2) (bvurem bv_3 bv_2)) (bvsgt (bvxnor #x00000048  #x00000097 ) (bvxor #x00000071  #x0000008b ))))
(assert (=> (bvuge (bvand bv_4 bv_4) (bvnor #x00000098  bv_1)) (bvsgt (bvsmod bv_0 bv_2) (bvsdiv #x0000006b  #x000000c1 ))))
(check-sat)
(exit)
