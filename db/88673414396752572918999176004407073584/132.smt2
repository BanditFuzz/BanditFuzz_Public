(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.1970219612121582
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.14747238159179688
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.21631097793579102
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvsle (bvxnor (bvnand bv_4 #x0000004d ) (bvlshr bv_2 bv_0)) (bvashr (bvsrem #x00000019  #x000000e7 ) (bvudiv #x00000042  #x00000087 ))))
(assert (bvsgt (bvadd (bvnor bv_1 #x00000053 ) (bvsdiv #x000000d4  bv_1)) (bvmul (bvsmod #x0000001d  bv_2) (bvnor #x00000034  bv_0))))
(assert (bvule (bvsdiv (bvnand #x00000082  #x000000af ) (bvlshr #x0000009d  bv_0)) (bvudiv (bvnor bv_2 bv_1) (bvsmod bv_3 bv_0))))
(assert (=> (or (not bool_3) (or bool_2 false)) (not (or false bool_0))))
(assert (and (not (bvsgt #x0000009f  #x00000038 )) (bvsge (bvnor #x00000003  #x0000000b ) (bvudiv bv_1 #x000000d0 ))))
(check-sat)
(exit)
