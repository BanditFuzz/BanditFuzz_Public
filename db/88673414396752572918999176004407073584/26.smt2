(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.19166254997253418
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.2637660503387451
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.20290374755859375
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (=> (bvugt (bvshl #x000000ba  bv_0) (bvand #x000000ba  bv_3)) (bvule (bvand #x000000e4  #x00000024 ) (bvsdiv #x00000090  #x00000018 ))))
(assert (bvuge (bvadd (bvadd #x00000011  bv_0) (bvxor bv_2 bv_1)) (bvlshr (bvsmod bv_2 bv_0) (bvxnor #x00000024  bv_0))))
(assert (bvsgt (bvxnor (bvor #x0000004e  bv_2) (bvor bv_3 #x0000002a )) (bvshl (bvnor #x000000da  #x000000a2 ) (bvand #x000000ad  #x000000e4 ))))
(assert (or (or (bvsgt #x0000009b  bv_0) (and bool_4 true)) (bvuge (bvurem bv_3 #x00000013 ) (bvnor bv_2 #x000000d9 ))))
(assert (bvule (bvnand (bvsmod bv_0 #x000000b9 ) (bvor bv_3 bv_2)) (bvsrem (bvsdiv #x000000b4  #x00000015 ) (bvudiv #x00000009  bv_4))))
(check-sat)
(exit)
