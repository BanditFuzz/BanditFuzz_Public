(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.16366934776306152
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.16257143020629883
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.18181490898132324
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (=> (not (bvsle #x000000db  #x00000052 )) (xor (bvult bv_3 #x00000080 ) (and bool_4 bool_4))))
(assert (or (not (or bool_0 bool_2)) (bvslt (bvshl #x00000099  bv_0) (bvmul bv_0 bv_1))))
(assert (and (bvsge (bvmul #x000000ac  #x00000001 ) (bvlshr bv_4 #x0000001e )) (bvugt (bvsrem bv_2 #x00000044 ) (bvand bv_2 #x00000013 ))))
(assert (bvule (bvxor (bvand #x00000088  #x000000b4 ) (bvlshr bv_1 bv_2)) (bvashr (bvand bv_2 bv_2) (bvashr #x00000099  bv_1))))
(assert (bvsge (bvxnor (bvadd bv_0 bv_0) (bvmul bv_2 bv_2)) (bvnand (bvxor bv_0 #x00000083 ) (bvsdiv bv_1 #x000000ed ))))
(check-sat)
(exit)
