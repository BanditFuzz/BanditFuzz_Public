(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.14504432678222656
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.1803748607635498
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.13654112815856934
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvugt (bvxnor (bvashr bv_3 #x00000021 ) (bvsub #x0000003e  #x000000bd )) (bvashr (bvlshr #x00000063  bv_3) (bvor bv_4 bv_3))))
(assert (bvuge (bvnand (bvsub bv_3 bv_1) (bvurem #x000000bc  bv_0)) (bvnor (bvxor #x000000e1  #x0000003b ) (bvashr #x000000ed  #x000000d3 ))))
(assert (=> (bvuge (bvshl bv_3 bv_0) (bvsmod #x000000dd  #x000000d9 )) (bvugt (bvmul #x000000d3  #x00000074 ) (bvsrem #x000000f4  #x000000a6 ))))
(assert (bvsgt (bvsmod (bvxor #x0000009f  #x00000047 ) (bvxor #x000000a7  bv_3)) (bvand (bvnor bv_2 #x00000079 ) (bvashr bv_0 bv_1))))
(assert (and (xor (bvsge #x000000b4  #x00000027 ) (bvule #x000000e9  #x000000dd )) (and (bvsge bv_4 #x00000008 ) (bvule bv_3 bv_1))))
(check-sat)
(exit)
