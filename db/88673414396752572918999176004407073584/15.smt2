(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.23452067375183105
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.17940616607666016
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.1851959228515625
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (xor (bvugt (bvxnor #x0000002f  bv_4) (bvurem #x000000d0  #x00000079 )) (=> (bvule #x000000f3  #x00000099 ) (bvsge bv_4 bv_4))))
(assert (not (bvugt (bvsub #x0000004f  #x00000051 ) (bvxnor bv_3 bv_1))))
(assert (bvslt (bvashr (bvor #x000000a8  bv_0) (bvnand bv_2 #x000000cb )) (bvsrem (bvsrem #x0000005b  bv_3) (bvsub bv_4 #x000000aa ))))
(assert (bvule (bvor (bvor bv_3 #x0000003a ) (bvudiv #x000000fa  bv_3)) (bvnand (bvnand #x000000b8  bv_1) (bvadd bv_4 #x0000000e ))))
(assert (bvsge (bvashr (bvsmod bv_3 #x00000046 ) (bvshl #x000000af  bv_0)) (bvxor (bvsdiv bv_2 bv_3) (bvudiv #x00000062  #x00000086 ))))
(check-sat)
(exit)
