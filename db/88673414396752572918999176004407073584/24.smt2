(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.20184564590454102
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.16542363166809082
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.20933890342712402
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (or (=> (bvsge bv_4 #x00000037 ) (bvult #x00000086  #x0000004e )) (not (bvslt bv_0 #x0000005d ))))
(assert (bvsgt (bvsmod (bvnand bv_0 bv_3) (bvnand bv_1 bv_4)) (bvurem (bvsrem bv_1 bv_0) (bvnor bv_1 #x00000065 ))))
(assert (bvslt (bvudiv (bvand bv_2 bv_3) (bvurem #x000000e8  bv_4)) (bvsmod (bvashr bv_1 bv_0) (bvlshr bv_2 bv_1))))
(assert (bvuge (bvxor (bvudiv #x00000052  #x000000f9 ) (bvxor bv_1 #x000000eb )) (bvsub (bvmul #x0000002a  bv_1) (bvor #x0000001e  bv_2))))
(assert (not (bvult (bvadd bv_0 bv_3) (bvand bv_2 #x00000006 ))))
(check-sat)
(exit)
