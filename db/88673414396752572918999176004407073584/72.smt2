(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.1649322509765625
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.40993642807006836
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.32028889656066895
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvsge (bvurem (bvor #x00000083  bv_0) (bvudiv bv_1 bv_1)) (bvsmod (bvudiv bv_1 bv_4) (bvshl #x00000010  bv_4))))
(assert (bvslt (bvudiv (bvshl #x00000039  #x0000006c ) (bvmul #x000000ca  bv_2)) (bvsrem (bvnor #x00000044  bv_3) (bvsdiv bv_3 #x00000008 ))))
(assert (and (bvslt (bvand bv_3 #x0000006f ) (bvxnor bv_2 bv_0)) (not (bvugt #x00000088  bv_1))))
(assert (=> (bvuge (bvsmod #x0000005c  bv_4) (bvand bv_2 #x0000006e )) (bvsle (bvxnor bv_2 bv_3) (bvor bv_0 #x000000c0 ))))
(assert (and (=> (bvsgt bv_2 bv_3) (bvsge #x0000008d  #x000000fc )) (bvsgt (bvmul #x00000062  bv_0) (bvsmod #x000000ed  bv_0))))
(check-sat)
(exit)
