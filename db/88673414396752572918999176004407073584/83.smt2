(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.19384336471557617
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.16472887992858887
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.1856396198272705
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvuge (bvnor (bvsdiv #x0000001c  #x00000074 ) (bvadd bv_2 bv_2)) (bvsub (bvsmod bv_2 #x00000062 ) (bvsdiv #x00000082  #x0000000d ))))
(assert (=> (bvslt (bvxor #x00000049  bv_1) (bvsmod bv_0 #x000000be )) (not (not bool_4))))
(assert (bvslt (bvshl (bvxor #x0000002b  bv_1) (bvurem bv_2 bv_2)) (bvashr (bvsub #x000000cf  bv_0) (bvlshr #x000000ca  bv_0))))
(assert (and (bvule (bvnand #x0000009d  bv_4) (bvurem bv_4 bv_2)) (=> (xor bool_0 bool_4) (bvsgt #x0000008f  bv_1))))
(assert (bvsge (bvadd (bvand #x000000cb  #x0000008d ) (bvurem bv_4 #x00000060 )) (bvnor (bvxor bv_2 #x000000f1 ) (bvand bv_3 #x0000004e ))))
(check-sat)
(exit)
