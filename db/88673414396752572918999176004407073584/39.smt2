(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.1417536735534668
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.11818599700927734
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.19009685516357422
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (and (bvsge (bvsmod #x0000006d  bv_3) (bvurem bv_4 bv_2)) (bvule (bvor #x000000db  #x000000b5 ) (bvmul #x000000dd  bv_0))))
(assert (bvugt (bvsdiv (bvsub bv_2 bv_2) (bvashr #x000000a9  bv_3)) (bvshl (bvurem #x00000077  bv_2) (bvand #x00000046  bv_0))))
(assert (bvsgt (bvudiv (bvsdiv #x000000cb  #x000000c8 ) (bvsdiv #x00000020  bv_4)) (bvlshr (bvurem bv_0 #x00000023 ) (bvor bv_1 #x00000026 ))))
(assert (bvule (bvsdiv (bvudiv bv_3 bv_0) (bvudiv #x000000b2  bv_0)) (bvsmod (bvnor #x00000068  #x000000de ) (bvxnor #x00000037  bv_3))))
(assert (=> (xor (bvult #x0000000c  #x00000059 ) (bvsgt #x0000009f  #x000000bb )) (bvsge (bvsrem bv_4 #x00000015 ) (bvand bv_0 #x00000018 ))))
(check-sat)
(exit)
