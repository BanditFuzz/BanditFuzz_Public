(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.19748687744140625
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.18922805786132812
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.2316899299621582
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvule (bvlshr (bvsmod #x00000074  #x0000009b ) (bvmul #x00000008  bv_1)) (bvand (bvnand bv_1 #x00000033 ) (bvsub bv_0 bv_4))))
(assert (xor (not (=> true false)) (bvuge (bvnand #x000000ac  #x00000012 ) (bvor bv_2 bv_0))))
(assert (and (bvugt (bvashr bv_2 bv_1) (bvand bv_2 #x00000030 )) (and (or true true) (xor bool_3 bool_4))))
(assert (and (bvugt (bvlshr bv_1 #x00000085 ) (bvand bv_1 bv_4)) (bvsgt (bvsdiv #x000000c9  bv_4) (bvshl bv_3 #x00000061 ))))
(assert (or (and (bvuge bv_4 #x00000075 ) (or true bool_0)) (bvult (bvand #x000000c0  #x00000001 ) (bvsmod #x000000d5  #x00000096 ))))
(check-sat)
(exit)
