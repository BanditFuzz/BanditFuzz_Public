(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.19495177268981934
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.14117932319641113
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.23303723335266113
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (and (and (=> true true) (bvslt #x0000008a  bv_3)) (bvule (bvxor #x00000009  bv_1) (bvsub #x00000066  #x00000037 ))))
(assert (not (bvsge (bvnand bv_3 bv_2) (bvsdiv #x0000009c  bv_4))))
(assert (bvuge (bvsdiv (bvsrem bv_1 bv_0) (bvxnor #x00000075  bv_2)) (bvsdiv (bvnor #x0000001a  bv_2) (bvnand bv_2 #x000000bb ))))
(assert (bvugt (bvashr (bvsdiv #x00000076  #x000000c3 ) (bvurem #x00000025  #x00000082 )) (bvmul (bvand #x0000007f  bv_4) (bvor #x000000ad  #x000000af ))))
(assert (not (bvsgt (bvmul #x000000a0  #x0000001b ) (bvurem #x00000096  bv_1))))
(check-sat)
(exit)
