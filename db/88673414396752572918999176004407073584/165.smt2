(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.18995189666748047
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.16905736923217773
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.2223665714263916
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvslt (bvudiv (bvxnor bv_0 #x00000089 ) (bvsmod #x00000075  bv_1)) (bvnand (bvnand #x000000cc  #x0000007a ) (bvsdiv #x0000008e  #x0000002d ))))
(assert (bvsge (bvnand (bvnand #x000000f7  #x00000013 ) (bvudiv bv_3 bv_3)) (bvor (bvlshr bv_4 #x0000003d ) (bvlshr bv_4 #x0000001f ))))
(assert (bvsgt (bvand (bvurem #x00000090  bv_4) (bvsdiv bv_1 bv_3)) (bvudiv (bvsmod #x00000081  #x0000000b ) (bvsub bv_0 #x00000090 ))))
(assert (bvult (bvashr (bvlshr #x000000cb  bv_1) (bvand #x000000a9  bv_4)) (bvlshr (bvnand bv_1 bv_2) (bvxnor #x00000098  bv_0))))
(assert (=> (xor (bvsle #x000000ce  bv_2) (bvule bv_2 #x000000e8 )) (bvugt (bvnor bv_1 bv_2) (bvxor bv_1 #x000000b9 ))))
(check-sat)
(exit)
