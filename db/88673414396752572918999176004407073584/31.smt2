(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.15942931175231934
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.14947724342346191
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.23650026321411133
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvslt (bvmul (bvashr #x00000015  bv_2) (bvand #x00000073  #x0000000c )) (bvudiv (bvlshr bv_4 bv_0) (bvnor bv_0 #x000000e9 ))))
(assert (or (=> (xor true bool_2) (or bool_0 true)) (bvslt (bvadd #x00000000  bv_1) (bvshl bv_1 bv_4))))
(assert (or (=> (and true bool_1) (bvslt #x00000073  #x00000076 )) (or (bvugt bv_2 bv_4) (=> false bool_1))))
(assert (bvslt (bvxor (bvsub #x00000039  #x00000005 ) (bvudiv bv_2 bv_4)) (bvadd (bvand #x00000064  #x0000002f ) (bvmul #x00000098  #x0000009f ))))
(assert (bvsge (bvnor (bvashr #x000000de  #x00000017 ) (bvxnor bv_3 #x00000092 )) (bvlshr (bvxnor #x00000032  bv_1) (bvshl #x000000f4  #x00000074 ))))
(check-sat)
(exit)
