(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.18674755096435547
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.14897561073303223
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.21172618865966797
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (xor (or (bvuge #x00000063  #x0000002f ) (bvsle bv_1 #x000000b2 )) (or (or true false) (bvsge #x00000023  bv_1))))
(assert (xor (bvule (bvxor #x00000026  bv_3) (bvurem bv_1 #x000000cd )) (and (xor bool_0 bool_0) (not true))))
(assert (xor (bvule (bvadd #x0000001b  #x00000047 ) (bvsrem #x000000f6  bv_1)) (=> (bvuge #x00000059  bv_4) (xor false false))))
(assert (or (or (=> false false) (and bool_3 bool_2)) (or (=> bool_1 bool_3) (xor bool_4 bool_0))))
(assert (and (or (or true bool_3) (bvsge bv_2 bv_1)) (bvule (bvadd bv_3 bv_4) (bvsdiv bv_2 #x00000062 ))))
(check-sat)
(exit)
