(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.23851251602172852
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.17913365364074707
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.2502310276031494
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (or (or (not false) (not false)) (bvugt (bvmul #x000000e1  bv_4) (bvand bv_1 bv_0))))
(assert (bvsge (bvurem (bvnor bv_4 bv_1) (bvnor bv_4 bv_0)) (bvlshr (bvand #x00000049  #x000000df ) (bvashr bv_0 bv_3))))
(assert (not (or (bvuge #x000000a5  #x000000d0 ) (bvsle #x0000000f  #x0000001e ))))
(assert (xor (and (bvsgt bv_0 #x0000006d ) (bvule bv_2 #x000000fc )) (not (bvsgt bv_4 #x00000003 ))))
(assert (xor (bvsle (bvurem bv_2 #x00000016 ) (bvlshr bv_3 #x00000004 )) (bvsge (bvand #x0000000f  bv_0) (bvxnor bv_2 bv_3))))
(check-sat)
(exit)
