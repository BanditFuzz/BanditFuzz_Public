(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.2311234474182129
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.1542985439300537
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.2155759334564209
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvule (bvurem (bvnand #x000000a1  bv_2) (bvsdiv #x00000044  bv_2)) (bvand (bvashr #x0000003d  #x0000005d ) (bvudiv bv_2 bv_1))))
(assert (and (bvule (bvlshr bv_2 bv_0) (bvadd bv_1 bv_3)) (bvsle (bvsmod #x00000075  bv_1) (bvand bv_2 #x000000bf ))))
(assert (and (bvslt (bvlshr #x0000009b  bv_0) (bvmul #x0000001b  bv_4)) (bvult (bvlshr bv_0 #x000000a0 ) (bvlshr bv_2 bv_0))))
(assert (bvugt (bvshl (bvxnor bv_1 #x0000006b ) (bvsmod #x00000013  #x0000000e )) (bvshl (bvand #x000000a7  bv_1) (bvshl bv_2 #x000000ee ))))
(assert (or (or (and bool_2 false) (=> false bool_2)) (bvslt (bvsmod bv_1 #x000000bc ) (bvadd #x0000009d  bv_3))))
(check-sat)
(exit)
