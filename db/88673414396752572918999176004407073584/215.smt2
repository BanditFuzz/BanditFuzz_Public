(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.14677166938781738
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.15655183792114258
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.24985504150390625
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (or (=> (bvuge bv_2 #x00000070 ) (or bool_4 bool_0)) (bvsle (bvurem bv_1 #x000000d0 ) (bvmul #x000000b6  #x000000cb ))))
(assert (bvsle (bvand (bvadd #x00000038  #x00000086 ) (bvxor #x000000fe  #x00000084 )) (bvshl (bvurem #x000000a7  bv_0) (bvsmod #x00000029  #x0000005b ))))
(assert (bvsge (bvnand (bvsub #x00000029  bv_2) (bvsmod bv_2 bv_1)) (bvshl (bvurem bv_3 #x0000006a ) (bvand #x00000046  #x00000048 ))))
(assert (bvule (bvnand (bvshl #x0000007d  bv_4) (bvmul bv_3 #x000000f5 )) (bvshl (bvnand bv_3 bv_2) (bvshl bv_1 #x00000066 ))))
(assert (bvult (bvlshr (bvand #x00000081  bv_1) (bvadd bv_2 bv_2)) (bvsrem (bvnand #x000000d2  bv_4) (bvand bv_1 #x00000075 ))))
(check-sat)
(exit)
