(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.17466163635253906
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.1346299648284912
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.20490360260009766
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvugt (bvxnor (bvnand #x000000a8  #x000000b5 ) (bvand bv_3 bv_1)) (bvsmod (bvadd bv_4 bv_1) (bvashr #x000000c0  #x00000002 ))))
(assert (bvule (bvsdiv (bvmul #x000000d2  #x0000006e ) (bvudiv #x00000012  bv_0)) (bvsub (bvsmod #x00000067  #x000000bf ) (bvlshr #x00000029  #x000000b6 ))))
(assert (=> (and (bvuge #x000000cc  #x0000006d ) (bvugt #x000000e7  bv_1)) (xor (xor bool_2 bool_0) (bvult #x000000c1  #x000000a7 ))))
(assert (=> (bvsgt (bvor #x0000003e  bv_0) (bvsrem bv_0 bv_4)) (bvugt (bvmul bv_4 #x000000e3 ) (bvsdiv #x0000006e  bv_3))))
(assert (and (not (bvule bv_1 bv_0)) (or (bvugt bv_3 bv_3) (bvsgt bv_0 #x000000bf ))))
(check-sat)
(exit)
