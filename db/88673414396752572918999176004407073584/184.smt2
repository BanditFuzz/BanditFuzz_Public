(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.20427179336547852
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.128570556640625
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.26946473121643066
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (and (xor (not true) (=> true bool_4)) (bvuge (bvlshr #x0000002f  #x0000005a ) (bvsrem #x000000d8  #x000000cb ))))
(assert (bvule (bvadd (bvsrem bv_2 #x00000015 ) (bvnand bv_1 bv_3)) (bvashr (bvxor #x000000d0  bv_1) (bvxor #x0000000a  #x00000012 ))))
(assert (or (xor (or true bool_3) (or bool_0 bool_0)) (bvsle (bvmul #x000000cf  #x00000069 ) (bvashr #x00000056  #x0000006b ))))
(assert (not (bvuge (bvnand #x000000aa  #x000000fd ) (bvudiv bv_1 #x000000fa ))))
(assert (bvsle (bvashr (bvnor bv_3 bv_3) (bvor bv_0 bv_1)) (bvsmod (bvsub #x00000071  #x000000f1 ) (bvsrem #x000000a5  bv_2))))
(check-sat)
(exit)
