(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.1784811019897461
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.22060275077819824
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.18719720840454102
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvugt (bvsub (bvsub #x00000056  #x0000003f ) (bvmul #x0000003a  bv_4)) (bvsrem (bvnand #x0000002c  bv_3) (bvashr #x0000004d  bv_2))))
(assert (=> (bvugt (bvor bv_4 #x0000008a ) (bvsdiv bv_1 #x000000d2 )) (bvugt (bvnand #x00000060  #x000000a6 ) (bvsub #x0000004f  #x00000047 ))))
(assert (bvuge (bvsmod (bvnor #x00000099  #x000000dc ) (bvshl #x0000009f  bv_3)) (bvor (bvurem #x0000002f  bv_4) (bvashr bv_4 bv_3))))
(assert (not (bvsle (bvshl #x00000077  bv_3) (bvnor #x000000d1  #x0000001b ))))
(assert (bvslt (bvsub (bvxnor bv_1 bv_4) (bvashr #x00000003  #x000000ab )) (bvadd (bvsmod bv_1 bv_2) (bvsub bv_1 #x00000090 ))))
(check-sat)
(exit)
