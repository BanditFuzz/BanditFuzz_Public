(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.18771719932556152
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.19929790496826172
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.20367765426635742
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (xor (bvuge (bvadd bv_3 bv_0) (bvudiv bv_2 bv_0)) (bvule (bvor bv_0 #x00000079 ) (bvxor bv_1 #x0000004e ))))
(assert (and (bvslt (bvsub #x000000b1  #x0000004f ) (bvashr bv_0 bv_3)) (or (not bool_0) (bvsle bv_4 bv_2))))
(assert (=> (and (bvsge #x0000005d  bv_0) (or bool_3 true)) (bvsge (bvsub bv_4 bv_3) (bvmul #x00000071  bv_0))))
(assert (bvuge (bvand (bvurem bv_3 bv_3) (bvand bv_0 #x00000037 )) (bvurem (bvsub bv_1 bv_2) (bvsmod bv_0 bv_3))))
(assert (bvslt (bvxnor (bvsmod #x00000060  #x0000002d ) (bvlshr #x000000af  bv_0)) (bvlshr (bvsub #x000000b8  #x000000da ) (bvashr bv_4 bv_2))))
(check-sat)
(exit)
