(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.21928858757019043
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.1680150032043457
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.2298259735107422
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (or (bvsle (bvor #x00000056  bv_0) (bvsdiv #x000000db  #x00000044 )) (xor (bvsge #x0000000b  bv_2) (not false))))
(assert (bvugt (bvmul (bvlshr #x00000070  #x000000a5 ) (bvudiv #x00000002  bv_1)) (bvxor (bvxnor #x0000009a  #x00000044 ) (bvsrem #x000000c5  bv_0))))
(assert (bvslt (bvsmod (bvurem #x000000ab  bv_2) (bvnor bv_2 bv_1)) (bvshl (bvnor #x0000000e  bv_2) (bvsmod bv_2 bv_2))))
(assert (=> (bvult (bvor #x0000002c  bv_0) (bvshl bv_1 #x00000086 )) (and (bvsgt bv_4 bv_2) (or bool_0 bool_3))))
(assert (bvslt (bvshl (bvnand #x00000076  #x0000004f ) (bvadd bv_4 #x000000a7 )) (bvxor (bvudiv #x000000d3  #x000000f7 ) (bvnor #x000000e7  bv_1))))
(check-sat)
(exit)
