(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.20050668716430664
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.17000889778137207
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.23745346069335938
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (or (or (=> true true) (bvsge #x0000000e  bv_1)) (bvuge (bvsub bv_3 bv_4) (bvxnor bv_0 bv_2))))
(assert (and (xor (bvslt #x00000038  bv_0) (bvule bv_1 #x0000004e )) (bvugt (bvxor #x000000b2  #x00000071 ) (bvand #x00000025  bv_2))))
(assert (and (xor (and false true) (and bool_0 false)) (bvuge (bvor #x000000f3  #x00000048 ) (bvudiv #x000000e7  bv_3))))
(assert (bvsgt (bvxor (bvsrem bv_4 #x0000002e ) (bvnor bv_2 #x00000093 )) (bvashr (bvurem #x000000e1  bv_4) (bvashr bv_2 bv_1))))
(assert (not (bvslt (bvnand #x0000007b  #x000000f6 ) (bvsdiv bv_3 #x000000b1 ))))
(check-sat)
(exit)
