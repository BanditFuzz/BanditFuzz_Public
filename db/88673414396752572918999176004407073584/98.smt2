(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.2200479507446289
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.16966795921325684
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.22987747192382812
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (not (=> (not false) (bvslt #x00000000  bv_0))))
(assert (bvule (bvxnor (bvudiv #x000000ba  bv_4) (bvlshr bv_3 #x00000015 )) (bvshl (bvxnor bv_1 bv_3) (bvsrem #x0000007c  #x000000f7 ))))
(assert (=> (not (bvugt bv_3 #x0000004b )) (or (bvugt bv_2 bv_3) (bvsgt #x00000085  bv_0))))
(assert (or (bvsle (bvnand #x0000004a  #x00000004 ) (bvor #x000000db  bv_1)) (bvugt (bvashr bv_4 bv_0) (bvand #x000000e3  bv_1))))
(assert (and (bvsge (bvashr #x00000048  #x000000d4 ) (bvsrem #x00000013  #x000000e2 )) (not (bvule bv_0 bv_1))))
(check-sat)
(exit)
