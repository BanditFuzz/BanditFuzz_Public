(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.2022686004638672
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.1506366729736328
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.1510791778564453
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvsle (bvudiv (bvadd bv_4 #x000000eb ) (bvadd bv_0 #x000000c9 )) (bvxnor (bvand bv_3 #x00000051 ) (bvsrem bv_4 #x00000085 ))))
(assert (xor (bvuge (bvshl bv_4 #x0000003a ) (bvurem #x00000098  #x00000065 )) (or (and true bool_3) (and true bool_3))))
(assert (bvuge (bvsrem (bvxor bv_1 bv_0) (bvsdiv #x00000092  bv_4)) (bvnand (bvnand bv_2 #x000000c6 ) (bvxor bv_0 bv_0))))
(assert (not (=> (bvuge #x00000078  #x00000068 ) (bvuge bv_1 #x000000e4 ))))
(assert (bvsge (bvand (bvadd bv_0 #x00000044 ) (bvsdiv bv_3 bv_2)) (bvshl (bvnor bv_4 #x0000006e ) (bvxnor bv_4 bv_4))))
(check-sat)
(exit)
