(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.18670344352722168
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.1972041130065918
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.19775176048278809
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (not (or (xor bool_2 bool_1) (bvult bv_2 bv_3))))
(assert (bvugt (bvlshr (bvand bv_2 bv_2) (bvxnor bv_1 #x0000008a )) (bvurem (bvmul #x000000c2  bv_4) (bvsub bv_3 bv_0))))
(assert (and (bvslt (bvnand #x0000003e  bv_4) (bvxor #x000000ad  #x00000007 )) (bvsle (bvashr bv_0 #x000000ce ) (bvudiv bv_3 #x000000cc ))))
(assert (bvsge (bvashr (bvand bv_2 bv_3) (bvsub #x000000c9  bv_1)) (bvnor (bvurem #x0000000f  bv_1) (bvnand #x00000013  #x00000035 ))))
(assert (and (not (xor false bool_2)) (bvult (bvadd bv_1 bv_3) (bvudiv bv_4 #x000000b0 ))))
(check-sat)
(exit)
