(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.1864933967590332
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.1572563648223877
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.21210861206054688
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvule (bvand (bvsmod bv_1 #x000000a3 ) (bvnand bv_2 bv_1)) (bvxor (bvsub #x00000069  bv_2) (bvashr #x0000000d  bv_1))))
(assert (bvsle (bvxor (bvudiv #x000000ed  #x0000006b ) (bvsmod #x0000003e  #x00000098 )) (bvsdiv (bvudiv #x00000008  bv_2) (bvand bv_0 #x0000008b ))))
(assert (=> (bvugt (bvsdiv #x0000002e  #x00000014 ) (bvand #x000000ee  bv_0)) (or (and bool_4 bool_3) (not bool_0))))
(assert (bvult (bvnor (bvlshr #x00000058  bv_2) (bvsub bv_3 #x000000c4 )) (bvsdiv (bvmul bv_0 #x000000e4 ) (bvmul #x000000a8  #x0000000a ))))
(assert (bvslt (bvurem (bvashr #x000000fa  #x0000004f ) (bvashr bv_3 bv_4)) (bvor (bvurem #x00000013  bv_3) (bvadd bv_4 #x000000b8 ))))
(check-sat)
(exit)
