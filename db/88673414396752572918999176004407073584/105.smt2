(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.15644598007202148
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.16633319854736328
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.28185009956359863
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (xor (bvsle (bvsub bv_0 bv_4) (bvmul bv_2 bv_2)) (xor (xor true false) (bvult #x0000003f  #x00000060 ))))
(assert (bvule (bvsub (bvor bv_4 #x000000f6 ) (bvadd #x00000096  #x000000e0 )) (bvxnor (bvand bv_1 bv_1) (bvand #x0000004b  #x00000002 ))))
(assert (or (bvule (bvnor bv_1 bv_4) (bvashr bv_2 #x000000f3 )) (xor (bvsle bv_4 #x00000073 ) (bvsgt #x0000001a  bv_4))))
(assert (=> (bvult (bvsmod #x000000f0  bv_0) (bvor #x000000bb  #x00000009 )) (and (bvslt #x000000e6  bv_4) (bvult bv_4 #x00000098 ))))
(assert (or (=> (bvsge #x000000df  bv_2) (and bool_4 bool_3)) (bvsge (bvadd bv_3 #x00000009 ) (bvashr bv_3 bv_4))))
(check-sat)
(exit)
