(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.2150261402130127
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.17937707901000977
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.17882037162780762
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (=> (bvsge (bvsub bv_4 bv_0) (bvadd #x000000e8  bv_2)) (bvugt (bvurem bv_3 bv_4) (bvnand #x000000b1  bv_4))))
(assert (not (bvsle (bvsub #x00000027  #x00000071 ) (bvxnor bv_3 #x000000de ))))
(assert (or (bvuge (bvxor #x0000009c  bv_2) (bvadd bv_3 #x00000076 )) (bvule (bvshl #x0000006a  bv_1) (bvudiv bv_4 #x00000076 ))))
(assert (or (bvult (bvlshr #x00000035  #x00000023 ) (bvshl bv_4 bv_0)) (bvslt (bvshl bv_4 #x00000090 ) (bvsrem bv_1 bv_1))))
(assert (bvult (bvmul (bvadd #x0000002d  bv_2) (bvudiv bv_3 #x00000062 )) (bvor (bvashr #x000000bc  #x0000004d ) (bvxor bv_4 #x000000f3 ))))
(check-sat)
(exit)
