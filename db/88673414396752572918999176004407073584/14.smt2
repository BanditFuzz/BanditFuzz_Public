(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.20551180839538574
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.14114165306091309
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.23591899871826172
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvsge (bvsmod (bvmul #x000000db  bv_3) (bvsdiv #x00000018  #x00000093 )) (bvudiv (bvmul bv_3 bv_0) (bvurem #x000000dc  bv_0))))
(assert (not (bvule (bvor bv_4 bv_0) (bvnand bv_0 bv_2))))
(assert (bvsge (bvudiv (bvxor #x00000087  #x0000002b ) (bvsub bv_1 bv_3)) (bvxor (bvsdiv bv_1 bv_0) (bvshl bv_4 #x00000069 ))))
(assert (bvuge (bvsmod (bvnand #x00000025  bv_1) (bvsmod #x000000a7  #x0000004b )) (bvurem (bvsrem bv_2 bv_0) (bvshl bv_4 bv_3))))
(assert (or (and (not false) (xor bool_1 true)) (bvule (bvsdiv #x00000055  bv_0) (bvand bv_0 bv_2))))
(check-sat)
(exit)
