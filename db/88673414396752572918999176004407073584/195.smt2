(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.18468713760375977
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.15850496292114258
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.24045848846435547
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvsgt (bvashr (bvnor bv_3 #x000000f0 ) (bvlshr #x000000c1  bv_2)) (bvudiv (bvsmod bv_0 bv_1) (bvsmod bv_2 #x0000006f ))))
(assert (not (bvuge (bvnand bv_1 #x0000009e ) (bvsrem #x0000006b  bv_1))))
(assert (or (bvult (bvsdiv bv_1 bv_3) (bvashr bv_1 bv_0)) (not (bvsge bv_2 bv_0))))
(assert (bvule (bvor (bvurem bv_4 #x000000bc ) (bvmul bv_1 #x000000e3 )) (bvnand (bvmul bv_2 #x000000e6 ) (bvmul #x0000004b  #x000000d7 ))))
(assert (bvult (bvadd (bvxor bv_1 bv_1) (bvnand #x000000fb  bv_3)) (bvxnor (bvudiv bv_4 #x0000003f ) (bvudiv #x000000d0  bv_3))))
(check-sat)
(exit)
