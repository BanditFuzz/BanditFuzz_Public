(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.21596598625183105
; 	answer => err
; solvers/bitwuzla.sh
; 	time => 0.1441025733947754
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.21839642524719238
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 8))
(declare-const bv_1 (_ BitVec 8))
(declare-const bv_2 (_ BitVec 8))
(declare-const bv_3 (_ BitVec 8))
(declare-const bv_4 (_ BitVec 8))
(assert (bvule (bvudiv (bvlshr bv_4 bv_3) (bvsmod #x000000da  #x0000009b )) (bvsrem (bvand #x00000062  #x00000009 ) (bvand #x00000086  bv_1))))
(assert (bvsgt (bvadd (bvnand bv_2 #x00000094 ) (bvand bv_2 bv_0)) (bvor (bvnand bv_4 #x0000004d ) (bvudiv bv_3 bv_2))))
(assert (bvsge (bvsub (bvudiv #x0000005d  #x000000e6 ) (bvsdiv bv_1 bv_2)) (bvlshr (bvxor #x0000008a  #x000000d7 ) (bvudiv bv_2 bv_0))))
(assert (or (not (=> false bool_0)) (=> (bvult #x00000008  #x0000001b ) (bvugt #x000000e0  #x00000051 ))))
(assert (xor (bvsge (bvmul bv_0 bv_2) (bvsub #x000000b9  #x000000df )) (=> (=> true false) (bvsge #x00000056  #x000000e7 ))))
(check-sat)
(exit)
