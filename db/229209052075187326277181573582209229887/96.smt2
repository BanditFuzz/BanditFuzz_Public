(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.5988326072692871
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 0.2234034538269043
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.12430715560913086
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvule (bvxor (bvor bv_1 #xbe90bec5 ) (bvxor #xe09948e2  bv_1)) (bvsrem (bvsrem bv_3 bv_4) (bvnand #xb12f59f4  #x777f31d1 ))))
(assert (or (bvuge (bvnand bv_3 bv_3) (bvsmod bv_4 #xff4b6610 )) (xor (bvule bv_0 #x5df87d18 ) (bvsle bv_4 #xb06c3b49 ))))
(assert (not (xor (bvule bv_1 #x7a691be0 ) (bvuge bv_1 #xc2552481 ))))
(assert (bvsle (bvshl (bvsdiv #x76c065ef  #xc2c95f3e ) (bvadd #x482c7ab2  #x48028001 )) (bvshl (bvshl #x27fe4022  #xe52863c0 ) (bvlshr #x2f27b66f  #x6442a34f ))))
(assert (bvuge (bvsdiv (bvashr bv_4 bv_2) (bvsdiv bv_2 bv_4)) (bvadd (bvadd #x248d393d  bv_1) (bvsmod #xabbb4d4b  #xad0ff1bc ))))
(check-sat)
(exit)
