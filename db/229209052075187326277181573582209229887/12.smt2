(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.6587445735931396
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 0.1660151481628418
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.09662270545959473
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvslt (bvshl (bvudiv bv_0 #x83472d95 ) (bvxnor bv_1 bv_0)) (bvsub (bvsrem #x97558a2b  bv_3) (bvlshr #x1df2e7f7  bv_2))))
(assert (bvsgt (bvudiv (bvsmod #x8229d133  bv_2) (bvnor bv_4 #x6bcab4d3 )) (bvnor (bvshl #xc9a2aae7  bv_2) (bvnor #x301b327f  bv_4))))
(assert (and (bvsle (bvadd #x1f095623  #x78a9b904 ) (bvnor bv_2 #xa258aadf )) (bvuge (bvsrem bv_2 #x84317057 ) (bvashr #x11adf234  bv_2))))
(assert (=> (bvsle (bvsrem bv_4 #xd27b1a2d ) (bvor bv_4 bv_1)) (bvule (bvashr bv_1 #xdd9a6447 ) (bvnor #x0fd1290c  #xc4fdeea9 ))))
(assert (bvsle (bvshl (bvnand #x38e9fe28  #xf7efcc50 ) (bvashr bv_2 bv_0)) (bvsrem (bvor #xfe81c2cf  bv_0) (bvashr bv_0 #xb09ff605 ))))
(check-sat)
(exit)
