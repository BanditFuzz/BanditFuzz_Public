(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 8.295029878616333
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 0.2148575782775879
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.11038780212402344
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsgt (bvudiv (bvsdiv #x23e2c4fd  #x05d588d0 ) (bvsmod bv_4 bv_4)) (bvxor (bvlshr #xfb8480f6  bv_2) (bvnand #xbd1ee5d9  #xadcf6ccd ))))
(assert (bvule (bvand (bvsrem #x55db0aff  bv_3) (bvor #x7fa43eba  bv_4)) (bvsrem (bvsmod bv_0 bv_3) (bvand bv_4 bv_3))))
(assert (bvsge (bvxor (bvlshr #x4d07d619  #x2efbd0a8 ) (bvxor bv_4 bv_0)) (bvsrem (bvor #xc5af5066  bv_3) (bvmul #xfaee6150  #xac493d22 ))))
(assert (=> (bvsge (bvnor #xefb324cb  #x971569ea ) (bvshl #xb3c3c1bf  #xa6c654f4 )) (bvsge (bvsdiv #x83faa56c  bv_1) (bvxnor #x8982ffc4  #xd32c6258 ))))
(assert (bvsgt (bvxnor (bvsrem #xc3b3abe9  bv_0) (bvxor bv_4 bv_2)) (bvsrem (bvxor #x6c429a33  #x92a45695 ) (bvsub bv_4 bv_1))))
(check-sat)
(exit)
