(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.24953532218933105
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 0.18263483047485352
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.13331890106201172
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (and (bvule (bvshl #xb71067bb  #xb7e591b9 ) (bvand #x098b1eb8  #xafc1bfe6 )) (=> (bvule bv_4 #x74a512a9 ) (bvslt bv_0 bv_1))))
(assert (bvuge (bvxnor (bvsrem #x1e3dd03c  bv_3) (bvand #xe2b03bf2  bv_0)) (bvshl (bvand #xe023af5a  bv_1) (bvor bv_0 #x0b2f3d32 ))))
(assert (or (not (bvslt #x8312f976  bv_3)) (bvult (bvlshr bv_4 bv_2) (bvadd bv_3 #x6f1b2f54 ))))
(assert (bvule (bvsrem (bvxor #xe7d39124  #x9b173402 ) (bvashr bv_2 #x060f08db )) (bvashr (bvxnor bv_4 bv_3) (bvnand #xcd15a306  bv_1))))
(assert (bvuge (bvurem (bvashr bv_3 #xedea24c4 ) (bvand bv_3 #xbc05afa0 )) (bvxor (bvashr #x15021e51  #x5fe7ceee ) (bvsrem bv_1 bv_3))))
(check-sat)
(exit)
