(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.09998941421508789
; 	answer => unsat
; solvers/bitwuzla.sh
; 	time => 0.07944869995117188
; 	answer => unsat
; solvers/cvc4.sh
; 	time => 0.10904192924499512
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvule (bvsmod (bvsdiv #xe38c8466  bv_1) (bvnand bv_3 bv_4)) (bvxnor (bvurem bv_0 bv_3) (bvsub bv_4 bv_4))))
(assert (=> (=> (bvuge #x27cea9a9  bv_0) (bvslt #x3dbaa1dc  #x1b2cca18 )) (bvult (bvudiv #x802cf896  #x82c419c9 ) (bvor bv_0 #xaf16e59b ))))
(assert (bvuge (bvxor (bvmul #x6f81a3c1  bv_4) (bvand #xfe29e48b  #xe76d7f57 )) (bvxnor (bvashr #x3416d54b  #xfa05a70c ) (bvxor bv_3 #xb57722ea ))))
(assert (xor (or (bvult bv_2 bv_4) (bvsge #x66f8cc30  #x035727fb )) (not (bvsgt bv_3 bv_3))))
(assert (or (bvult (bvsub #x7aafb5ff  #x74057f50 ) (bvxor bv_0 #x67fba067 )) (bvuge (bvmul bv_3 bv_0) (bvudiv #x55622145  bv_4))))
(check-sat)
(exit)
