(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.7692551612854004
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 0.1926116943359375
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.14039111137390137
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvuge (bvxor (bvnand bv_3 #xd130f9d4 ) (bvsrem #x0d88a758  #xac746cf3 )) (bvxnor (bvsub bv_1 #xf61edaf0 ) (bvsdiv bv_2 bv_3))))
(assert (bvslt (bvxnor (bvshl bv_2 bv_2) (bvsub bv_4 bv_4)) (bvmul (bvnand #x545d8c9f  bv_0) (bvxor bv_0 #x5eee4732 ))))
(assert (bvsle (bvlshr (bvurem #x40d74399  bv_1) (bvxnor bv_3 #x7759c7e4 )) (bvudiv (bvmul #x55216cd9  bv_4) (bvxor bv_1 #x5eb1899b ))))
(assert (not (bvsle (bvsmod bv_1 #x2a6df1ff ) (bvsrem #xfa151563  #x826ebeb2 ))))
(assert (and (or (bvsge bv_0 bv_4) (bvuge #x4aeab440  #xe297c416 )) (bvult (bvudiv #x200461bc  #x8d30e45f ) (bvsmod bv_4 #x7a5bbfe5 ))))
(check-sat)
(exit)
