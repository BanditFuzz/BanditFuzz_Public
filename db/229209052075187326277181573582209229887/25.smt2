(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.6123719215393066
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 0.15790009498596191
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.11936402320861816
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvugt (bvxnor (bvand #x76da6a70  bv_1) (bvor #xf4f5e224  #x280f7ebf )) (bvxnor (bvadd #x3cd0d20b  #x2ca476ca ) (bvlshr #xd0801479  bv_3))))
(assert (bvugt (bvmul (bvxor #x51a418b8  bv_3) (bvmul #x9df8e497  bv_4)) (bvsdiv (bvsmod #xcc1d72b0  bv_2) (bvnand #x0127d832  #x84c7c50f ))))
(assert (or (and (bvsle bv_2 bv_2) (bvsle #xeb2c2796  bv_2)) (and (bvslt bv_2 #xd0d39539 ) (or false bool_3))))
(assert (bvsge (bvand (bvudiv #xf230f4a2  bv_3) (bvnor bv_3 #x826d7f48 )) (bvor (bvudiv bv_3 #x76a085ef ) (bvurem #xa76fa591  #xfd20b3e8 ))))
(assert (=> (bvuge (bvashr #xa867d569  bv_1) (bvnand bv_2 bv_0)) (bvsge (bvor #x6a1b9542  #xd40e20cc ) (bvsub #x5861c447  #x764066bb ))))
(check-sat)
(exit)
