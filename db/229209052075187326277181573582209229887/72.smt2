(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 2.078402519226074
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 0.24710988998413086
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.10813236236572266
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvult (bvsdiv (bvadd #x06a27e49  #x404ab7ba ) (bvxor bv_4 #x81ad7d50 )) (bvashr (bvxor bv_1 bv_4) (bvsub #x853d8b3e  #xda1a799c ))))
(assert (and (bvult (bvsrem bv_0 bv_1) (bvxnor #x271bf42f  #xfe04d7dc )) (not (bvuge bv_1 bv_2))))
(assert (or (bvuge (bvsmod #x5116ac57  #x3e837f06 ) (bvsdiv bv_1 bv_2)) (bvuge (bvlshr bv_3 #x51cea3c4 ) (bvsmod #xc1d0f242  bv_3))))
(assert (not (and (bvsle #xf8987cb9  bv_1) (xor false bool_1))))
(assert (or (and (bvsgt bv_2 bv_0) (and bool_4 bool_3)) (xor (bvslt #x78fbc1d3  #x99c4070c ) (bvsgt #x44fdbb20  #x703a706d ))))
(check-sat)
(exit)
