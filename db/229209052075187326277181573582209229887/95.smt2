(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.7996234893798828
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 1.1926376819610596
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.09067845344543457
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvslt (bvnand (bvsmod #xa9ec8431  bv_1) (bvnor bv_3 #xddd0510d )) (bvsmod (bvsrem #xad4d9d1b  #xcb8b35d1 ) (bvmul #x80fbfbd8  #x2ab40150 ))))
(assert (and (bvugt (bvadd #xa26f26fd  bv_3) (bvurem #x758ea67b  #xe0388b20 )) (=> (bvuge #xb83fd5ac  bv_0) (or true true))))
(assert (bvsgt (bvnor (bvurem #x6fa653fe  #x84e25463 ) (bvsdiv #x34189b37  #x15518a6a )) (bvsrem (bvnor bv_3 bv_0) (bvsdiv bv_3 bv_0))))
(assert (=> (bvuge (bvshl #x1b8471d8  #x04e70e0a ) (bvor bv_3 #x3ffbfc77 )) (=> (bvsge bv_0 bv_3) (and bool_3 bool_0))))
(assert (or (bvsle (bvxnor #xb08f41b2  bv_3) (bvmul bv_4 #x62908ac1 )) (not (not bool_4))))
(check-sat)
(exit)
