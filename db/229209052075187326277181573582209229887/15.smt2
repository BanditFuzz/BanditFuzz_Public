(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.08518266677856445
; 	answer => unsat
; solvers/bitwuzla.sh
; 	time => 0.09526705741882324
; 	answer => unsat
; solvers/cvc4.sh
; 	time => 0.09836649894714355
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvule (bvand (bvmul #xb6fc2e50  #xba4826b5 ) (bvxor bv_1 #x8bc6ecd0 )) (bvsub (bvurem #x4a5d5f01  bv_0) (bvsrem bv_2 bv_0))))
(assert (=> (bvsgt (bvudiv #x270523da  #xd02cbbc3 ) (bvadd bv_2 #xf7a53c1e )) (not (bvugt #x833075fe  #xac36acc0 ))))
(assert (bvult (bvnor (bvsmod #x7d15b59d  #x2ad75d9f ) (bvudiv #x6c6fdbde  #x8ceed074 )) (bvlshr (bvlshr #x79929c93  #x54f3a503 ) (bvsmod #xaa342d38  bv_0))))
(assert (and (bvslt (bvashr bv_4 bv_1) (bvudiv bv_4 #x4443d3ed )) (and (bvule #x5ddaa864  bv_2) (bvslt bv_4 #x35693b38 ))))
(assert (and (bvslt (bvand bv_4 bv_2) (bvashr bv_2 #x18c5c96c )) (bvslt (bvudiv #x91dd66ca  #x4f79e7c3 ) (bvxor #xd62b5132  #x2e6c8d2e ))))
(check-sat)
(exit)
