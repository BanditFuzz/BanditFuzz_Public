(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 3.4299705028533936
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 0.2634389400482178
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.11155462265014648
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsge (bvsrem (bvudiv #x07f8d072  bv_3) (bvsdiv #xc130be08  bv_1)) (bvor (bvxor #xc2fc44cf  bv_3) (bvashr #xf9bd7c59  bv_3))))
(assert (xor (bvslt (bvsrem bv_2 #x585136f4 ) (bvor #x5f910948  bv_2)) (and (bvsge #x42ca1244  #xb2d939dd ) (and true bool_2))))
(assert (and (bvult (bvand bv_3 #x9869892c ) (bvnand #x22b55506  bv_1)) (or (bvslt bv_2 bv_1) (bvsgt #xdd9f7729  #x66f6e77b ))))
(assert (bvugt (bvsrem (bvsrem #x7d0e86d4  bv_4) (bvurem #x5b9e8ae4  #x88777d20 )) (bvshl (bvudiv bv_1 bv_3) (bvxor #x8ce095cc  bv_1))))
(assert (bvsge (bvashr (bvudiv bv_4 #xb54a98a3 ) (bvxor bv_1 #x5a6613c1 )) (bvudiv (bvurem bv_1 #xc9d25474 ) (bvnand bv_1 bv_1))))
(check-sat)
(exit)
