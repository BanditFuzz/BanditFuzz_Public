(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.33263421058654785
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 0.11185693740844727
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.0968022346496582
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsge (bvadd (bvadd #x913a5da3  bv_4) (bvxor bv_4 #x8e4b2a4b )) (bvnor (bvor bv_0 bv_2) (bvnor #xeefcfe1f  #x334c72a1 ))))
(assert (xor (bvult (bvnor bv_1 bv_1) (bvor bv_0 #xe200c076 )) (=> (bvslt #x200d5ad2  #x091224a5 ) (or bool_3 true))))
(assert (and (or (bvslt bv_1 bv_1) (bvsge bv_1 bv_1)) (bvsgt (bvor #x9e1da6b5  #x13ebd4e6 ) (bvxor bv_2 bv_3))))
(assert (bvule (bvudiv (bvsdiv bv_2 #xc83a4861 ) (bvnand bv_3 bv_2)) (bvand (bvnor #x2f4eb336  #xa1acac09 ) (bvsrem #x3ca52f28  #x1de34411 ))))
(assert (xor (and (bvsge #x189f2b30  bv_2) (bvsle bv_3 #x36290fdc )) (bvugt (bvlshr bv_3 bv_4) (bvxnor bv_4 #x8bfe65ce ))))
(check-sat)
(exit)
