(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.10771608352661133
; 	answer => unsat
; solvers/bitwuzla.sh
; 	time => 0.08986926078796387
; 	answer => unsat
; solvers/cvc4.sh
; 	time => 0.10969972610473633
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvult (bvashr (bvshl #x3e09704f  #xf3eed738 ) (bvxnor bv_0 #xf88dd4a1 )) (bvlshr (bvnand bv_2 #x383ef60a ) (bvxnor bv_4 #x65ebb27e ))))
(assert (or (and (bvsge #x7a62383f  bv_1) (bvsge bv_1 bv_0)) (bvslt (bvsub bv_1 #x53963f3e ) (bvadd bv_3 bv_4))))
(assert (bvslt (bvurem (bvlshr #x8a5b12e4  bv_0) (bvmul bv_2 bv_0)) (bvor (bvlshr #xa00686e8  #x4cd02f48 ) (bvudiv bv_2 bv_0))))
(assert (and (xor (bvslt #x5854c871  #x3822cb8e ) (bvsgt #x87826d0d  #xf40a562a )) (xor (=> bool_3 bool_1) (bvsle #x38e0679f  bv_0))))
(assert (bvsge (bvxnor (bvsrem #x2f5d8bce  #x1569b0ed ) (bvand #x8e70e218  bv_1)) (bvurem (bvashr bv_3 #x1ac26233 ) (bvor #xed08de70  bv_4))))
(check-sat)
(exit)
