(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.5147104263305664
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 0.167647123336792
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.11993002891540527
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvslt (bvsrem (bvor #xba5bb6ed  bv_4) (bvlshr bv_1 bv_0)) (bvshl (bvsdiv #x8302e659  bv_1) (bvudiv #xb7c5edfe  #x035c29e8 ))))
(assert (bvsge (bvmul (bvnand bv_3 #x677378a6 ) (bvsmod #xa7801e3b  #x56c3e39b )) (bvlshr (bvsmod #xd2a0e2f8  #xd0de4930 ) (bvnor #xb2b4e347  bv_4))))
(assert (and (bvult (bvsmod bv_3 bv_1) (bvlshr bv_2 bv_4)) (or (and bool_1 bool_1) (bvsge bv_0 bv_3))))
(assert (bvslt (bvxnor (bvmul #xdc63ef32  #x5806140c ) (bvnor #xad6f411c  #xa372503c )) (bvurem (bvand bv_3 bv_2) (bvor bv_2 #xc6c594a5 ))))
(assert (bvsgt (bvxnor (bvxnor #x047c168b  #x6967aec2 ) (bvadd #x209a54db  bv_4)) (bvnand (bvsub #x928b10f1  bv_1) (bvsrem #xecac069c  #x73c6e856 ))))
(check-sat)
(exit)
