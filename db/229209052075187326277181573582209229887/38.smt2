(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.87986159324646
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 0.23994803428649902
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.11291337013244629
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsle (bvshl (bvurem #x8f975e69  bv_3) (bvadd bv_0 #xa4b5f3dc )) (bvnor (bvsrem #x94d05135  #x21a08b50 ) (bvudiv #x63d8dd9d  #xb42e9e9c ))))
(assert (xor (bvule (bvsdiv #xfaaa554b  #xd0f64203 ) (bvashr bv_0 bv_0)) (bvugt (bvand bv_0 bv_3) (bvmul bv_2 bv_3))))
(assert (bvslt (bvshl (bvxor #xb44a276b  bv_0) (bvlshr #x4dc63aeb  bv_0)) (bvshl (bvsmod #x4fa8bf12  bv_0) (bvudiv #xa68becbd  #x1ce5eb1c ))))
(assert (bvule (bvlshr (bvor #xbbea93a5  #xbfff926c ) (bvsdiv #xcdbbf2c3  #xa839673b )) (bvsmod (bvadd bv_2 #x0890b085 ) (bvsub #x3d9aa883  bv_2))))
(assert (not (bvugt (bvnor #x68aad46b  bv_4) (bvsdiv bv_1 #x2443f12f ))))
(check-sat)
(exit)
