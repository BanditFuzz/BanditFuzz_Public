(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.47481632232666016
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 0.14241957664489746
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.11165308952331543
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (bvuge (bvor bv_1 bv_0) (bvsub bv_1 #xda25f2c2 )) (bvsge (bvnand bv_4 #x47ae909f ) (bvurem #x2750a426  #xe48f423b ))))
(assert (bvule (bvadd (bvsmod bv_4 #x8d6bdfb2 ) (bvnand #x82b0ca5e  #x88380146 )) (bvlshr (bvsrem #x932529d5  bv_4) (bvmul #xe7df9c53  bv_0))))
(assert (=> (=> (xor true true) (and false true)) (bvsgt (bvsdiv bv_3 bv_1) (bvnand #xd78b1d94  #x84fb4079 ))))
(assert (or (=> (not false) (bvslt #x51489284  #x746ee7c8 )) (and (not bool_0) (bvugt #xe435f46b  #x35136e42 ))))
(assert (or (=> (not true) (xor bool_4 false)) (bvslt (bvsub bv_4 #x50eb529d ) (bvadd #x2cd03060  bv_0))))
(check-sat)
(exit)
