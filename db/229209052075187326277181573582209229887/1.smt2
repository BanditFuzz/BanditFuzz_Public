(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.09662294387817383
; 	answer => unsat
; solvers/bitwuzla.sh
; 	time => 0.07910013198852539
; 	answer => unsat
; solvers/cvc4.sh
; 	time => 0.09367227554321289
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (=> (not (=> bool_2 true)) (not (bvsle bv_4 #x4f988aae ))))
(assert (bvugt (bvxor (bvnand #x3ee6287d  bv_0) (bvadd #x604d15ab  #x15220246 )) (bvmul (bvor #xcfd966ec  #x7e27aec5 ) (bvor bv_0 bv_0))))
(assert (=> (bvuge (bvsdiv bv_0 bv_4) (bvadd #xd9a1bcab  #x472d719a )) (bvsge (bvand bv_3 #x2c103799 ) (bvnor bv_3 #xce061bb7 ))))
(assert (and (bvult (bvmul bv_0 bv_1) (bvsmod bv_4 #xe070e090 )) (=> (bvslt #xd5858421  #x6ed9f308 ) (bvsgt #x77817d4a  #x728075ca ))))
(assert (xor (and (bvsgt #x7af76223  #x0e4fb57b ) (bvslt #xc463fe5c  #x745fc0c8 )) (or (bvsle #xd497274b  bv_3) (or true bool_1))))
(check-sat)
(exit)
