(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.0948023796081543
; 	answer => unsat
; solvers/bitwuzla.sh
; 	time => 0.13001561164855957
; 	answer => unsat
; solvers/cvc4.sh
; 	time => 0.0759878158569336
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (xor (bvuge (bvmul #x601fa0c7  bv_4) (bvand #xd9828d85  #x9c5ffa5e )) (or (xor bool_3 false) (=> true bool_4))))
(assert (xor (bvult (bvxor bv_3 #x2881f448 ) (bvadd #x9fdb4694  bv_2)) (not (bvsge bv_0 #xb455dafa ))))
(assert (bvsle (bvor (bvshl bv_0 bv_4) (bvand #xf2022702  bv_4)) (bvudiv (bvor bv_4 #x3a1bc929 ) (bvadd bv_3 #xc3641fd7 ))))
(assert (=> (not (=> bool_1 bool_0)) (xor (and false true) (bvuge #xece128c9  #xdcd2f1c4 ))))
(assert (bvsle (bvnand (bvashr #xbe88f1e8  #xe8043425 ) (bvsdiv #xa592400b  #x02aebff2 )) (bvnand (bvsub bv_1 bv_2) (bvand bv_3 #x740ed392 ))))
(check-sat)
(exit)
