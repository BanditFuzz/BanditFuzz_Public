(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 2.995753288269043
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 0.21172308921813965
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.10044097900390625
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvugt (bvand (bvand #x66b409c3  #x834bc84f ) (bvxor #xa725b198  #x66a99e1b )) (bvudiv (bvor #xb00b0f4c  #x1333097f ) (bvlshr #x3680c331  bv_0))))
(assert (xor (bvult (bvsmod bv_0 bv_3) (bvadd #x78609f64  #x20d92fae )) (bvsge (bvmul #x4d5474e2  #xc0e1a7e8 ) (bvmul #x5634796f  bv_0))))
(assert (not (and (bvugt #x9d45aa42  #xe32df00f ) (=> bool_0 true))))
(assert (=> (bvsgt (bvnand #x0cb972bc  bv_3) (bvnand bv_4 #x41bf0906 )) (or (not bool_1) (or bool_0 bool_2))))
(assert (bvslt (bvashr (bvxor #xd416f5b4  #x3b979728 ) (bvsdiv #x8c7134aa  bv_3)) (bvadd (bvudiv bv_1 bv_4) (bvsrem #xb266a7a7  #x021df199 ))))
(check-sat)
(exit)
