(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 1.482470989227295
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 0.241074800491333
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.08348751068115234
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvule (bvsmod (bvsrem #x637d7cd4  bv_1) (bvxnor bv_2 bv_0)) (bvnor (bvsrem #xde501c06  bv_4) (bvlshr #x91fc246e  bv_2))))
(assert (or (bvsle (bvashr bv_2 #xe022fc60 ) (bvashr bv_0 #x3fddf4b1 )) (bvsge (bvshl #x45ad2497  #x338e06b7 ) (bvshl bv_4 #xb546c388 ))))
(assert (bvsge (bvlshr (bvsrem #x1def25f3  #xb318796c ) (bvor bv_4 #x454e73d0 )) (bvsmod (bvsmod #x17e3f9ab  #xdd73b6e6 ) (bvshl bv_1 bv_3))))
(assert (and (and (=> true bool_4) (bvslt bv_3 #x660d4478 )) (not (and false bool_0))))
(assert (bvule (bvxor (bvmul bv_0 bv_1) (bvadd #x3ee37105  #xbd26abcf )) (bvsmod (bvurem #x7ee95073  bv_4) (bvnand #x3ce2df1b  bv_3))))
(check-sat)
(exit)
