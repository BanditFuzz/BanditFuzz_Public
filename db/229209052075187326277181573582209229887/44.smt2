(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 6.635942697525024
; 	answer => sat
; solvers/bitwuzla.sh
; 	time => 0.47681283950805664
; 	answer => sat
; solvers/cvc4.sh
; 	time => 0.08964347839355469
; 	answer => err
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvslt (bvsdiv (bvand bv_0 bv_3) (bvshl #x85f583dd  bv_4)) (bvmul (bvsdiv bv_0 bv_1) (bvxor bv_1 #xe255e3f6 ))))
(assert (xor (=> (not bool_3) (=> false false)) (bvugt (bvxnor bv_2 bv_1) (bvxnor bv_3 #x815dbc7a ))))
(assert (bvsge (bvsrem (bvmul bv_2 bv_4) (bvnor bv_1 #xaf987979 )) (bvand (bvmul #x3a558982  bv_2) (bvnor #xdff81b02  bv_1))))
(assert (=> (not (and bool_1 bool_4)) (bvslt (bvmul #xf3edcd78  #xacfab2c0 ) (bvnor bv_3 #xbafb3893 ))))
(assert (=> (bvsgt (bvashr #xf37f8460  #x7167f8e1 ) (bvsub #xd89fbc94  bv_4)) (bvult (bvand #xbe8d725d  bv_3) (bvadd #x7b71ae32  #x2e883045 ))))
(check-sat)
(exit)
