(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.054232120513916016
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.060079336166381836
; 	answer => err
(set-logic QF_NIA)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const int_0 Int)
(declare-const int_1 Int)
(declare-const int_2 Int)
(declare-const int_3 Int)
(declare-const int_4 Int)
(assert (<= (mod (+ int_1 (- 811550150)) (+ (- 37768294) 632918014)) (- (* int_4 int_0) (/ int_1 int_3))))
(assert (> (mod (+ int_0 int_1) (- int_4 int_4)) (- (mod (- 78967593) int_0) (* (- 230299358) int_3))))
(assert (> (- (- int_1)) (* (/ int_4 int_0) (* (- 791266578) (- 333754238)))))
(assert (> (+ (- 322744708 (- 281495985)) (+ (- 571787709) int_1)) (/ (+ int_0 int_1) (mod int_3 int_3))))
(assert (and (> (+ 299836173 660138132) (* (- 20395413) 115470795)) (xor (>= 280091039 632453627) (< (- 45548176) int_0))))
(check-sat)
(exit)
