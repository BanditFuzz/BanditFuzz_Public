(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.04581499099731445
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.050606727600097656
; 	answer => err
(set-logic QF_NIA)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const int_0 Int)
(declare-const int_1 Int)
(declare-const int_2 Int)
(declare-const int_3 Int)
(declare-const int_4 Int)
(assert (< (mod (+ int_1 857191925) (* int_1 (- 424987739))) (- (- (- 915600626) (- 460468439)))))
(assert (or (not (>= 398187894 (- 788668415))) (<= (/ int_3 int_0) (- int_1 (- 640418622)))))
(assert (and (or (xor false true) (>= int_3 int_4)) (and (< int_2 int_4) (< int_1 (- 785474410)))))
(assert (<= (+ (mod (- 910862402) 523467969) (- int_0 324088752)) (- (mod (- 174046246) 33420862) (- 17962703 (- 408110691)))))
(assert (xor (> (+ int_2 int_0) (+ int_1 (- 362004857))) (<= (/ int_2 714108919) (+ int_4 (- 404974949)))))
(check-sat)
(exit)
