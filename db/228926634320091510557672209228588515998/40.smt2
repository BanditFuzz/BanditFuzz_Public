(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.4353220462799072
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.050867557525634766
; 	answer => err
(set-logic QF_NIA)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const int_0 Int)
(declare-const int_1 Int)
(declare-const int_2 Int)
(declare-const int_3 Int)
(declare-const int_4 Int)
(assert (> (/ (mod (- 57756146) (- 257933479)) (mod int_4 462582564)) (+ (/ 252735723 int_4) (mod int_2 int_0))))
(assert (or (>= (* int_3 (- 411852099)) (- 286545106 38716531)) (<= (* int_0 int_3) (* int_1 105197109))))
(assert (< (- (- (- 664688208) (- 711114931)) (* int_2 int_1)) (+ (+ int_2 273930280) (/ 736616411 (- 620690085)))))
(assert (< (/ (- 132906844) (* int_2 int_4)) (* (/ (- 280001330) (- 889794805)) (/ (- 687342488) 524744297))))
(assert (and (and (<= int_2 (- 539908271)) (not false)) (< (- int_2 int_1) (- int_3))))
(check-sat)
(exit)
