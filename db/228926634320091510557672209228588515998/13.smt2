(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
; solvers/z3.sh
; 	time => 0.04668784141540527
; 	answer => err
; solvers/cvc4.sh
; 	time => 0.05665159225463867
; 	answer => err
(set-logic QF_NIA)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const int_0 Int)
(declare-const int_1 Int)
(declare-const int_2 Int)
(declare-const int_3 Int)
(declare-const int_4 Int)
(assert (< (- (/ int_2 (- 725509651)) (mod 16861457 305350688)) (+ (+ (- 419834983) int_3) (+ (- 305022145) int_2))))
(assert (=> (>= (mod 367739870 (- 956181531)) (- int_1)) (=> (xor true true) (> (- 262117653) int_0))))
(assert (or (<= (- 176679072) (- (- 971362307))) (=> (>= 47621957 (- 360547173)) (>= (- 971544271) int_0))))
(assert (> (/ (- int_1) (+ 450961949 int_0)) (* (- (- 649041567) int_0) (/ 94631353 (- 275703042)))))
(assert (or (and (< int_2 int_2) (> int_0 99283717)) (> (mod int_2 (- 79589855)) (+ int_3 int_2))))
(check-sat)
(exit)
