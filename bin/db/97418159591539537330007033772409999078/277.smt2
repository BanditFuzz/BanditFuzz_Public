(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (=> (bvsge bv_2 #x4c022dc9 ) (bvule #x553db047  bv_1))))
(assert (bvule (bvudiv (bvudiv bv_1 bv_3) (bvand #xe5f4d2eb  #xea7588c1 )) (bvsrem (bvsrem bv_3 #x91535aa8 ) (bvnand bv_1 #x9c7155db ))))
(assert (=> (and (bvult #xc84d2598  bv_3) (bvslt #x6e7069f2  #x45eb182f )) (not (bvugt bv_4 #xe210fe08 ))))
(assert (and (not (bvugt #xc45a07cb  bv_3)) (bvsge (bvurem #x77969788  bv_3) (bvadd #xa5031caf  #xcb7fa169 ))))
(assert (bvule (bvor (bvashr bv_3 bv_2) (bvsub bv_4 #x8e6e5927 )) (bvor (bvxnor bv_2 #xf88f5bfb ) (bvnor #x0b87e041  bv_0))))
(check-sat)
(exit)
