(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (bvsle (bvmul #x230f9705  #xdbb29463 ) (bvsub bv_2 #x55e2ffc9 )) (bvult (bvnand #xa4f9c1ab  bv_4) (bvor bv_1 bv_4))))
(assert (=> (not (bvult bv_1 #x8e57ac28 )) (xor (and false false) (bvuge #xd15cb5e7  bv_4))))
(assert (not (bvsle (bvurem bv_2 #xb6df7d70 ) (bvsrem #x7f12e288  bv_2))))
(assert (not (bvsge (bvsrem #x24a626e2  bv_0) (bvsrem bv_2 #x5f7fd83c ))))
(assert (bvuge (bvnor (bvshl bv_1 #x9ccfb041 ) (bvsdiv #x572f4420  bv_2)) (bvxor (bvshl bv_1 bv_1) (bvsdiv bv_1 bv_1))))
(check-sat)
(exit)
