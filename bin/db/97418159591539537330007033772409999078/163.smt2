(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsgt (bvsub (bvnor bv_3 bv_1) (bvudiv #x66f60064  #xb7247119 )) (bvsdiv (bvashr bv_0 #x32a2fc79 ) (bvshl #xdc876684  #x5b474d2a ))))
(assert (not (bvsle (bvnor bv_4 bv_0) (bvmul bv_3 #xac535036 ))))
(assert (not (xor (bvslt bv_2 #xe4e50766 ) (or bool_0 false))))
(assert (xor (bvult (bvsdiv bv_0 bv_2) (bvsmod bv_1 #xe1eed438 )) (bvsge (bvshl #xb7a2b7fa  #x546a5371 ) (bvurem bv_3 bv_1))))
(assert (=> (bvult (bvlshr bv_0 #x04dc0db6 ) (bvmul #x92e14c83  bv_3)) (bvule (bvmul bv_0 bv_0) (bvxnor #x89c3b23e  #x90ea45a2 ))))
(check-sat)
(exit)
