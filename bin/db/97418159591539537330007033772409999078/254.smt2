(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsgt (bvnand (bvashr #xe7282896  bv_2) (bvor #x98789f17  #xe651fd51 )) (bvxor (bvlshr bv_1 #x985a4ca2 ) (bvxor #x11c66dce  bv_1))))
(assert (=> (bvuge (bvmul #xd603ddb8  bv_2) (bvsmod bv_0 bv_3)) (xor (bvule #xb511bfda  #x95c5237d ) (bvule bv_3 #x1234635b ))))
(assert (bvsge (bvnand (bvudiv #x7cf77f26  #x459e7725 ) (bvashr bv_2 #x28f92048 )) (bvsrem (bvxor #x586e72d5  bv_4) (bvxor #x596b5b7b  #xf56a0cdb ))))
(assert (bvsle (bvxnor (bvudiv bv_3 bv_4) (bvsmod bv_1 #x6ba058ba )) (bvudiv (bvsdiv bv_4 #xd0edbfee ) (bvsdiv #xc5f81d21  #xea2c3adb ))))
(assert (or (and (and bool_1 bool_0) (or true true)) (bvult (bvsub bv_2 bv_3) (bvshl #x2a50e38c  #x314f4d29 ))))
(check-sat)
(exit)
