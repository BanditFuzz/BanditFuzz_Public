(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (bvsgt (bvxnor bv_1 #x338dc945 ) (bvshl bv_1 #xdedeb7eb ))))
(assert (bvule (bvadd (bvshl #xfd140148  #x5a76bf5b ) (bvadd bv_0 #x278945bd )) (bvudiv (bvnand #x1e48b7c9  bv_0) (bvand bv_1 bv_2))))
(assert (=> (=> (or bool_2 true) (bvuge #x95082395  bv_3)) (bvult (bvshl bv_2 bv_3) (bvsrem #x604f4490  bv_4))))
(assert (bvult (bvsmod (bvnor #xac4359e5  bv_1) (bvshl #xe94e0ed6  #xc0c62589 )) (bvashr (bvor bv_3 bv_3) (bvxnor bv_1 #xda9080d8 ))))
(assert (and (bvsle (bvashr #x8016bdb4  bv_2) (bvnor #xcbbd7911  bv_1)) (xor (and bool_2 true) (bvsle bv_3 #x5dc0172d ))))
(check-sat)
(exit)
