(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (=> (or bool_2 true) (bvsgt #x2a903575  bv_1)) (and (or bool_4 bool_4) (not false))))
(assert (bvult (bvmul (bvudiv #xff72325a  #x07504a8f ) (bvor #x724f1456  #x8a36762f )) (bvnand (bvor #x8b3ca7f8  #xa6f1f5e9 ) (bvmul bv_3 bv_1))))
(assert (bvuge (bvudiv (bvsmod #x669a0c86  bv_1) (bvxnor bv_4 #xaf53c769 )) (bvsrem (bvsdiv bv_0 bv_2) (bvxnor #x518da904  bv_3))))
(assert (=> (bvsle (bvnand #x084a4b46  #xbdb6d725 ) (bvnand #xb50b936f  bv_2)) (bvsgt (bvor #x9bd1285d  bv_4) (bvsmod #x4824b807  bv_2))))
(assert (not (xor (and false bool_0) (bvsge bv_1 #x5ddc0cdc ))))
(check-sat)
(exit)
