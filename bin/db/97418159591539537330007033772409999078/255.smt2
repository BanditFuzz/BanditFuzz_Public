(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvugt (bvurem (bvashr bv_0 bv_0) (bvlshr bv_2 #x79a187cb )) (bvlshr (bvsdiv bv_4 #xf9ad4814 ) (bvadd bv_1 #x31bec2d6 ))))
(assert (bvule (bvnand (bvsub bv_3 bv_2) (bvurem bv_3 #x3ed5bd41 )) (bvshl (bvnand bv_4 bv_0) (bvmul bv_2 bv_1))))
(assert (=> (bvslt (bvsub bv_3 #xb09bf0ed ) (bvor bv_3 bv_2)) (xor (xor bool_4 bool_1) (bvule bv_0 bv_3))))
(assert (not (not (and true bool_4))))
(assert (bvule (bvand (bvsrem #x922cdf27  bv_3) (bvxor bv_3 #x6362e878 )) (bvmul (bvashr #x3ddf5909  #x656f5db8 ) (bvand #xa0c86a30  #x21aeed56 ))))
(check-sat)
(exit)
