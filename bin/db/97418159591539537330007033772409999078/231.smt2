(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (bvule (bvsrem #xd6196d52  #x7b0b2205 ) (bvurem bv_2 #x45e6a9b5 )) (not (and false bool_3))))
(assert (not (not (bvsge bv_3 #x9f59d973 ))))
(assert (xor (bvsge (bvnand bv_4 #xdb007e2e ) (bvurem #x9618f2b6  #x0435edd8 )) (bvsgt (bvxnor bv_0 bv_2) (bvnor bv_1 bv_4))))
(assert (bvslt (bvashr (bvadd #x62ab518e  bv_2) (bvxnor bv_3 bv_3)) (bvlshr (bvashr #x266e160d  bv_0) (bvnor bv_0 #x7d553d8b ))))
(assert (bvule (bvsub (bvudiv bv_1 bv_1) (bvxnor bv_4 #xe3206f56 )) (bvxnor (bvsrem #x5772c6ea  bv_1) (bvsdiv #xea326850  bv_1))))
(check-sat)
(exit)
