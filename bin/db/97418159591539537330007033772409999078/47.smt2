(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (=> (bvsle (bvmul #x5257cc73  bv_3) (bvudiv #xd48322be  bv_3)) (bvsgt (bvand bv_2 bv_0) (bvand bv_0 bv_2))))
(assert (not (bvuge (bvxor #x6454621f  #x6253cbfe ) (bvadd bv_1 #xc5dd700b ))))
(assert (xor (or (bvslt #x1b8dece1  bv_2) (bvsgt bv_1 #xdf4a7dd3 )) (bvsle (bvlshr #xef862011  #xfaac1887 ) (bvxor bv_4 #xa03a6fea ))))
(assert (xor (not (bvsge #xa6346eee  #x63833691 )) (bvsle (bvor bv_2 bv_4) (bvnor bv_4 bv_3))))
(assert (bvuge (bvnand (bvsdiv bv_1 #x84ff7dfc ) (bvand #x1e5afba0  bv_2)) (bvurem (bvsdiv #xbaa2d500  bv_4) (bvor bv_4 #x5b031201 ))))
(check-sat)
(exit)
