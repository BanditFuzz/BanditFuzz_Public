(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (bvslt (bvxnor #x8d2bf9bf  bv_1) (bvadd bv_4 bv_3))))
(assert (bvuge (bvmul (bvmul bv_0 #x05c0cbc5 ) (bvnor #x3332dcc8  #x0743679f )) (bvand (bvsub bv_4 #xe8ec76d2 ) (bvnand #xe8f96425  #x75196b9c ))))
(assert (and (bvsgt (bvsrem #x99770bb0  bv_1) (bvxor #xff1ca325  #x8bf7f07e )) (xor (bvule bv_2 #x0fc4e8ec ) (bvsle bv_3 #xb1085246 ))))
(assert (not (bvslt (bvnand #x43b11e82  #x44464267 ) (bvashr bv_1 bv_0))))
(assert (=> (not (bvult bv_3 #x4dbb33ca )) (bvsgt (bvsmod bv_0 bv_2) (bvudiv #xae0cf328  bv_1))))
(check-sat)
(exit)
