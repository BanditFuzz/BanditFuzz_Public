(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsge (bvsdiv (bvnor bv_2 bv_4) (bvshl bv_4 bv_4)) (bvlshr (bvsmod #x992f063b  bv_2) (bvsdiv bv_3 #xf6127faa ))))
(assert (bvugt (bvand (bvxor bv_4 #x7b4f9934 ) (bvmul bv_0 #xcf389f2f )) (bvnor (bvnor bv_3 #x195f9bce ) (bvand #xbcb23a06  #xaa3cd407 ))))
(assert (not (not (bvugt bv_2 bv_2))))
(assert (bvsgt (bvadd (bvsub bv_3 #xf34b1df6 ) (bvmul #x64c76aea  #x6e45f88c )) (bvnor (bvadd bv_1 #x93ac06c0 ) (bvsub #xa83b9bda  #xdc0fe9b1 ))))
(assert (not (bvsgt (bvor bv_4 bv_1) (bvxor bv_0 bv_3))))
(check-sat)
(exit)
