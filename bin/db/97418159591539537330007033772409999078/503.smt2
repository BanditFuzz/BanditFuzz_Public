(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvugt (bvxnor (bvsmod bv_3 #x8b3386bf ) (bvshl #x7ab8f929  #xe96965c2 )) (bvudiv (bvshl bv_3 bv_4) (bvnand bv_1 bv_4))))
(assert (bvuge (bvxnor (bvsrem #xe52f46ac  #xbedd947c ) (bvnand #x16a16952  #x265c36d0 )) (bvmul (bvmul bv_2 bv_3) (bvurem bv_2 bv_4))))
(assert (xor (or (bvslt bv_0 #x838efc7e ) (or true bool_3)) (bvult (bvor #x6ebf3896  #x43c18caf ) (bvadd bv_3 #x4bb4d657 ))))
(assert (bvsge (bvxnor (bvsmod #xd4f7988a  bv_2) (bvsmod #x5f2fa8b6  #x416baac6 )) (bvor (bvlshr bv_4 bv_2) (bvudiv bv_1 #xdb43a66c ))))
(assert (not (xor (not bool_2) (xor false false))))
(check-sat)
(exit)
