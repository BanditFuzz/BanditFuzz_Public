(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsgt (bvshl (bvand bv_4 bv_2) (bvxor #x8ecb935a  bv_2)) (bvadd (bvadd #x65098045  bv_0) (bvurem #x75c2ef6b  #xd252607e ))))
(assert (not (bvugt (bvshl bv_0 bv_1) (bvsub #xe7ad751e  #xdc2ead0b ))))
(assert (and (=> (and bool_1 bool_4) (bvslt #xc2eaa6e1  #x13bc883a )) (bvult (bvurem #x39f71da0  #x2e29d5e6 ) (bvashr #x8462e08c  bv_4))))
(assert (=> (or (bvult bv_3 #xd3567044 ) (bvule #x8e324f34  bv_3)) (bvugt (bvxnor bv_0 bv_4) (bvadd #x2b9a8f41  #x49c9f73f ))))
(assert (not (bvsle (bvlshr bv_4 bv_4) (bvshl bv_1 bv_0))))
(check-sat)
(exit)
