(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (bvslt (bvxor #x36614318  #x7217c145 ) (bvor bv_1 bv_0))))
(assert (bvsge (bvor (bvurem #xa42be35f  bv_4) (bvsrem #x59550c4b  #x682123c7 )) (bvnand (bvsdiv bv_0 #x5709db7f ) (bvsrem bv_1 bv_0))))
(assert (xor (bvule (bvsdiv #xe862f74b  #x2009e65c ) (bvsmod #xb89130de  bv_0)) (bvslt (bvadd #xb03b526b  bv_2) (bvsmod bv_4 #x6b01cfd8 ))))
(assert (bvsle (bvashr (bvsrem bv_0 bv_4) (bvlshr bv_1 #x91460f23 )) (bvudiv (bvxnor bv_4 bv_4) (bvxor bv_0 bv_1))))
(assert (or (=> (or bool_0 bool_4) (or bool_1 true)) (=> (bvuge bv_1 #xaf0bcaba ) (bvsgt bv_1 #x4af6842c ))))
(check-sat)
(exit)
