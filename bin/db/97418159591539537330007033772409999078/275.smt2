(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (xor (=> (bvugt bv_4 bv_4) (bvult #xa1e2094f  bv_0)) (bvult (bvxor #x297fa5fe  bv_1) (bvlshr bv_2 bv_1))))
(assert (bvsle (bvnand (bvurem #x94532e52  #xac260b53 ) (bvxnor bv_3 #x6440fbae )) (bvurem (bvsmod bv_0 bv_4) (bvand #x507ff02e  #xeb50a098 ))))
(assert (and (bvsge (bvurem #x05d8f212  #xfbf82efa ) (bvxnor #x7c80a763  bv_0)) (bvslt (bvnor bv_0 #xdc459d52 ) (bvsdiv #x15d0c5bf  #x80868339 ))))
(assert (bvuge (bvnor (bvmul #x42ae1847  #x3adf1da0 ) (bvxnor bv_3 #x9df6e693 )) (bvxor (bvshl bv_4 bv_0) (bvadd bv_1 #x8c94d7a1 ))))
(assert (=> (xor (bvuge bv_1 bv_0) (xor false bool_1)) (or (not true) (xor true bool_0))))
(check-sat)
(exit)
