(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsle (bvnand (bvor #x72092f0d  bv_2) (bvor bv_1 bv_3)) (bvmul (bvmul #xd0212aa7  #xe693882a ) (bvlshr bv_2 #x3d968bfa ))))
(assert (bvsge (bvsub (bvudiv #x32b7679c  bv_4) (bvurem bv_0 bv_4)) (bvsub (bvmul #x8b141ec8  bv_1) (bvudiv bv_1 bv_1))))
(assert (or (bvsge (bvudiv #xb764296c  bv_2) (bvor bv_3 bv_3)) (not (bvuge bv_4 bv_1))))
(assert (not (bvsgt (bvnor bv_3 bv_0) (bvsdiv #x76cca1be  bv_0))))
(assert (xor (bvugt (bvurem bv_1 #xd7f0f89c ) (bvxor bv_2 #xd79f66ba )) (bvuge (bvsdiv bv_4 #xfecb9572 ) (bvadd #xf7ffb785  bv_3))))
(check-sat)
(exit)
