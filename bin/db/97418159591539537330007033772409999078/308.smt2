(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvslt (bvor (bvsub bv_2 bv_1) (bvmul bv_3 #x1c9cc4d9 )) (bvlshr (bvsrem bv_1 bv_2) (bvashr #x41f9ed44  bv_2))))
(assert (not (bvuge (bvxor #xe9a7a0bc  #xca16248d ) (bvashr bv_1 bv_3))))
(assert (bvugt (bvxnor (bvsdiv bv_1 bv_4) (bvlshr bv_0 bv_4)) (bvashr (bvsdiv #x04efb94f  #xe90e2d7a ) (bvxnor bv_0 bv_1))))
(assert (bvult (bvsmod (bvmul bv_2 #x4fa26353 ) (bvnor bv_2 #x537e6ccf )) (bvsrem (bvlshr #x14f469ba  #xe00baff3 ) (bvnor #xb9e4ce33  bv_4))))
(assert (and (=> (or bool_4 bool_1) (bvsgt #xd5ccde56  #x1f28cb7f )) (or (bvsge #x82682f8e  bv_0) (or false bool_1))))
(check-sat)
(exit)
