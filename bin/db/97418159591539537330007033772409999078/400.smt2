(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvule (bvor (bvadd bv_2 bv_0) (bvxnor #x47a6af39  bv_4)) (bvxnor (bvxnor #xf9c42817  bv_1) (bvand #x69e06506  #x3d60a7bc ))))
(assert (or (bvuge (bvsmod bv_1 bv_2) (bvor #x89864e13  #xdff0c1c7 )) (bvugt (bvand #xafc72c08  bv_0) (bvadd bv_4 bv_3))))
(assert (not (bvsgt (bvurem #x39baf455  #x6a4634a0 ) (bvurem bv_1 bv_1))))
(assert (bvugt (bvadd (bvxnor bv_0 #x42db91f3 ) (bvnand bv_2 bv_3)) (bvurem (bvshl #x7359ff5f  bv_3) (bvashr #xa4f745a0  bv_0))))
(assert (and (=> (bvsle bv_0 bv_4) (and true false)) (bvugt (bvsub #xa06127f3  #x7814809b ) (bvxor #x45fed728  bv_3))))
(check-sat)
(exit)
