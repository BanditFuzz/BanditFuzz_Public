(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsgt (bvlshr (bvashr bv_2 #x9036878d ) (bvand bv_4 #x714a4af5 )) (bvxnor (bvsrem #xe7d19f27  #x5393f5b6 ) (bvashr #x6b063a9f  #x370c6e5b ))))
(assert (not (not (or true true))))
(assert (xor (or (bvugt bv_3 #x24e756f3 ) (bvult #x9b3afe08  #xb8a6eabc )) (bvsle (bvsdiv #x0ad024bb  bv_2) (bvor bv_1 bv_1))))
(assert (xor (or (bvsge bv_4 bv_2) (xor false bool_0)) (bvsge (bvudiv bv_4 bv_3) (bvudiv #x166b5aa7  bv_0))))
(assert (or (bvsgt (bvsub bv_4 #x8aa7163e ) (bvnor #x49ad14b4  #x98abb284 )) (bvugt (bvashr bv_4 bv_4) (bvsdiv bv_0 bv_1))))
(check-sat)
(exit)
