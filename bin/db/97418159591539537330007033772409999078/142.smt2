(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvuge (bvsdiv (bvand #x0e99d3d7  #xaa493d18 ) (bvashr #xfcba7aed  bv_2)) (bvurem (bvsmod #x769f75cb  #x79afc80d ) (bvand bv_0 #x3978b863 ))))
(assert (or (not (bvsgt bv_1 #xc5c5ca1c )) (=> (bvule bv_3 #x775aa145 ) (=> bool_2 false))))
(assert (bvsle (bvor (bvxnor bv_1 #xae2d42f2 ) (bvshl #xd5065010  bv_1)) (bvxnor (bvor bv_4 bv_1) (bvmul bv_0 bv_2))))
(assert (not (or (xor bool_2 false) (xor true true))))
(assert (bvsge (bvand (bvnand #x48e7f779  bv_3) (bvudiv #x0b3e49c3  bv_3)) (bvnand (bvashr bv_2 #xbbdee1d8 ) (bvlshr #x172647f5  bv_3))))
(check-sat)
(exit)
