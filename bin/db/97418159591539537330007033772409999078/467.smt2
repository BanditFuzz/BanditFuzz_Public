(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsge (bvurem (bvmul bv_2 bv_2) (bvadd bv_1 bv_2)) (bvshl (bvudiv #xff90d382  bv_0) (bvxor bv_1 #x459ca97e ))))
(assert (or (=> (bvugt bv_2 bv_2) (bvsgt #x0c97e558  #xe935d642 )) (xor (bvsge bv_2 #x965f2598 ) (bvule #x9c392029  bv_0))))
(assert (bvule (bvxnor (bvmul #x69ab9705  bv_1) (bvsub bv_2 #x3cb4bcb7 )) (bvadd (bvsdiv bv_2 bv_4) (bvashr #x9e983b8d  bv_3))))
(assert (xor (or (and true bool_0) (bvule bv_3 bv_3)) (xor (=> bool_4 true) (bvsge #x2b9d2f23  #xe0fa9f7a ))))
(assert (not (bvugt (bvnor bv_1 #xa4d59969 ) (bvsdiv #x17f5a4bb  bv_2))))
(check-sat)
(exit)
