(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (and (bvsgt (bvxor #x6dfa62a5  bv_2) (bvand bv_1 #x98959f1c )) (bvult (bvmul bv_1 #x38f45b0e ) (bvashr #x9f67f630  bv_2))))
(assert (bvsle (bvlshr (bvshl bv_0 bv_2) (bvshl bv_1 bv_1)) (bvsrem (bvand bv_1 bv_2) (bvsrem #x4ac3f400  #x04f55518 ))))
(assert (not (=> (bvuge bv_2 #x1e2c5787 ) (=> true false))))
(assert (=> (or (and bool_3 true) (=> bool_4 false)) (=> (and true false) (bvslt #x164fd557  #x9f3ec51a ))))
(assert (bvugt (bvsrem (bvsdiv bv_3 bv_3) (bvsmod bv_3 #x5d9d4e95 )) (bvsmod (bvnand #x216f04e6  bv_3) (bvnand #x013d53f2  #x317d0960 ))))
(check-sat)
(exit)
