(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (bvult (bvudiv #x4dff81e8  bv_3) (bvand #xf277d6d9  bv_0))))
(assert (or (bvsle (bvsrem bv_2 bv_4) (bvmul #x63874a08  #xf05d3d28 )) (and (bvult #x2a344b03  bv_2) (or true true))))
(assert (xor (xor (=> bool_3 bool_1) (bvult #x905cbd66  bv_3)) (bvule (bvor #xc953b90c  #xbe73c456 ) (bvnand bv_0 bv_3))))
(assert (=> (not (xor false false)) (bvult (bvurem bv_4 bv_4) (bvxnor bv_4 #x9e2713e3 ))))
(assert (bvsgt (bvsrem (bvnor #x194e6845  #xf38cd1e7 ) (bvsrem bv_2 bv_4)) (bvsub (bvnor #x302f32d3  #xd44f8c3a ) (bvashr bv_4 bv_0))))
(check-sat)
(exit)
