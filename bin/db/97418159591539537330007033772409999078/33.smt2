(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (xor (bvsge bv_1 bv_1) (xor true bool_0)) (and (bvugt bv_0 bv_0) (not true))))
(assert (not (not (bvult bv_0 bv_1))))
(assert (bvsle (bvxnor (bvsrem #x58140a06  #xdbc13ca5 ) (bvxnor bv_4 #x510df45d )) (bvashr (bvxnor bv_4 bv_4) (bvnand bv_4 bv_4))))
(assert (bvsle (bvsdiv (bvand #xe957ce37  bv_3) (bvmul bv_1 bv_2)) (bvor (bvurem bv_3 #xb65d2be7 ) (bvsmod bv_4 #x75880ff3 ))))
(assert (bvugt (bvudiv (bvsrem bv_1 #xb84d86f1 ) (bvor #x281f170c  bv_3)) (bvsrem (bvshl bv_4 #x7dbb003e ) (bvurem #x3b3ec4f7  bv_0))))
(check-sat)
(exit)
