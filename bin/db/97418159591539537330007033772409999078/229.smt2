(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (xor (bvsle (bvsub #x3bb22aaf  bv_2) (bvxor bv_3 bv_1)) (not (bvuge bv_0 bv_2))))
(assert (not (xor (=> true bool_1) (xor bool_3 bool_4))))
(assert (bvuge (bvxnor (bvudiv bv_1 bv_0) (bvmul bv_4 #x54d3b9c8 )) (bvor (bvxor #x40279fcb  bv_0) (bvsdiv bv_2 #x2db2c785 ))))
(assert (or (bvsgt (bvshl #x77f1d26b  bv_2) (bvsrem bv_4 #xf68dbaad )) (or (bvugt bv_0 #xedb00466 ) (and bool_1 false))))
(assert (=> (bvult (bvmul #x1cc9550d  bv_0) (bvudiv bv_3 #xae8f0408 )) (not (bvuge bv_2 bv_3))))
(check-sat)
(exit)
