(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (xor (xor (bvslt bv_1 bv_1) (bvsge #x9ab26cfd  #xb4048078 )) (bvsge (bvudiv bv_3 #xf75644ee ) (bvsdiv bv_3 bv_4))))
(assert (not (bvult (bvlshr #x6771bfaa  bv_0) (bvsdiv #x0a0858c9  #x3a41e9ea ))))
(assert (bvsgt (bvnand (bvand bv_3 bv_0) (bvnand #x5b0ac384  bv_0)) (bvxnor (bvurem bv_3 bv_0) (bvlshr #x32ad9e96  bv_3))))
(assert (bvsle (bvlshr (bvnor bv_2 bv_2) (bvsub #xea058007  #xf28e0c76 )) (bvashr (bvadd bv_1 bv_1) (bvsdiv #x01a7c482  bv_3))))
(assert (=> (bvsge (bvor bv_0 bv_2) (bvshl bv_4 bv_0)) (bvuge (bvashr bv_0 #x7a303b7e ) (bvashr #xc8083171  #xa95d9065 ))))
(check-sat)
(exit)
