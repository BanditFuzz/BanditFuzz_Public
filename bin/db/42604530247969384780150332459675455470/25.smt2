(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (=> (and bool_0 bool_4) (bvule bv_4 #xdf4523e2 )) (bvuge (bvshl #x49d3d5ba  #x894d8683 ) (bvsdiv #x004d75d1  #xe0eb6eb9 ))))
(assert (bvugt (bvsub (bvand #x2727a1e8  #xe282b471 ) (bvor #xf9a8d868  #x60528874 )) (bvsdiv (bvsmod bv_3 bv_3) (bvnor bv_3 #x137d3008 ))))
(assert (xor (bvslt (bvxnor bv_3 bv_0) (bvashr bv_1 bv_2)) (or (bvsle #x525d2826  #x5fd7f16a ) (xor bool_4 true))))
(assert (bvslt (bvnor (bvnand #xb568ac68  #xf41772a1 ) (bvxor #x8ae136ec  #x011dfe42 )) (bvnor (bvnor bv_3 #x4e01733d ) (bvnor bv_3 #x38acfd94 ))))
(assert (=> (xor (bvuge #x0f83d1f1  bv_0) (bvugt bv_2 bv_2)) (=> (not bool_4) (bvsgt #x569882e9  #xb91244bd ))))
(check-sat)
(exit)
