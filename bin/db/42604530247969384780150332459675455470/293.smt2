(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvslt (bvnor (bvsub bv_3 bv_4) (bvsrem bv_2 #x60fd89da )) (bvsmod (bvsub bv_0 bv_0) (bvxor bv_0 #x10ac8d40 ))))
(assert (bvuge (bvxnor (bvand #x54cc4fe6  bv_1) (bvadd bv_3 #x2eb21073 )) (bvurem (bvor bv_1 bv_3) (bvxnor #x0c822d51  #x7e2ff29d ))))
(assert (not (not (bvsge #x2a6ae305  #xc0c505f6 ))))
(assert (or (bvuge (bvlshr bv_3 #x3437587c ) (bvsrem bv_2 #xc246dbf2 )) (xor (not bool_3) (bvuge bv_1 bv_1))))
(assert (xor (=> (bvslt #x83b741ff  #x48090af7 ) (not bool_0)) (and (bvsle #xe88d76ce  bv_4) (bvsgt #xfd493ce6  #x19a98938 ))))
(check-sat)
(exit)
