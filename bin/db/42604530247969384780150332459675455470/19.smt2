(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (bvuge (bvxnor bv_1 #x94daf1ed ) (bvshl #xe3a2e796  bv_3))))
(assert (not (bvult (bvsmod bv_4 bv_2) (bvnand #x33aac524  #x369ec4f2 ))))
(assert (or (xor (bvult #x307542dd  #xe14c6ced ) (bvsge bv_0 bv_3)) (xor (bvsgt bv_1 bv_3) (bvslt #x98e40a36  bv_3))))
(assert (=> (bvuge (bvsub bv_1 bv_3) (bvsub bv_3 #x89eb331b )) (bvuge (bvadd #xd9bdd9df  #x55de6620 ) (bvsmod bv_3 bv_1))))
(assert (bvule (bvlshr (bvlshr #xa8ff253e  #xd1685cb7 ) (bvsub bv_1 bv_3)) (bvor (bvashr #xc1d2d1e7  bv_1) (bvsdiv bv_2 #xe92904d9 ))))
(check-sat)
(exit)
