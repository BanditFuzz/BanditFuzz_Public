(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (=> (bvsgt (bvsdiv #xccdc39ce  bv_4) (bvxor bv_1 bv_3)) (or (bvslt bv_1 #xa921c2db ) (not bool_1))))
(assert (=> (bvsge (bvxor #xf38e0db2  #xef427a67 ) (bvnor bv_4 bv_4)) (or (xor bool_3 true) (or false bool_0))))
(assert (bvule (bvxnor (bvor bv_3 bv_4) (bvurem #xf7659ee0  bv_1)) (bvadd (bvashr #xa45302f2  #x6b861b10 ) (bvxnor bv_2 bv_1))))
(assert (not (bvugt (bvadd bv_1 #x4fc9e0c3 ) (bvand #xdb89de05  bv_2))))
(assert (bvsle (bvsdiv (bvnand #xa8300814  bv_3) (bvadd bv_4 bv_0)) (bvxor (bvsrem bv_3 bv_0) (bvlshr #xa5bd414f  #xf1f1cef9 ))))
(check-sat)
(exit)
