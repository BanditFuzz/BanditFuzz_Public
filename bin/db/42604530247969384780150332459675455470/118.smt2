(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsge (bvxor (bvsrem bv_0 #x47a187ae ) (bvnor #xc81f9aa3  bv_4)) (bvsmod (bvsub bv_1 bv_0) (bvsrem #x6df148bb  #xde06c8c8 ))))
(assert (bvslt (bvmul (bvor bv_4 #xd829c410 ) (bvand #x13702f6a  bv_4)) (bvudiv (bvsub #x152d3ec3  #xb6bdae8a ) (bvxor bv_2 bv_1))))
(assert (bvugt (bvxnor (bvsmod #xe77b4793  #x1050b65d ) (bvsrem #xc16a4e67  #xca782787 )) (bvadd (bvsub #xa58c77f4  #x7872fc86 ) (bvshl bv_3 #x8b811aac ))))
(assert (or (or (and true true) (=> false bool_1)) (not (or false true))))
(assert (not (not (bvuge bv_1 bv_3))))
(check-sat)
(exit)
