(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsgt (bvurem (bvor bv_2 bv_0) (bvlshr #x3e085a89  #x0d83ce5b )) (bvsdiv (bvsrem bv_2 bv_3) (bvashr bv_1 bv_3))))
(assert (bvsge (bvnor (bvsdiv bv_4 #x75ede9b3 ) (bvxnor #x60b6ba76  bv_4)) (bvxor (bvsub bv_4 bv_0) (bvsmod #x02d30659  bv_0))))
(assert (or (and (and bool_4 bool_4) (bvugt bv_4 #xff7cc798 )) (=> (bvuge bv_1 bv_2) (bvsle bv_0 #xc5409d6b ))))
(assert (bvuge (bvnor (bvsrem bv_3 #x4dd352aa ) (bvxnor bv_0 bv_4)) (bvsub (bvurem bv_3 bv_3) (bvmul bv_2 bv_4))))
(assert (not (bvugt (bvshl bv_1 bv_3) (bvshl #x9d1e7f26  bv_0))))
(check-sat)
(exit)
