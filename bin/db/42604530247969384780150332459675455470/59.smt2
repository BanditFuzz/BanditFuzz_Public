(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (xor (bvsgt #x6ca66f1a  #xe581f935 ) (not true))))
(assert (=> (bvule (bvsrem #x8c33d8f5  #x1e1562c9 ) (bvsub bv_2 #xc6ecc664 )) (and (not bool_3) (and false true))))
(assert (bvule (bvadd (bvshl #x73b3cbdb  bv_2) (bvsrem #xfe327052  bv_2)) (bvmul (bvlshr #xca918669  #xe264b42c ) (bvand #xf5590068  #xae1eb3d9 ))))
(assert (=> (not (=> true bool_1)) (bvsge (bvadd bv_2 bv_1) (bvmul #x2892f788  bv_3))))
(assert (bvsge (bvurem (bvashr bv_0 #xdeb2eed5 ) (bvsdiv bv_2 bv_1)) (bvmul (bvsdiv bv_3 bv_1) (bvxor bv_3 #xc81e9f11 ))))
(check-sat)
(exit)
