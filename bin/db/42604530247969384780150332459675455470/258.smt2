(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsle (bvand (bvshl bv_0 #x0b223c7c ) (bvshl #xdac64df0  #x8b0bdafe )) (bvlshr (bvshl #xb7221cab  #xa81a9572 ) (bvshl #x536687e7  #xcb200aba ))))
(assert (xor (xor (bvule bv_1 #x70427d33 ) (not false)) (not (and bool_2 bool_0))))
(assert (xor (bvsge (bvmul bv_2 bv_4) (bvsub #x59728407  bv_3)) (not (xor bool_4 bool_2))))
(assert (bvuge (bvsdiv (bvnand bv_0 #x67198df4 ) (bvlshr #xbcde23b8  bv_1)) (bvsmod (bvxnor bv_2 bv_4) (bvsrem #x239cebc2  bv_0))))
(assert (not (=> (bvult bv_0 bv_4) (bvslt #xb26c6ae0  #x3ce4a77f ))))
(check-sat)
(exit)
