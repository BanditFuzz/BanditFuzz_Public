(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvuge (bvurem (bvsmod bv_4 #x2a97e85c ) (bvsmod bv_0 bv_4)) (bvor (bvashr #x6c0a1945  #xefac499b ) (bvsrem #xe5c612e8  #x2a0ac21c ))))
(assert (bvsle (bvsdiv (bvmul #x3fb98900  #xed94e51a ) (bvashr bv_0 bv_1)) (bvadd (bvor bv_4 bv_0) (bvsrem bv_1 bv_3))))
(assert (not (bvsle (bvsrem bv_4 #xb195b832 ) (bvadd #x4a33e8aa  #xa43eb2c1 ))))
(assert (xor (bvuge (bvxor bv_3 bv_4) (bvurem bv_1 #xf7bc1d73 )) (not (bvule bv_4 bv_0))))
(assert (xor (xor (bvsge bv_3 #x452adee9 ) (bvslt #xc139e389  bv_2)) (not (not false))))
(check-sat)
(exit)
