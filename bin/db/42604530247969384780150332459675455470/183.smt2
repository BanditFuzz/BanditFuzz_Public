(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvugt (bvurem (bvshl bv_2 bv_3) (bvadd bv_1 bv_1)) (bvxnor (bvsdiv bv_1 #xff115964 ) (bvashr bv_4 bv_4))))
(assert (=> (and (bvsgt bv_1 #x0b4a99a0 ) (bvsle #xfc551bac  #x748af6f9 )) (=> (not bool_4) (or true true))))
(assert (bvuge (bvsdiv (bvshl #xa4fe2012  #xb3515628 ) (bvlshr #xef860147  #xdfb800ae )) (bvnand (bvsub #x9a64cdad  #x72bc6c40 ) (bvsdiv bv_1 bv_4))))
(assert (or (not (=> false true)) (bvule (bvand bv_0 #xd28cf6fa ) (bvor #x111a423b  bv_0))))
(assert (not (bvugt (bvudiv #x69b07a9b  bv_1) (bvurem bv_1 #xd84816fe ))))
(check-sat)
(exit)
