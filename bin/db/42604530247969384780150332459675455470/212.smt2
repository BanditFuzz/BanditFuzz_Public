(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsgt (bvadd (bvurem bv_0 #xefdcfc0f ) (bvadd bv_3 bv_0)) (bvor (bvnand #x541ea8d7  #xad0619af ) (bvsrem bv_1 #x5d94eecd ))))
(assert (bvult (bvlshr (bvand #x012f4587  bv_4) (bvurem bv_4 bv_0)) (bvashr (bvor #xf0c93b27  #x84ac3d4a ) (bvxor bv_3 #x053b53c2 ))))
(assert (xor (bvugt (bvsub #xd3467586  #xbc70309a ) (bvand #xbbf27201  bv_0)) (or (bvuge #x2d4ff00d  #x21a31eb3 ) (xor false bool_1))))
(assert (not (bvuge (bvxor bv_3 #xd274ea24 ) (bvsdiv bv_1 #xfa06789f ))))
(assert (or (bvuge (bvashr bv_0 bv_3) (bvor bv_2 bv_3)) (=> (xor bool_0 true) (=> bool_4 bool_0))))
(check-sat)
(exit)
