(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsle (bvand (bvsrem bv_3 bv_3) (bvudiv #x7ed90cf6  bv_3)) (bvor (bvsdiv bv_1 #x31059ffd ) (bvurem #x181ef429  #x1dcbb7e2 ))))
(assert (bvult (bvxnor (bvxor #xf2a4ceb5  bv_1) (bvsdiv #x6f0340f4  bv_4)) (bvmul (bvand bv_1 bv_1) (bvsdiv #x4526f6c8  #x4c9f1891 ))))
(assert (bvsge (bvsrem (bvshl bv_2 bv_4) (bvsdiv #xe897e629  #x076d620a )) (bvadd (bvadd bv_3 #x4153a6fb ) (bvxor #x185253ed  #x1a7e024c ))))
(assert (or (bvsge (bvshl bv_0 bv_4) (bvnor bv_3 bv_3)) (=> (or true bool_2) (bvuge bv_2 bv_0))))
(assert (xor (bvslt (bvsrem bv_1 bv_4) (bvnor #xc13df330  #x62b6223e )) (bvuge (bvsrem bv_3 bv_4) (bvand bv_1 bv_0))))
(check-sat)
(exit)
