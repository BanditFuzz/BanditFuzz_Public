(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (=> (bvuge (bvor #x91172f67  #xd5875e32 ) (bvxnor #x77eb2c4e  bv_4)) (not (=> bool_1 bool_3))))
(assert (=> (xor (xor bool_2 true) (not bool_2)) (bvslt (bvnor #xc865bd7b  #x186a8794 ) (bvurem #x5a049899  #x80bf5768 ))))
(assert (bvsle (bvxor (bvxnor #xc34821c4  #x9fdf1628 ) (bvsub #xabb2d185  bv_2)) (bvadd (bvshl bv_2 bv_2) (bvor #x4704a19f  #x1e9565a4 ))))
(assert (bvult (bvlshr (bvnor #x07400b15  #xefbf40b4 ) (bvxor bv_1 #x4e7c082b )) (bvudiv (bvsmod bv_2 #x1c6c8b25 ) (bvor #x1bda9d33  bv_4))))
(assert (=> (xor (=> true false) (or true bool_2)) (and (bvugt bv_1 bv_2) (and bool_0 true))))
(check-sat)
(exit)
