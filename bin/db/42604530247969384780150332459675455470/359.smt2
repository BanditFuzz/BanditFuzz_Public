(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (xor (or (or bool_3 true) (bvuge bv_0 #x3dad3522 )) (bvsge (bvsub #x06543a03  #x12d0d367 ) (bvor #xa5f0a47e  bv_3))))
(assert (not (or (bvule #x838a4326  #xef2b9e6d ) (not bool_0))))
(assert (xor (bvugt (bvurem #xa058d70a  bv_2) (bvsub #xfe2cf65c  bv_0)) (or (bvsle bv_0 #xd06735fc ) (bvule bv_1 #xaebeef58 ))))
(assert (bvugt (bvashr (bvnor #xd2bb4f50  #x1c801eb2 ) (bvxnor bv_4 #x22baba4e )) (bvnor (bvand bv_1 bv_3) (bvudiv #xf633f4d5  bv_0))))
(assert (not (not (=> bool_1 true))))
(check-sat)
(exit)
