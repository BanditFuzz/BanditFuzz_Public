(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsle (bvadd (bvshl #xefbcd49e  #x1735f4cf ) (bvxnor bv_2 #x0218cda2 )) (bvadd (bvshl bv_0 #x47b0c298 ) (bvxor #x811c4545  bv_4))))
(assert (bvuge (bvsub (bvxnor #x286c2357  #x6c7b4cfc ) (bvurem bv_3 #xf3babac1 )) (bvand (bvsdiv #x1afcdf3c  #x96d5d7ea ) (bvor bv_1 #xa97f89dc ))))
(assert (not (=> (and bool_0 bool_4) (bvsgt bv_0 #x3b8d3220 ))))
(assert (=> (xor (bvule #x27f3bd4c  bv_4) (not bool_3)) (bvult (bvurem bv_3 bv_3) (bvand bv_0 #x26ce64b1 ))))
(assert (or (bvsle (bvurem bv_4 bv_1) (bvsdiv bv_3 bv_0)) (and (not true) (bvsgt bv_1 #xfcb3f935 ))))
(check-sat)
(exit)
