(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (and (bvult (bvashr bv_2 #x5366146d ) (bvshl #x2732b21d  #xcff071bf )) (and (=> true bool_0) (or bool_0 bool_2))))
(assert (not (and (and true bool_3) (and bool_4 true))))
(assert (bvult (bvor (bvadd bv_1 #x38865834 ) (bvudiv bv_0 bv_4)) (bvnor (bvlshr bv_4 bv_3) (bvand bv_2 #xc316672a ))))
(assert (not (or (bvule bv_3 #x558aced2 ) (bvult bv_3 bv_1))))
(assert (bvslt (bvsrem (bvxnor #x56c999e3  bv_2) (bvxor #x41aa2f8a  bv_3)) (bvlshr (bvnand #x9c71ab64  #x575f679e ) (bvsrem bv_4 bv_3))))
(check-sat)
(exit)
