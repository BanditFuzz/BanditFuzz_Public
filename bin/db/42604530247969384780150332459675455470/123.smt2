(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsge (bvsdiv (bvsmod #xbac85d1f  #x032fdc46 ) (bvashr #xc0b2e5b7  #xb9beb4bc )) (bvor (bvsub bv_0 #x8e329162 ) (bvlshr #xf166ce65  #x3a67fe07 ))))
(assert (bvsle (bvsdiv (bvurem #x1df5caaf  bv_2) (bvsub bv_4 #xefa5d956 )) (bvand (bvurem #xb5df6fcc  bv_1) (bvsmod bv_3 #xacc32890 ))))
(assert (or (or (bvule #xacdc232b  bv_2) (=> true true)) (bvult (bvmul #x6a35857b  bv_4) (bvurem #x80cde70a  bv_2))))
(assert (bvule (bvsub (bvsrem #x74f7cdd2  #xe85a692d ) (bvxnor bv_3 bv_2)) (bvashr (bvxor bv_2 bv_4) (bvnor #xabf9f2d5  #x2370b91e ))))
(assert (not (and (bvsle #x7ce83c20  #x205eedf4 ) (=> false bool_3))))
(check-sat)
(exit)
