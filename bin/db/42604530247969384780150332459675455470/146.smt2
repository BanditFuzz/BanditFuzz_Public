(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvule (bvlshr (bvadd #xbcca7762  #xb811cb2a ) (bvsrem #x89d31044  #x6201e1ef )) (bvsdiv (bvadd #x0599c57f  bv_3) (bvlshr bv_1 bv_1))))
(assert (not (and (=> false bool_4) (and bool_1 true))))
(assert (xor (or (not true) (and bool_0 true)) (bvugt (bvxnor bv_1 bv_2) (bvmul #x5bf62d86  #x35701415 ))))
(assert (and (or (bvuge bv_2 bv_1) (not true)) (bvslt (bvxnor bv_4 bv_1) (bvlshr #x7fa94b5c  #xa5a9fe2b ))))
(assert (bvsge (bvurem (bvnand bv_4 #x6789f361 ) (bvor bv_2 bv_3)) (bvmul (bvadd #x69d4abbc  bv_3) (bvurem #x7004e2c1  bv_2))))
(check-sat)
(exit)
