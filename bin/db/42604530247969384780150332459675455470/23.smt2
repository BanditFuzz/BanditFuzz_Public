(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsle (bvadd (bvsmod bv_3 bv_4) (bvsdiv bv_2 bv_0)) (bvudiv (bvsdiv #x791e9be7  #x0b5759d4 ) (bvxor #x09be6d2d  bv_3))))
(assert (not (bvslt (bvnand #x1bea9c4a  bv_0) (bvxor #x8cf3f70e  bv_4))))
(assert (=> (=> (bvuge bv_2 bv_3) (xor bool_2 bool_0)) (bvuge (bvmul bv_4 bv_1) (bvadd #x1b7b0af9  #x7618f44a ))))
(assert (bvsgt (bvsrem (bvnand #xf463c077  bv_3) (bvxor #xaee5a96f  bv_4)) (bvlshr (bvxnor bv_2 #x9737b98c ) (bvshl #x5f381dad  bv_0))))
(assert (not (bvuge (bvmul bv_0 bv_1) (bvxor bv_0 bv_0))))
(check-sat)
(exit)
