(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvslt (bvsdiv (bvand #x3b7c9c06  bv_2) (bvsmod #x9857d7ad  #xdae2e8d0 )) (bvadd (bvand bv_2 #x87da88f8 ) (bvand bv_3 bv_2))))
(assert (=> (bvslt (bvsub #xb5c67c70  bv_4) (bvsdiv #x0de47ccd  bv_1)) (and (=> bool_2 bool_3) (bvsge bv_2 bv_2))))
(assert (and (bvsge (bvnor #x3cb6ac9c  bv_2) (bvxnor #x2ca07a93  #xc997c8df )) (or (not false) (bvsle bv_4 #x01c54cf2 ))))
(assert (bvsge (bvxor (bvand bv_3 bv_1) (bvsrem #xe6067a78  #x7b54e935 )) (bvsub (bvsdiv #x70b68a8e  #xea260dc8 ) (bvxor #x8f25fe00  #x8c57bf9a ))))
(assert (not (xor (or bool_2 bool_3) (not false))))
(check-sat)
(exit)
