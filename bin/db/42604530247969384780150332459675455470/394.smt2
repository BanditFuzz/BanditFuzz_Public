(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (bvsle (bvxnor bv_0 bv_4) (bvashr #xc29b584f  bv_0))))
(assert (=> (bvsle (bvor bv_0 #x44a869f7 ) (bvmul bv_4 #x230b0471 )) (not (xor false true))))
(assert (bvsge (bvnand (bvudiv bv_3 #xde846620 ) (bvadd #x1d53eecb  bv_4)) (bvadd (bvsub bv_2 #x5d60176c ) (bvudiv #x13e59a79  bv_4))))
(assert (bvule (bvxnor (bvadd #xe10f797d  #x9616f646 ) (bvxor #xc87bbdba  #x1ddd67e9 )) (bvshl (bvsrem #x408767d1  #xad7087f5 ) (bvlshr bv_4 #x994cab2f ))))
(assert (not (=> (not bool_0) (xor true bool_2))))
(check-sat)
(exit)
