(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (xor (or (bvule #xbf3c73cd  bv_3) (bvuge bv_0 bv_0)) (or (bvule #x188d5609  #x5366527b ) (bvsle bv_2 bv_1))))
(assert (bvule (bvashr (bvlshr bv_1 #x145f6982 ) (bvsrem bv_2 bv_2)) (bvxor (bvnor #x1183e9de  bv_1) (bvand bv_4 #x6882833a ))))
(assert (bvsle (bvsrem (bvashr bv_0 #xe182d209 ) (bvshl #x3a3be239  #xa56a3336 )) (bvor (bvand bv_1 #xcf1518da ) (bvmul #x6ece27c8  bv_1))))
(assert (=> (bvslt (bvnor #x202803df  bv_3) (bvxor bv_2 #xfb96d98f )) (bvuge (bvudiv bv_4 #x1c6959d5 ) (bvadd bv_1 #xb1e71d6c ))))
(assert (and (bvsge (bvnand bv_3 bv_2) (bvshl bv_4 #xc1787ddd )) (=> (and bool_2 bool_4) (bvsge bv_1 bv_1))))
(check-sat)
(exit)
