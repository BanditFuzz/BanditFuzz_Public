(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvule (bvurem (bvnor bv_2 #xc82efd1d ) (bvnor #x7142393e  bv_2)) (bvudiv (bvnor #xe0eec275  bv_1) (bvsdiv bv_3 #xfd1634d8 ))))
(assert (or (bvsge (bvadd #x7ef36c19  #xd4bd0bbf ) (bvudiv #x40fafe95  #x6ef72627 )) (bvugt (bvxor bv_1 #xa85f9a69 ) (bvadd bv_4 #x601cc0aa ))))
(assert (not (=> (and true bool_1) (bvugt #xe0bfac16  bv_3))))
(assert (bvuge (bvudiv (bvxnor #x393deb18  bv_4) (bvor bv_2 #xae9f2ee2 )) (bvxor (bvxor #xc608a9ba  bv_1) (bvsrem bv_1 bv_4))))
(assert (xor (bvsle (bvlshr bv_0 bv_2) (bvshl #xecd5b84d  #xd05c6d4a )) (xor (bvslt #xafd8ebc4  #x8a65e0c7 ) (bvuge #xe9094ba8  bv_2))))
(check-sat)
(exit)
