(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvugt (bvsub (bvlshr bv_0 bv_0) (bvor bv_2 #x9651718b )) (bvnand (bvsrem #x0f4d9e49  #x973d80ec ) (bvudiv bv_3 #x4732aced ))))
(assert (bvule (bvand (bvsub bv_3 #xb15e3bc3 ) (bvshl #xec7a2feb  bv_2)) (bvnor (bvudiv #x48e36d0c  #xd2539660 ) (bvxor bv_0 bv_1))))
(assert (or (bvult (bvxor bv_4 #x6ae4e6f1 ) (bvnor #x84894446  bv_0)) (bvsge (bvxnor #x282b18f6  bv_2) (bvlshr #x6bada420  bv_3))))
(assert (and (=> (=> bool_1 false) (bvugt #x8fbccbf6  bv_2)) (bvsle (bvsrem #xc09aba7e  bv_2) (bvnand #x97c1c166  #x15ae61c7 ))))
(assert (=> (bvsgt (bvashr bv_0 bv_4) (bvnor #x3f7af8ea  bv_4)) (not (xor true bool_3))))
(check-sat)
(exit)
