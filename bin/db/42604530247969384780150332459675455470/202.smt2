(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (and (bvule bv_4 bv_2) (and bool_2 false)) (bvsge (bvsub bv_2 #x3d8039b3 ) (bvshl #x2ccfaa21  #x00431a7f ))))
(assert (bvuge (bvudiv (bvsub bv_2 bv_0) (bvashr bv_4 #xd0b39fbc )) (bvurem (bvxnor bv_2 #x7630e12d ) (bvadd bv_0 bv_3))))
(assert (xor (=> (bvule bv_0 #xec645fc0 ) (=> bool_4 bool_3)) (=> (not false) (and bool_3 bool_1))))
(assert (not (=> (or bool_0 false) (bvsle #x675360c1  #xe4001077 ))))
(assert (bvsgt (bvand (bvsrem #x5f7e1e51  bv_3) (bvadd bv_1 #x93f1f8e7 )) (bvashr (bvudiv #xd30e0333  bv_1) (bvnor bv_1 #x0e48f0ee ))))
(check-sat)
(exit)
