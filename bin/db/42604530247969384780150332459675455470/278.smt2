(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (and (not false) (not true))))
(assert (bvslt (bvsdiv (bvnor bv_2 #x1901f7d8 ) (bvudiv #x1c78d1cd  #x1aa877af )) (bvnor (bvnand bv_2 #x82fae317 ) (bvsdiv bv_3 bv_2))))
(assert (and (and (=> true false) (=> bool_0 bool_1)) (bvule (bvlshr bv_3 #x35465ef2 ) (bvlshr #xf3398209  bv_4))))
(assert (=> (not (bvult #x38ecbafd  #x6235359b )) (=> (bvule bv_1 #x5c293278 ) (bvugt #xf489abda  #xd32257d0 ))))
(assert (bvugt (bvsdiv (bvshl bv_1 bv_3) (bvnor #x2d75cb6c  bv_1)) (bvshl (bvxnor bv_4 #xf9e5c990 ) (bvashr #x5c8c1461  #xb81b4f3f ))))
(check-sat)
(exit)
