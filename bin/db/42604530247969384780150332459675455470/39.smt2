(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (not (not bool_1)) (xor (bvuge #xfd32bf3a  #x137a1f32 ) (bvule #x06be1997  bv_1))))
(assert (bvsge (bvlshr (bvor bv_3 bv_2) (bvmul #xef4984e8  #x25e1020e )) (bvshl (bvand bv_4 bv_0) (bvlshr bv_1 bv_3))))
(assert (bvsle (bvsmod (bvurem bv_4 bv_0) (bvshl #x725812d2  #x4189a273 )) (bvxnor (bvsdiv bv_2 #x7a7bd305 ) (bvsub #x6921f6fa  #x6489b746 ))))
(assert (not (and (and false true) (bvsge bv_4 bv_1))))
(assert (bvult (bvshl (bvsmod bv_1 bv_1) (bvashr bv_0 bv_0)) (bvsdiv (bvxor bv_4 #x0635cd05 ) (bvand bv_4 #x5cb20a4b ))))
(check-sat)
(exit)
