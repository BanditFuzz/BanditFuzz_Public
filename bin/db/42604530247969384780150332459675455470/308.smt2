(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (and (or (bvsge bv_0 #xce1c45e4 ) (bvsge #x432ba2af  bv_1)) (bvugt (bvlshr bv_3 bv_0) (bvand bv_3 bv_3))))
(assert (bvuge (bvurem (bvashr #x4792b2c4  bv_3) (bvnor #x44299071  #x8bfaabc8 )) (bvmul (bvadd #xadbc448d  bv_4) (bvmul #x4af9e5b8  #xb62177f9 ))))
(assert (bvuge (bvshl (bvashr bv_4 bv_3) (bvxor bv_3 bv_1)) (bvurem (bvsub #xf9595afe  bv_4) (bvor #xa5d9ad2f  #x5209a8bb ))))
(assert (bvult (bvlshr (bvsrem bv_2 #x47d1ef53 ) (bvor bv_0 #x190082b9 )) (bvudiv (bvurem bv_2 #x5e6f04aa ) (bvand #xa8a9c044  #x03941c4d ))))
(assert (and (=> (xor bool_3 bool_2) (bvuge bv_0 bv_2)) (=> (bvsle bv_3 #xa1d1a1c4 ) (xor bool_3 bool_1))))
(check-sat)
(exit)
