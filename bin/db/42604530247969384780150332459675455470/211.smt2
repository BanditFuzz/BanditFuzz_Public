(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (=> (bvslt (bvnor #x57e6a71b  bv_3) (bvnand bv_1 #x74a7a66b )) (or (and bool_2 bool_4) (bvslt bv_3 bv_4))))
(assert (bvugt (bvashr (bvand bv_4 #xc7b5b024 ) (bvshl bv_3 #x9fac8ad1 )) (bvudiv (bvsmod #x7d3dee05  bv_4) (bvand bv_4 #xb91dc813 ))))
(assert (bvslt (bvxnor (bvsub #x2fb01a1a  #x2d31820b ) (bvsdiv bv_3 bv_1)) (bvmul (bvlshr #x4748bd91  #xe668a07e ) (bvnand #x6deb49ec  #x340032f1 ))))
(assert (bvslt (bvnor (bvsmod #x1ed10b81  #x49dcf5d9 ) (bvmul #xc01bdef5  bv_3)) (bvxnor (bvsub #x6fe44384  bv_3) (bvudiv bv_4 #x37052c2c ))))
(assert (=> (=> (and true bool_1) (bvsge bv_0 #x6a66bee4 )) (bvsle (bvnor bv_0 bv_3) (bvor bv_1 bv_0))))
(check-sat)
(exit)
