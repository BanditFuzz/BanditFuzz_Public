(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvule (bvxnor (bvmul bv_2 #x2fa73298 ) (bvmul #xf053385d  #xdb1b3c08 )) (bvand (bvudiv bv_4 bv_3) (bvor bv_1 bv_4))))
(assert (bvsgt (bvnand (bvnor bv_0 bv_4) (bvadd #x1ef5ce00  bv_0)) (bvlshr (bvshl bv_2 bv_4) (bvsub bv_3 bv_1))))
(assert (=> (bvugt (bvor bv_4 #x20eb35c8 ) (bvurem bv_0 #x26f30f9f )) (not (bvsle #x919d45b8  bv_3))))
(assert (bvuge (bvsub (bvudiv #x4a070cbd  bv_0) (bvnor bv_0 bv_1)) (bvnor (bvsub #x3adfc139  bv_3) (bvsrem bv_3 bv_1))))
(assert (not (bvugt (bvlshr bv_4 #xa98b718e ) (bvlshr bv_0 bv_4))))
(check-sat)
(exit)
