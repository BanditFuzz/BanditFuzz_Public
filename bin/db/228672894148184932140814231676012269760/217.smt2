(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (and (not (bvslt bv_4 bv_3)) (bvsge (bvsmod #xdc2b7600  bv_4) (bvor bv_2 #x26baa6b7 ))))
(assert (bvuge (bvashr (bvnand #x188e337f  bv_3) (bvnor #x698eeaf7  bv_4)) (bvshl (bvnand #x9becf762  #x452cc829 ) (bvsdiv #x257c5f10  bv_4))))
(assert (or (bvult (bvudiv #xf5a2753f  bv_3) (bvadd bv_2 bv_3)) (and (bvult #xe356efb2  bv_3) (and true bool_1))))
(assert (bvule (bvand (bvsrem bv_4 bv_3) (bvand bv_4 bv_1)) (bvudiv (bvsub bv_0 #x0320b8ab ) (bvurem bv_0 #x1ee1a630 ))))
(assert (or (bvsle (bvsdiv bv_0 bv_3) (bvashr bv_0 bv_2)) (=> (bvugt bv_4 #x0ad3ace7 ) (or false true))))
(check-sat)
(exit)
