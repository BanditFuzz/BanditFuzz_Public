(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (=> (bvslt (bvsub #x28d593d2  #xf1d1a95b ) (bvor bv_2 bv_0)) (bvsgt (bvnand bv_1 #x6437a631 ) (bvadd bv_2 bv_3))))
(assert (=> (not (or false false)) (and (not false) (bvugt bv_3 bv_2))))
(assert (bvsle (bvsrem (bvsrem bv_3 #x3ff10a3d ) (bvxor bv_3 #x14e6ae0e )) (bvurem (bvurem bv_2 bv_4) (bvsub #xd7a78e71  bv_4))))
(assert (not (bvsgt (bvudiv #x724975e6  bv_2) (bvxnor #x95687a59  #xdad9b25b ))))
(assert (bvuge (bvsub (bvxor bv_0 #xaca536f8 ) (bvor #x35ba2510  #x7a3c17ac )) (bvlshr (bvudiv bv_0 bv_3) (bvsmod bv_0 bv_4))))
(check-sat)
(exit)
