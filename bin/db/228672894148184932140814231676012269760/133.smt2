(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (not (or false bool_1))))
(assert (or (bvslt (bvshl bv_2 bv_1) (bvsrem #x806ad2cd  #x1a0c628f )) (xor (xor true false) (bvsge #x0fc41862  #xa38a8f01 ))))
(assert (bvugt (bvshl (bvurem #xfbfedaa2  #x8b4379ad ) (bvsdiv #xfdb089ae  bv_0)) (bvadd (bvshl bv_2 #x9ba090cc ) (bvadd #x77047c77  bv_4))))
(assert (xor (and (bvslt bv_2 bv_0) (bvugt bv_2 #x1f59a051 )) (bvsle (bvxnor bv_2 #x64139d41 ) (bvxor bv_4 bv_4))))
(assert (bvugt (bvsmod (bvshl #xce34b016  bv_1) (bvsmod bv_1 #x837cb606 )) (bvor (bvand #x6c9ba127  bv_2) (bvor bv_3 bv_4))))
(check-sat)
(exit)
