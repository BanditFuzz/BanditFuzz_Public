(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (bvsge (bvand bv_2 bv_2) (bvsdiv #x604ccccd  #x0d33c9d8 ))))
(assert (=> (or (=> bool_3 false) (bvuge #xbad346e0  #xce7fe5ae )) (bvslt (bvudiv bv_2 #x3e1a4b69 ) (bvshl #x482bf126  bv_4))))
(assert (or (bvule (bvnor bv_1 bv_1) (bvnand bv_3 bv_0)) (or (bvsge #xdd208a80  bv_4) (xor false true))))
(assert (bvule (bvor (bvxnor #x83202dca  #xdf74c9b1 ) (bvashr #xca1ea803  bv_1)) (bvsrem (bvsub bv_2 bv_0) (bvsub bv_3 bv_0))))
(assert (bvuge (bvurem (bvurem bv_3 bv_4) (bvor bv_4 bv_2)) (bvadd (bvxor bv_3 bv_3) (bvurem #x3dd0b135  #xc2592ce6 ))))
(check-sat)
(exit)
