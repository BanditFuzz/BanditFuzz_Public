(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvult (bvnor (bvadd #x4c6b18bf  #x92385281 ) (bvurem bv_1 bv_0)) (bvsrem (bvlshr bv_1 #x1b18959a ) (bvand #x4babdbd0  bv_1))))
(assert (=> (bvsgt (bvnand bv_4 #x08a297bd ) (bvxor bv_1 #x75efa0a6 )) (or (bvult #xd89f937d  #xce1fedc5 ) (or false false))))
(assert (or (bvuge (bvadd bv_2 bv_2) (bvsdiv #x1795d233  #x810bdecf )) (xor (bvult bv_3 #x8faaab6d ) (bvule bv_4 #x7ff232c4 ))))
(assert (bvuge (bvlshr (bvurem bv_1 #x5f768e92 ) (bvsub bv_2 bv_3)) (bvnand (bvsmod bv_0 bv_4) (bvnand bv_1 #x405110ab ))))
(assert (=> (and (bvule #x42cfc36f  #xeb04ea89 ) (or false bool_3)) (bvsgt (bvshl #xa96288ad  bv_2) (bvxor #x4683be19  #x9efe0183 ))))
(check-sat)
(exit)
