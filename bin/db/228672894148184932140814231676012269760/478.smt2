(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (and (or (or bool_3 true) (bvult bv_2 bv_0)) (xor (bvsgt #x4600890d  bv_0) (bvsle #x91449253  #x444c83b0 ))))
(assert (not (bvsge (bvsub #xa4c62298  #x7748ec97 ) (bvsdiv bv_4 bv_0))))
(assert (not (bvslt (bvor bv_0 #x623e189b ) (bvadd #x9eb87fc1  bv_3))))
(assert (bvsge (bvnand (bvand #x084ce10d  bv_0) (bvsrem #x3f0fdfde  bv_3)) (bvsub (bvsub #xac18e25e  bv_3) (bvurem bv_4 #x9f36e256 ))))
(assert (bvsgt (bvadd (bvsdiv #xbf86ea44  bv_4) (bvor #x5705f5a8  #x32445bf9 )) (bvnor (bvashr #xed9e769c  bv_2) (bvashr bv_2 #xaefc4aee ))))
(check-sat)
(exit)
