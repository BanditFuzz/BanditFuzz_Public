(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvult (bvudiv (bvxnor #xa37c0dc7  #xdd04d2c0 ) (bvlshr #xa442134a  bv_1)) (bvxor (bvurem #x385506e0  #x34ac89f7 ) (bvadd bv_3 #x85b88b96 ))))
(assert (bvugt (bvnand (bvshl bv_1 bv_3) (bvsrem bv_0 #x09ada40a )) (bvnand (bvadd bv_2 #x5a45ac2a ) (bvnand bv_0 #x9b6b68ed ))))
(assert (not (=> (xor bool_1 bool_2) (or false false))))
(assert (xor (not (bvslt #xd71588d3  bv_3)) (bvuge (bvadd bv_4 bv_3) (bvsdiv #x124134fa  bv_4))))
(assert (bvult (bvsub (bvadd #x109351d3  #x734fcac7 ) (bvsdiv bv_3 bv_3)) (bvnor (bvadd bv_2 bv_1) (bvand bv_2 bv_0))))
(check-sat)
(exit)
