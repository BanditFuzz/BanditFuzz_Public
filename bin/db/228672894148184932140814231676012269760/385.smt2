(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (=> (bvult (bvlshr #x2051e82c  bv_3) (bvsrem bv_2 #xf0658866 )) (not (bvugt bv_2 bv_3))))
(assert (xor (bvslt (bvand bv_2 bv_1) (bvadd #x430fd582  bv_2)) (or (bvsgt #x3cf4cf5d  bv_2) (bvsge bv_4 bv_3))))
(assert (bvsle (bvxor (bvudiv bv_2 #x3fc287b5 ) (bvsmod bv_0 #x84067248 )) (bvxor (bvsrem bv_1 #x2029487c ) (bvsmod bv_3 bv_1))))
(assert (not (not (bvule #x5e310aa2  bv_0))))
(assert (bvult (bvsdiv (bvxnor #xa2ef1620  #x27065646 ) (bvxnor #x9c460efe  #x93a3d532 )) (bvudiv (bvnand #xc2847763  bv_3) (bvudiv bv_3 bv_2))))
(check-sat)
(exit)
