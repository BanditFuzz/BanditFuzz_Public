(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvule (bvnand (bvsub #x6dd63977  #xdc314269 ) (bvxnor bv_1 bv_3)) (bvsmod (bvand #xd44fd4db  #x878100f3 ) (bvsub bv_3 #x23e0cfea ))))
(assert (and (xor (bvugt #x4f982350  bv_4) (bvsgt bv_3 #x9789b48b )) (bvsge (bvxor #xda5dc173  bv_3) (bvxnor bv_2 #x39a80d65 ))))
(assert (=> (bvsgt (bvurem #x5b62e6e4  #x2a8629a5 ) (bvshl #x6c5808fe  #x9339191e )) (bvsge (bvnand #x02ad1bd6  #xc49981d0 ) (bvxor bv_2 #x0dc336f0 ))))
(assert (and (=> (not true) (bvugt bv_2 bv_3)) (and (bvsle bv_0 bv_1) (xor true true))))
(assert (and (xor (or bool_3 true) (bvule #x5e7a764f  bv_2)) (bvugt (bvmul #x243eed0f  #xe43a8a1e ) (bvmul bv_3 bv_1))))
(check-sat)
(exit)
