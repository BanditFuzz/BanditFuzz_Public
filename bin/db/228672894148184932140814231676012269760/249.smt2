(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvule (bvurem (bvxnor #xff43c62f  #xc926f032 ) (bvor bv_0 #x6a9dae80 )) (bvsmod (bvnor bv_1 #x5628c1ad ) (bvsub #x10174243  #x578d3faa ))))
(assert (bvsgt (bvsmod (bvlshr bv_2 bv_0) (bvudiv bv_0 bv_0)) (bvxor (bvsdiv #xbcb1252c  bv_1) (bvand #xbd939a38  #x9e0e0180 ))))
(assert (bvult (bvnand (bvnor #xcd82a937  #x03204f87 ) (bvsdiv bv_3 #x92e5f30c )) (bvsub (bvlshr #xd034f4ab  bv_1) (bvmul bv_0 bv_2))))
(assert (not (and (bvsge #x09f001df  #xbe0be8c7 ) (=> false bool_4))))
(assert (or (bvsge (bvand bv_1 #x1309811b ) (bvmul #xa7bd1e48  #x1a7342f5 )) (xor (or bool_4 bool_2) (bvsge #x8e1c9f38  #x972d17ba ))))
(check-sat)
(exit)
