(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (bvsge (bvnand bv_4 bv_1) (bvor #xf7505cbc  bv_4))))
(assert (bvult (bvxor (bvadd #xf5389ba8  bv_4) (bvudiv bv_2 bv_3)) (bvnand (bvsrem #x6d23bc86  bv_0) (bvashr #xd0e716d4  #x11025cbb ))))
(assert (=> (xor (bvsge #xa814ae5c  bv_1) (not true)) (bvuge (bvashr #x5ade98eb  bv_4) (bvxor #xa3507eee  bv_1))))
(assert (not (or (=> false bool_2) (xor bool_1 false))))
(assert (bvuge (bvxnor (bvnor #x7089345a  #xf98e5744 ) (bvxor #x645d29f8  #xd07cd10f )) (bvand (bvmul bv_3 #x9fa9f3fc ) (bvsrem #xbad9a587  #x03aaabe1 ))))
(check-sat)
(exit)
