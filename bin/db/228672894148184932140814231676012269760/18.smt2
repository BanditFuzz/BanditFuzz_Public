(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (and (and (and bool_0 bool_4) (bvuge #x436ac9e7  bv_2)) (xor (=> bool_2 bool_1) (or true bool_3))))
(assert (or (not (xor bool_3 bool_0)) (bvult (bvsub #x4147a441  bv_2) (bvand bv_4 #x3a0fa40c ))))
(assert (bvuge (bvudiv (bvshl bv_1 #xbe627acb ) (bvsub bv_0 #xf01a66b6 )) (bvsdiv (bvurem bv_4 bv_2) (bvshl #x1f42b9fc  #x58d72160 ))))
(assert (bvult (bvxnor (bvsrem bv_3 bv_0) (bvlshr #x907195d9  bv_4)) (bvashr (bvor bv_2 bv_0) (bvor bv_2 bv_2))))
(assert (xor (and (not true) (bvslt #xb96d32c8  #x1a26c01b )) (bvule (bvsrem bv_0 #xb5c1bd9f ) (bvmul #xef70b49e  bv_1))))
(check-sat)
(exit)
