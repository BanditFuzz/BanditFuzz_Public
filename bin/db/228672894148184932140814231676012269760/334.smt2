(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (and (xor false bool_2) (or true false)) (bvslt (bvmul #x4e3f1294  bv_2) (bvxnor #x498810a9  #xe7ea9a92 ))))
(assert (not (bvuge (bvnor bv_0 bv_1) (bvor bv_2 bv_2))))
(assert (bvsgt (bvlshr (bvsdiv bv_4 bv_1) (bvor #xd5cdf11c  #xba2ba3c4 )) (bvmul (bvudiv #x79719465  #xb162c6ed ) (bvnor #x93f5693e  #xb67a4608 ))))
(assert (bvult (bvadd (bvsrem bv_1 bv_4) (bvsmod #x417ecc84  bv_1)) (bvsdiv (bvmul #x3ee36808  #x65a17eee ) (bvmul #x82b8bb64  bv_0))))
(assert (or (xor (bvuge bv_0 #x633db1e5 ) (xor bool_3 bool_3)) (and (not false) (xor bool_4 true))))
(check-sat)
(exit)
