(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsge (bvashr (bvsub #xad12fee5  bv_1) (bvudiv #xb4f647cf  #x157331e3 )) (bvsmod (bvnor #x44a5a42f  #x1801c016 ) (bvudiv #xb4ca1514  #xc5798960 ))))
(assert (bvsle (bvand (bvashr #x7ee2478a  #x000c0e38 ) (bvor bv_0 #x7096c402 )) (bvsub (bvashr bv_4 bv_0) (bvxor bv_1 #x56e162fa ))))
(assert (bvsge (bvudiv (bvxnor bv_3 bv_3) (bvsdiv bv_1 bv_4)) (bvmul (bvxor #xa09afe80  bv_1) (bvor bv_4 bv_2))))
(assert (not (=> (bvult #x028726c8  bv_0) (and true bool_0))))
(assert (not (bvsle (bvlshr #x744e72b4  #x417ce182 ) (bvor bv_0 #x451a9f40 ))))
(check-sat)
(exit)
