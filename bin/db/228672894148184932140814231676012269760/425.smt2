(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (=> (bvsgt (bvor #x720dbabb  bv_2) (bvxnor #x1a6d9cf4  bv_0)) (xor (bvuge #x61a6c782  bv_1) (not bool_3))))
(assert (bvuge (bvsrem (bvnor bv_4 bv_3) (bvurem bv_2 #x11f2d979 )) (bvsdiv (bvurem bv_4 #x767b0d63 ) (bvashr bv_1 bv_2))))
(assert (=> (bvult (bvxnor #xa8b5db32  #x15762cb1 ) (bvashr bv_1 #xc893d3a5 )) (bvsgt (bvsrem bv_1 #xc3e3ff42 ) (bvnor #xb2313c5e  #x9ed838db ))))
(assert (bvsgt (bvxor (bvsub bv_3 bv_1) (bvsub bv_2 bv_3)) (bvadd (bvand #x96747859  bv_4) (bvshl #xba677baf  bv_2))))
(assert (or (and (bvsgt #x6ab34587  #x399f038c ) (bvult bv_0 #x86da6367 )) (bvsle (bvashr bv_2 bv_0) (bvashr #x2dfdf597  bv_1))))
(check-sat)
(exit)
