(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (bvule (bvmul #xa4c719fa  #x34510b90 ) (bvor bv_2 bv_3)) (bvule (bvudiv bv_3 #xaf60b077 ) (bvand bv_0 #x537de688 ))))
(assert (bvsle (bvurem (bvurem bv_0 bv_4) (bvlshr bv_1 #x4f9ed0a8 )) (bvudiv (bvnand bv_1 #x632f5fbe ) (bvashr bv_3 bv_4))))
(assert (=> (bvsge (bvsdiv bv_0 bv_4) (bvxor #xfaf5a7aa  #x45cc9ae8 )) (bvsge (bvxor #x58f12ad7  bv_4) (bvsdiv #x28679c88  bv_4))))
(assert (bvule (bvsdiv (bvashr bv_1 bv_2) (bvudiv bv_2 #x9faec559 )) (bvsmod (bvlshr #xad44494b  bv_0) (bvshl bv_4 #xa4be2f8f ))))
(assert (not (and (=> false true) (bvsgt #xcc13eee4  bv_2))))
(check-sat)
(exit)
