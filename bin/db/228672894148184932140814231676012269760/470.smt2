(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (=> (and (bvult bv_1 bv_2) (bvslt bv_4 bv_2)) (bvugt (bvsub bv_1 #xf4b1275e ) (bvshl #x13ad14ff  #x82f892df ))))
(assert (=> (=> (bvugt bv_3 bv_1) (xor bool_3 true)) (not (and false bool_0))))
(assert (bvugt (bvsrem (bvand bv_4 bv_2) (bvor #x7bd63f97  bv_1)) (bvshl (bvsub bv_2 bv_2) (bvxnor bv_2 bv_0))))
(assert (bvule (bvmul (bvxor bv_3 bv_0) (bvor bv_4 #xfba7bd3c )) (bvashr (bvnand bv_4 bv_0) (bvxnor #x14839a16  #x28ef2913 ))))
(assert (xor (xor (bvugt bv_4 #x8b46f090 ) (and bool_3 bool_1)) (bvsge (bvor #xc7d89a0e  #xec66de2f ) (bvsdiv bv_0 bv_0))))
(check-sat)
(exit)
