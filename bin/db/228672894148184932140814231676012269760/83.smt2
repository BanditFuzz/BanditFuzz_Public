(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (or (bvslt #xba5cb679  #xeaf33076 ) (bvult bv_1 #xfd8742b5 )) (bvsge (bvmul bv_2 #x842ce7ba ) (bvnand #x5b5d6ee8  #x4176a1c2 ))))
(assert (bvsgt (bvurem (bvxor bv_1 bv_2) (bvurem #x3067c6b7  bv_2)) (bvsub (bvand bv_2 bv_4) (bvsmod bv_4 #x673a226e ))))
(assert (bvslt (bvlshr (bvsrem bv_0 bv_0) (bvor bv_0 #x2a1c9e30 )) (bvlshr (bvsmod #x70cd51d7  bv_0) (bvnand #xe794403d  #xe34a7651 ))))
(assert (bvule (bvadd (bvurem #xf5bb6d05  #xb1ab2265 ) (bvsmod bv_2 bv_2)) (bvxnor (bvxor #x34fa9025  bv_0) (bvshl bv_3 #xf81b2c54 ))))
(assert (xor (=> (or bool_1 bool_2) (bvule #xa0ecd09a  bv_4)) (xor (bvsle #x86565e09  bv_4) (=> bool_1 bool_3))))
(check-sat)
(exit)
