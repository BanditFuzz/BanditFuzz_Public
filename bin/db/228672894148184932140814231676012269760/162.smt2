(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (xor (xor (bvslt bv_2 #xe77dfacc ) (bvsge bv_4 bv_3)) (=> (bvule bv_1 #xd43f74b0 ) (xor false bool_4))))
(assert (bvsge (bvurem (bvashr #xc444ba2a  #xbff70f3f ) (bvnand #x1578119c  bv_3)) (bvnor (bvsrem bv_4 bv_2) (bvxor bv_1 bv_2))))
(assert (bvuge (bvnor (bvlshr #x44f22950  #x60fb3676 ) (bvnand #x6f4d99a1  bv_2)) (bvnor (bvashr bv_0 bv_0) (bvnor #x38f8f40e  bv_4))))
(assert (=> (bvule (bvxnor bv_3 #xd19360a9 ) (bvmul bv_0 bv_1)) (and (=> true bool_0) (or true true))))
(assert (bvuge (bvshl (bvadd bv_1 bv_1) (bvand #x8ca6db95  #xa2c85df6 )) (bvlshr (bvlshr bv_4 #x7bfff7ba ) (bvnand #xc4c2be12  bv_0))))
(check-sat)
(exit)
