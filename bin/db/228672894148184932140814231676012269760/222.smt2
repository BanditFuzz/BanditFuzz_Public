(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvuge (bvxnor (bvnand bv_0 bv_4) (bvxnor #xabc8466a  bv_2)) (bvadd (bvxor #x554d2afd  bv_1) (bvsdiv bv_1 bv_1))))
(assert (not (not (bvsge bv_2 #x4eff683e ))))
(assert (bvult (bvsrem (bvshl #x408f5761  #xd76e365a ) (bvsmod bv_1 bv_3)) (bvsmod (bvmul bv_0 bv_3) (bvadd bv_1 bv_2))))
(assert (bvsgt (bvashr (bvsdiv #xae628c8a  bv_3) (bvand bv_1 #x84ea56c8 )) (bvadd (bvor #x23824dc2  bv_3) (bvashr bv_4 bv_3))))
(assert (xor (bvugt (bvnor bv_4 bv_2) (bvashr #x963187a1  #xa299e014 )) (bvugt (bvxor bv_2 #xf324676c ) (bvsub bv_4 bv_4))))
(check-sat)
(exit)
