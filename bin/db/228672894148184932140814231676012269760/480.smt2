(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (=> (bvult #x348a36ac  bv_3) (=> false false))))
(assert (=> (and (not true) (bvugt bv_1 bv_4)) (or (not true) (bvult #x34447f84  #x1a5d4a07 ))))
(assert (bvult (bvor (bvlshr #x9f63629a  bv_0) (bvxnor bv_2 #x64d5abe7 )) (bvlshr (bvlshr #x3e0338ec  #xd0287073 ) (bvsmod #xa9047546  bv_2))))
(assert (bvsge (bvxor (bvsdiv #xbe744c51  bv_0) (bvsmod bv_2 #xe135f8d8 )) (bvsrem (bvlshr bv_1 #xf10119ef ) (bvnand #x7d03d73a  bv_0))))
(assert (or (bvslt (bvmul #x98d19275  #x075b90e6 ) (bvxor bv_1 bv_0)) (bvuge (bvadd bv_2 bv_0) (bvsrem #x323b63c5  bv_2))))
(check-sat)
(exit)
