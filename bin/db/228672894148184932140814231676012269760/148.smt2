(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (and (=> (bvugt #xeccaf4d9  bv_3) (xor bool_1 true)) (not (not bool_4))))
(assert (bvule (bvsrem (bvor #xad87ac64  #x5b6e67e1 ) (bvsdiv bv_4 #x51485cf9 )) (bvshl (bvmul bv_2 #xc63771d2 ) (bvsdiv #xaf6222d9  bv_4))))
(assert (bvugt (bvurem (bvor bv_3 bv_1) (bvlshr #x606dfe8c  bv_1)) (bvxor (bvsdiv #x5ee781c1  #xa1fc63fb ) (bvadd bv_2 bv_1))))
(assert (=> (bvsge (bvnand bv_3 bv_0) (bvashr #xcc3395fe  #x185a36f2 )) (not (bvule bv_0 #xe9eab39a ))))
(assert (xor (bvuge (bvxnor #x8721d2be  #x74e06fe1 ) (bvxnor #x1fbaa899  #x3934ca73 )) (and (=> bool_1 false) (bvuge #xa5ed5574  #x0e40a072 ))))
(check-sat)
(exit)
