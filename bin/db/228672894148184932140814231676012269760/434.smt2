(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (=> (not (bvuge #x70ca387b  #x48c0acc7 )) (not (bvule bv_2 #x75e15fbc ))))
(assert (and (bvult (bvand #x84305353  #x3c726f21 ) (bvsmod bv_2 bv_3)) (and (and false false) (xor true true))))
(assert (bvsle (bvurem (bvadd #x75b4d79d  #x58205223 ) (bvsmod bv_1 #xadd67986 )) (bvnor (bvxor bv_4 bv_1) (bvxor bv_0 bv_4))))
(assert (xor (and (bvult #x45535fc7  #xf53508f4 ) (not true)) (bvslt (bvsub #xfd79abec  #xaa54b0fe ) (bvxor bv_2 #x3daffcbb ))))
(assert (and (bvsle (bvadd #xa99265ad  bv_0) (bvor #xb96c69b6  #x276b0eda )) (xor (or true bool_2) (xor bool_3 false))))
(check-sat)
(exit)
