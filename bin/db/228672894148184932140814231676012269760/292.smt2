(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvslt (bvadd (bvadd bv_3 #xf0b8e77c ) (bvxor #xb86063d4  #x50d04729 )) (bvnor (bvsub bv_0 #x47eb7739 ) (bvshl #x8a2f7f76  #x5a7b4002 ))))
(assert (bvsgt (bvand (bvor bv_3 bv_0) (bvnand #xdc462ea9  #x765801de )) (bvand (bvxnor #x04736328  #xbfd8b157 ) (bvurem #x80484286  #xfb9f54b8 ))))
(assert (or (bvule (bvand bv_0 bv_3) (bvurem #x05354844  bv_3)) (bvugt (bvnand bv_3 bv_1) (bvnor bv_0 #x4aee709a ))))
(assert (bvslt (bvsrem (bvlshr bv_1 bv_0) (bvshl #xa9f29af5  #x71525fd8 )) (bvsub (bvshl #x6db0a32b  #xa6fa4290 ) (bvand bv_1 #x0202728d ))))
(assert (=> (and (bvsgt bv_1 bv_4) (or false false)) (bvult (bvsdiv #x6189d20d  bv_4) (bvand bv_2 #x2982862e ))))
(check-sat)
(exit)
