(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (xor (bvule (bvmul bv_1 #xcb3d0fc5 ) (bvudiv #x8cbc9095  bv_2)) (=> (bvsle #xdee5f77e  #xe28967af ) (or true false))))
(assert (bvuge (bvurem (bvsrem bv_4 bv_4) (bvshl #xe315a712  bv_0)) (bvxnor (bvxnor #x3e31dbdb  bv_0) (bvxnor #xd62996e7  bv_2))))
(assert (xor (bvugt (bvadd bv_3 bv_3) (bvmul bv_1 bv_2)) (xor (and bool_1 false) (bvult bv_4 #x87284ce1 ))))
(assert (bvsle (bvxor (bvsub bv_0 #x6a6873a9 ) (bvsub bv_0 bv_2)) (bvxnor (bvxnor bv_4 bv_1) (bvmul #xf1d08c17  bv_4))))
(assert (not (xor (xor true bool_1) (bvslt #x6515d5ed  bv_3))))
(check-sat)
(exit)
