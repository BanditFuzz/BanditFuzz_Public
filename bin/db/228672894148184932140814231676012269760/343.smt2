(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvuge (bvxnor (bvlshr bv_2 bv_2) (bvshl bv_0 bv_1)) (bvxor (bvnor #x4af5ba49  bv_0) (bvashr #x7a4226ea  bv_0))))
(assert (=> (xor (bvugt bv_4 #xad405249 ) (bvugt bv_1 #xf54e47ff )) (bvult (bvurem bv_3 bv_4) (bvudiv bv_1 #x1e0472f5 ))))
(assert (not (bvult (bvsrem #xcf44fd76  bv_1) (bvsub bv_1 bv_4))))
(assert (bvule (bvshl (bvsub bv_0 bv_3) (bvsub bv_1 bv_2)) (bvmul (bvshl #xc1e478fa  #x9a026fd9 ) (bvsmod #xd2be2470  bv_1))))
(assert (not (xor (xor false bool_0) (xor bool_2 bool_4))))
(check-sat)
(exit)
