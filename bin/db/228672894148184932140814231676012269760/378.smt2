(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvult (bvsrem (bvsrem #x868633e9  bv_0) (bvxor #x38647b86  bv_3)) (bvnand (bvshl #xb3c33cf7  bv_2) (bvlshr bv_1 bv_2))))
(assert (not (=> (=> true bool_3) (bvuge #xb2faeb78  #x4f15dcbe ))))
(assert (xor (bvule (bvsrem bv_1 bv_3) (bvand bv_3 bv_0)) (bvule (bvor bv_0 bv_0) (bvudiv bv_4 #x88138061 ))))
(assert (bvslt (bvsmod (bvnand #x6132253d  #xa946158e ) (bvsub bv_4 bv_2)) (bvadd (bvand bv_2 bv_2) (bvand #xfdfdb0a0  #xa58295f2 ))))
(assert (bvuge (bvudiv (bvsmod #x444ad806  #x7748fe71 ) (bvudiv bv_4 bv_0)) (bvnor (bvurem bv_3 bv_0) (bvnand bv_1 bv_2))))
(check-sat)
(exit)
