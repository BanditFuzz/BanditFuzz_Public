(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (and (bvule (bvurem bv_0 #x2a5637e4 ) (bvurem #xaaa2bad1  #xc8466d0e )) (and (and true bool_2) (bvule bv_4 bv_3))))
(assert (and (bvsgt (bvnor #xc5735f36  #xe9ab42ce ) (bvsrem #x07e79975  bv_2)) (bvsle (bvsmod #x51820783  bv_0) (bvxor bv_4 bv_3))))
(assert (bvsge (bvxnor (bvsub #x882cbb99  bv_2) (bvshl bv_3 #x9bf57d03 )) (bvadd (bvor bv_0 bv_0) (bvsrem bv_2 #x704bb786 ))))
(assert (or (bvuge (bvshl bv_2 bv_1) (bvshl bv_3 bv_4)) (bvult (bvmul bv_0 #xb9c86b7a ) (bvsub #x4c66feed  bv_1))))
(assert (not (=> (or true bool_1) (and bool_2 false))))
(check-sat)
(exit)
