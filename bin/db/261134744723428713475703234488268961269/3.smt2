(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (xor (bvsge (bvor bv_1 #x4e281042 ) (bvashr #x881885e6  #xd303991e )) (bvsle (bvmul #x95f82066  bv_1) (bvsdiv bv_2 #xd0771b22 ))))
(assert (xor (bvsle (bvand bv_4 #x45f930b7 ) (bvnand bv_4 #x34262596 )) (and (bvslt #xcc191fe8  bv_1) (=> bool_1 true))))
(assert (=> (bvule (bvshl #x69ed4a3c  bv_0) (bvmul bv_1 bv_3)) (not (bvule #xe0f47fb4  bv_4))))
(assert (or (bvule (bvnor bv_4 bv_0) (bvand #x51082961  bv_4)) (bvult (bvsdiv bv_1 bv_0) (bvsrem #xe62491bb  bv_0))))
(assert (xor (=> (bvslt #x1fc10bb6  #x64da450e ) (not false)) (not (=> false false))))
(check-sat)
(exit)
