(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (xor (and (bvult #xd38e5450  #x08a99cf8 ) (or bool_2 bool_2)) (bvsle (bvshl bv_1 #x8497bdfb ) (bvadd bv_1 #x8976093e ))))
(assert (bvsgt (bvsub (bvadd #xd7457738  bv_3) (bvurem #x0079a192  bv_2)) (bvsrem (bvlshr #xdf7655bb  #x87f632b5 ) (bvsmod bv_2 bv_3))))
(assert (bvsgt (bvmul (bvurem #xa683bcb1  bv_0) (bvashr #xea5b673f  #x8a96c33e )) (bvxnor (bvxnor bv_0 bv_1) (bvxor bv_1 bv_1))))
(assert (not (bvult (bvsub bv_3 #x4bc79a3c ) (bvshl #x76f3daac  #x1e0f5473 ))))
(assert (xor (=> (or true false) (xor true bool_4)) (and (bvsle bv_0 bv_3) (xor false bool_1))))
(check-sat)
(exit)
