(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (bvsle (bvudiv bv_0 bv_3) (bvxor bv_3 bv_3))))
(assert (bvsgt (bvshl (bvsub #x5e46d994  bv_2) (bvsub bv_1 bv_3)) (bvxnor (bvshl #x0536474e  #x99c3f3ef ) (bvmul bv_0 bv_1))))
(assert (and (bvuge (bvsub bv_1 bv_1) (bvor bv_4 bv_3)) (=> (bvule bv_4 bv_2) (bvugt bv_1 #xa2f65219 ))))
(assert (bvslt (bvudiv (bvnor #xb03ce677  bv_2) (bvmul #xe5e4b24c  bv_1)) (bvlshr (bvudiv bv_0 bv_1) (bvashr bv_0 #xdd4e8e6b ))))
(assert (=> (=> (bvuge bv_2 bv_3) (bvsle #x2d4ca38d  #xeed64a65 )) (bvslt (bvsdiv #x646c8676  bv_2) (bvnor bv_1 bv_1))))
(check-sat)
(exit)
