(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvugt (bvnand (bvxor bv_4 bv_4) (bvnand bv_1 bv_1)) (bvlshr (bvnand #xd955f3c7  #xbf9a96b6 ) (bvnor bv_0 #xe34bbf9a ))))
(assert (=> (bvsgt (bvxnor #x167feca5  #x5fab319e ) (bvxnor bv_4 bv_0)) (bvuge (bvnand bv_1 #x070c64e2 ) (bvor bv_3 bv_4))))
(assert (bvuge (bvmul (bvmul bv_2 #x129130d7 ) (bvsmod bv_4 bv_0)) (bvand (bvsub #x408b4fc4  #xa5633c9d ) (bvsrem bv_2 #x5b41a228 ))))
(assert (not (bvslt (bvsub bv_1 bv_1) (bvsrem bv_4 bv_4))))
(assert (not (and (bvsle bv_4 bv_2) (=> false false))))
(check-sat)
(exit)
