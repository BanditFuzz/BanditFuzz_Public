(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (=> (bvsle (bvlshr #xf7cfbccc  #xb682afd7 ) (bvsdiv bv_0 bv_1)) (bvsgt (bvsrem bv_1 #x2a53bca6 ) (bvashr bv_3 bv_0))))
(assert (not (bvsgt (bvxor bv_0 bv_1) (bvurem bv_3 #x675fa1ab ))))
(assert (and (=> (and false bool_4) (bvslt bv_1 bv_2)) (bvule (bvsdiv #xf1bfc53e  bv_2) (bvsmod bv_2 #xb994d16e ))))
(assert (xor (=> (bvuge bv_0 #xcd9a5272 ) (bvsge bv_2 bv_1)) (bvule (bvsmod #x9b009b4d  #xfa00df4f ) (bvudiv bv_3 bv_4))))
(assert (and (=> (bvsle bv_2 bv_3) (bvsle bv_3 bv_4)) (bvsge (bvmul bv_1 #x642d6aed ) (bvadd bv_1 bv_3))))
(check-sat)
(exit)
