(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (=> (bvsle (bvudiv bv_1 bv_3) (bvshl bv_2 bv_4)) (bvule (bvnand bv_4 bv_1) (bvor #x860fc359  #x0dbab9e2 ))))
(assert (or (xor (bvule bv_1 bv_4) (bvsgt bv_0 bv_4)) (not (bvsge bv_3 #xd851b4e3 ))))
(assert (bvult (bvsrem (bvadd bv_2 #x6f70df7b ) (bvsdiv bv_2 bv_1)) (bvor (bvsrem bv_2 bv_4) (bvxor #xcbf751d7  bv_4))))
(assert (bvule (bvudiv (bvsmod bv_4 #x1f316af5 ) (bvsdiv bv_4 #x39189fd4 )) (bvsrem (bvashr #x45820514  #x23e5ff25 ) (bvurem #x89aed57a  bv_2))))
(assert (not (bvule (bvurem #xb1067f9a  #x8029476f ) (bvxnor bv_1 #x998682ee ))))
(check-sat)
(exit)
