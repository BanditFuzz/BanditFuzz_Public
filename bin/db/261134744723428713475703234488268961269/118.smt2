(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (or (bvsgt bv_2 bv_2) (bvult #xac74352b  #xc2282ff7 )) (bvugt (bvshl #x2c26bffc  bv_2) (bvnand #x2fc82601  bv_1))))
(assert (and (and (bvult bv_2 bv_0) (and bool_2 false)) (bvuge (bvand #xf16f44ee  bv_3) (bvxnor bv_3 bv_4))))
(assert (bvuge (bvudiv (bvxor #x44431917  #x2a1553b7 ) (bvsub bv_0 #x55eede54 )) (bvudiv (bvshl #x49ff0c4f  bv_0) (bvsrem bv_2 #x1334d458 ))))
(assert (bvsle (bvudiv (bvshl #x90712e56  bv_0) (bvsmod bv_3 #xa85df2e7 )) (bvsmod (bvudiv #xa513caa7  bv_4) (bvlshr bv_2 bv_0))))
(assert (or (not (or false bool_3)) (not (xor bool_1 bool_3))))
(check-sat)
(exit)
