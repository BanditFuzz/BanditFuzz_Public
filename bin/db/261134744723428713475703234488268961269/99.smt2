(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (xor (bvugt (bvxnor #x744d29a6  #x4c153910 ) (bvudiv #x32a8bed3  #x938350bc )) (not (or true false))))
(assert (xor (bvsge (bvlshr bv_4 #x46ef6010 ) (bvsub bv_3 bv_4)) (and (bvslt #xd59fa872  #xe34d366d ) (=> bool_1 false))))
(assert (bvsgt (bvxnor (bvurem #xd36b6cea  #x4f25c769 ) (bvand #xd9148761  #x3fc46ec3 )) (bvlshr (bvmul bv_4 #xe7352bd4 ) (bvsrem #xb989c47e  #x909fa380 ))))
(assert (not (not (=> bool_0 bool_0))))
(assert (bvsge (bvurem (bvsub bv_0 #x159452f1 ) (bvand bv_1 bv_1)) (bvudiv (bvnand #x0b430f8f  bv_3) (bvsdiv #x233befa4  bv_1))))
(check-sat)
(exit)
