(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsgt (bvxnor (bvsdiv bv_0 #x8c1e33c3 ) (bvnor bv_3 #x1c0378e3 )) (bvxor (bvadd #x49484a87  bv_0) (bvand bv_1 bv_4))))
(assert (bvugt (bvsmod (bvnor bv_3 #xfab8c9b4 ) (bvnand bv_0 #x9fc1e3c8 )) (bvshl (bvshl #x3bf39433  bv_3) (bvlshr bv_4 #x3c66600c ))))
(assert (xor (bvuge (bvnand bv_0 #xa8aeae72 ) (bvadd #x7b6424eb  bv_4)) (=> (bvule #xdd172170  bv_1) (xor bool_3 false))))
(assert (not (=> (bvslt bv_2 #xf3a4bcbc ) (bvsge bv_1 #xa03532b7 ))))
(assert (not (bvult (bvsub #x283826a4  bv_4) (bvsrem #xd9ab5a8c  bv_0))))
(check-sat)
(exit)
