(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsge (bvor (bvshl #xd4661f66  bv_0) (bvshl bv_4 bv_2)) (bvand (bvudiv bv_0 bv_0) (bvxnor bv_1 bv_4))))
(assert (=> (bvslt (bvnor bv_0 bv_4) (bvadd bv_2 #x6336ad56 )) (and (bvugt bv_2 bv_0) (bvule bv_4 #x0abb0ef8 ))))
(assert (bvslt (bvmul (bvsub bv_1 #x63bd68c8 ) (bvsmod bv_3 bv_2)) (bvmul (bvudiv #x265645c2  bv_2) (bvsmod bv_2 bv_2))))
(assert (xor (bvult (bvand bv_3 bv_1) (bvsrem #xb9ced8bc  bv_2)) (not (bvsgt #x5ccc7270  #x49803884 ))))
(assert (bvsgt (bvxnor (bvxnor #x5e68a0ec  #x2801f1fb ) (bvsmod #x1e40c8e7  #x00c513ba )) (bvmul (bvxor #xb58b0f7e  #xd82d1504 ) (bvnand bv_1 #xfccb747f ))))
(check-sat)
(exit)
