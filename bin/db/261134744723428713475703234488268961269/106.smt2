(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (=> (bvslt (bvshl bv_4 #x67680df3 ) (bvnand bv_2 #x5cc594da )) (bvsge (bvxnor #x21c5162a  bv_2) (bvsrem #xfc5ed636  #xde26e4a6 ))))
(assert (bvugt (bvnor (bvand #x5d8e449c  bv_4) (bvnand #x340186fc  bv_1)) (bvsmod (bvxor #xdd0db682  #x6a06cdac ) (bvand bv_3 bv_3))))
(assert (not (bvsgt (bvmul #x56b6e28c  bv_4) (bvmul bv_2 #x65201359 ))))
(assert (and (or (bvult bv_3 bv_3) (bvsge #x30de4ef8  #x8431de4b )) (=> (and false bool_4) (bvuge bv_2 bv_4))))
(assert (not (not (bvule bv_3 #x1ae4a8cc ))))
(check-sat)
(exit)
