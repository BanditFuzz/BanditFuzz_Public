(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (bvuge (bvsrem bv_1 bv_0) (bvudiv bv_2 bv_4)) (or (and false bool_1) (or true true))))
(assert (=> (not (bvuge #x4e6b9534  #x13b5ea86 )) (not (bvugt #xb7211c2f  bv_4))))
(assert (xor (or (bvult #x945b858d  bv_4) (bvsgt #x2dba6b50  #x375c62a4 )) (or (bvuge #x67ef7856  bv_3) (bvult #x2e7d1233  bv_4))))
(assert (bvsle (bvsub (bvand #x5deba101  bv_2) (bvand bv_0 bv_2)) (bvnand (bvnor bv_4 bv_2) (bvsmod #x8cc572a8  #x254ab56c ))))
(assert (and (bvule (bvsub bv_1 bv_4) (bvsub bv_4 #x4ad2ce8f )) (bvule (bvand bv_3 bv_0) (bvsrem #x3e6d8e02  bv_4))))
(check-sat)
(exit)
