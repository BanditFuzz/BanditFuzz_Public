(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvugt (bvnand (bvshl #xbdc89699  bv_2) (bvadd #x756313d2  #xfc240e71 )) (bvxnor (bvadd #x745b8413  bv_2) (bvashr #x51ebefce  bv_0))))
(assert (bvugt (bvsrem (bvsmod bv_3 #xbc526521 ) (bvudiv #xed26f59e  bv_0)) (bvor (bvnor #xd41b67c2  #x5879f735 ) (bvudiv bv_3 bv_2))))
(assert (bvsgt (bvor (bvmul bv_4 #x8d3ea772 ) (bvudiv bv_3 bv_4)) (bvxor (bvand bv_3 #x4284b0b4 ) (bvxnor bv_0 #xb6dce571 ))))
(assert (bvule (bvsrem (bvsmod #x282ae450  bv_4) (bvnand bv_2 #xe392673d )) (bvlshr (bvadd #xf8ac797e  #x7713a615 ) (bvand #x5bb01080  #x66323815 ))))
(assert (not (and (bvuge #xca0fdbbb  #xc843c255 ) (=> bool_4 bool_4))))
(check-sat)
(exit)
