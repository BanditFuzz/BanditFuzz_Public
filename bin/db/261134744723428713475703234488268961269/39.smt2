(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (xor (bvuge bv_2 #x06684679 ) (xor false bool_4)) (bvsle (bvnand bv_2 #xd01a473b ) (bvand bv_0 #x56cbc7f2 ))))
(assert (xor (and (xor true false) (bvugt #xd0e11b5c  bv_2)) (bvsgt (bvxnor #x92c691d4  bv_1) (bvlshr #xc945bac1  bv_4))))
(assert (and (and (=> false true) (=> true bool_3)) (bvuge (bvashr bv_0 bv_0) (bvxnor bv_3 #x8008b6e4 ))))
(assert (bvuge (bvshl (bvnand #x9f608484  #x5d1b3ccd ) (bvmul bv_1 #xee92b6c6 )) (bvxnor (bvor bv_4 #x26d3cbbb ) (bvnand bv_3 #xcd4166d3 ))))
(assert (bvuge (bvsub (bvsub #x9f6f5f78  #x7d6bd525 ) (bvsrem bv_1 bv_0)) (bvsdiv (bvurem bv_0 bv_0) (bvsub bv_4 bv_2))))
(check-sat)
(exit)
