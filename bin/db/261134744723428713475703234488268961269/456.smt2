(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (=> (or bool_4 bool_4) (not true)) (bvsle (bvshl #xc5bab2f7  #xbad5f434 ) (bvnand bv_2 bv_1))))
(assert (bvsle (bvadd (bvsub #x2e540690  #x0b85382d ) (bvsub bv_2 bv_1)) (bvxnor (bvshl bv_4 #x50403d14 ) (bvxnor bv_4 #xeb611b76 ))))
(assert (bvsge (bvor (bvadd bv_3 bv_0) (bvnor bv_1 bv_1)) (bvadd (bvnand #xce8f2c81  bv_1) (bvsdiv bv_0 #xf62270d6 ))))
(assert (bvuge (bvmul (bvlshr bv_4 bv_1) (bvsrem #x6ffba366  #xcc195179 )) (bvlshr (bvurem bv_2 #x98a4d44e ) (bvmul bv_1 bv_4))))
(assert (or (and (bvugt #x16d2c8f8  #x456987df ) (=> bool_2 bool_1)) (bvugt (bvand #xeda1f19a  #xaadbfb9c ) (bvshl #xa7c75617  #xfac0787f ))))
(check-sat)
(exit)
