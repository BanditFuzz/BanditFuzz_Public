(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (and (bvult (bvxor bv_3 #xfdd92ca3 ) (bvsub bv_3 #xd3c5ffb5 )) (=> (xor true bool_2) (not bool_4))))
(assert (xor (xor (bvsge #x76ddd58f  #x43d1696c ) (bvugt bv_2 #x7f28d3a6 )) (bvsle (bvashr bv_3 #xa25657ee ) (bvurem bv_0 bv_2))))
(assert (bvule (bvudiv (bvxor #x2b4298c2  bv_1) (bvxnor bv_4 #x9029c8df )) (bvnand (bvnand #x0ee38281  #x6d7f9316 ) (bvxnor bv_4 bv_4))))
(assert (not (bvule (bvashr bv_2 #x7ab5d97d ) (bvsrem #x37e66589  #xee07b1bd ))))
(assert (bvuge (bvsdiv (bvashr bv_4 bv_1) (bvsmod bv_3 bv_3)) (bvsrem (bvsmod bv_1 bv_1) (bvshl #xf9dd905e  bv_0))))
(check-sat)
(exit)
