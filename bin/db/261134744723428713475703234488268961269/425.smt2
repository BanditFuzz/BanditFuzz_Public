(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvslt (bvor (bvxor #xa1928e72  #xa1f19729 ) (bvsmod bv_1 #x995d5293 )) (bvlshr (bvsmod #xed295a8d  #x6301589c ) (bvurem #xf3f3cadf  bv_1))))
(assert (bvugt (bvor (bvashr #xc7be2847  #xc43be0ed ) (bvor #x412d3808  bv_4)) (bvnor (bvsmod #xfde762d1  #xf9e31458 ) (bvnor #x82e5fda6  bv_2))))
(assert (bvule (bvor (bvsmod #xec3b9fae  bv_4) (bvshl bv_0 bv_2)) (bvurem (bvmul #x209e543b  #x4e83baf3 ) (bvnand bv_2 bv_1))))
(assert (not (=> (bvsle #x676c71fa  #x2cb418f8 ) (xor true bool_0))))
(assert (=> (and (not bool_3) (bvuge #x789988de  #xa90d6b8f )) (and (bvule #x0f02f224  bv_4) (=> bool_1 true))))
(check-sat)
(exit)
