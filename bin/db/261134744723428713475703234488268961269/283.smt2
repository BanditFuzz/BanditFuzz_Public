(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvslt (bvxnor (bvurem #x657e0fbe  bv_3) (bvshl #x72f487e5  #x35099e05 )) (bvxnor (bvsmod bv_4 bv_4) (bvurem bv_4 #xf2f9c865 ))))
(assert (not (bvule (bvashr bv_0 bv_3) (bvmul bv_4 bv_0))))
(assert (=> (bvult (bvmul bv_1 #x7b6c6523 ) (bvxnor #x4e4a2245  #xe5f241a0 )) (bvsle (bvnand bv_2 #xef0f6a40 ) (bvashr bv_3 bv_2))))
(assert (not (xor (not bool_4) (bvslt bv_4 #x22142280 ))))
(assert (bvslt (bvand (bvnand #x994eda01  bv_0) (bvadd #xd3645c68  #x432ee2bd )) (bvsub (bvsrem #x4265149c  #xe9b1210d ) (bvsdiv #x8e6d0a61  bv_2))))
(check-sat)
(exit)
