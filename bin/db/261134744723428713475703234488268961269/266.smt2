(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (=> (bvugt (bvxnor bv_2 bv_2) (bvsdiv bv_4 bv_2)) (xor (and false true) (not bool_1))))
(assert (and (=> (bvuge #x4cfcb209  bv_3) (bvsgt bv_1 #x4da4a31e )) (and (bvsge bv_4 #xfc03f85b ) (not false))))
(assert (=> (bvsgt (bvxnor bv_1 bv_0) (bvsrem bv_2 #xd0b3ea54 )) (bvsgt (bvor #xc180eda8  bv_0) (bvnand #xa7ff079a  #xf429049f ))))
(assert (not (or (bvugt #xba7b4c42  bv_1) (not bool_3))))
(assert (xor (bvsgt (bvlshr #x29a4146e  bv_1) (bvurem bv_4 #xa516b138 )) (bvult (bvshl bv_4 #x45c33e59 ) (bvsrem #x120d69cf  bv_3))))
(check-sat)
(exit)
