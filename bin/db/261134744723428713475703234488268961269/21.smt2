(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvuge (bvor (bvashr #x6bc1ddc4  bv_3) (bvsdiv bv_4 bv_4)) (bvor (bvor #x36154af1  #xcc8281bc ) (bvsrem bv_0 bv_3))))
(assert (xor (not (xor bool_3 bool_4)) (bvslt (bvurem bv_3 bv_0) (bvor bv_2 #x23d78bf7 ))))
(assert (and (xor (or bool_0 bool_2) (not false)) (bvule (bvsub #x39a01f76  bv_4) (bvand #xcd6e056b  #xfb6bef6f ))))
(assert (=> (=> (not bool_1) (bvule #x4679cd4e  bv_1)) (not (and bool_1 bool_2))))
(assert (bvslt (bvmul (bvor #xf169c1a5  bv_2) (bvnand bv_0 #x33ded8e7 )) (bvudiv (bvsdiv #x82eb0191  bv_3) (bvnor bv_0 bv_1))))
(check-sat)
(exit)
