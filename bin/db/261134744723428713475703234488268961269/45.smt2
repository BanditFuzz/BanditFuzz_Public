(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (bvule (bvurem bv_4 #xc1e0aca8 ) (bvadd bv_0 #x277ccf41 ))))
(assert (or (bvult (bvudiv #xc4eb4e27  bv_3) (bvand #x250b6a3a  #xae4281c2 )) (bvult (bvurem #x39cd7871  bv_1) (bvnand bv_0 #x24e3754f ))))
(assert (not (and (=> bool_0 bool_0) (bvsge bv_3 #x41dacd64 ))))
(assert (bvule (bvurem (bvadd bv_0 #xbc214525 ) (bvand bv_0 bv_4)) (bvxnor (bvudiv bv_1 #x2c4020f6 ) (bvsdiv bv_2 #xd7860537 ))))
(assert (or (bvsge (bvor bv_1 bv_0) (bvxnor #x858e37ab  bv_2)) (bvslt (bvsrem bv_2 #xcba334a8 ) (bvxor #x3db30d14  bv_1))))
(check-sat)
(exit)
