(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvuge (bvsrem (bvlshr bv_3 bv_0) (bvxnor #x0021f767  bv_4)) (bvsmod (bvurem #x8143b349  bv_1) (bvxor bv_4 #xb1c2e597 ))))
(assert (or (bvslt (bvmul bv_4 #xb2bce6b1 ) (bvsmod #xaaf27048  bv_0)) (bvsle (bvlshr #xc4dfcc6f  bv_1) (bvshl #x17ec4ab0  bv_2))))
(assert (=> (xor (or true true) (bvsle bv_0 bv_0)) (xor (=> true false) (bvsle bv_1 bv_4))))
(assert (not (or (bvuge bv_2 bv_1) (or true bool_3))))
(assert (and (xor (bvsge bv_2 bv_4) (or false true)) (bvuge (bvudiv bv_0 #xcf389564 ) (bvsdiv bv_3 bv_4))))
(check-sat)
(exit)
