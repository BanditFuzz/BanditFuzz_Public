(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (bvsle (bvurem #xd6298ec5  #x9385651d ) (bvurem bv_1 #xad6350f6 ))))
(assert (bvule (bvnor (bvudiv bv_3 #x4eb4c18b ) (bvashr bv_0 #x807294ae )) (bvlshr (bvxnor bv_4 bv_2) (bvxnor bv_2 #xe57ca1e3 ))))
(assert (xor (or (=> bool_3 bool_4) (xor bool_0 false)) (bvugt (bvashr #x4622abc5  #xea26ef53 ) (bvor #xe97e888d  bv_1))))
(assert (not (bvsle (bvurem #xb622e03b  #x0b12052d ) (bvand bv_1 #xf7916283 ))))
(assert (bvuge (bvsub (bvshl #x22f15849  bv_4) (bvxor bv_0 bv_3)) (bvlshr (bvudiv bv_0 #xddab4349 ) (bvmul #x837906ca  #x85a73c47 ))))
(check-sat)
(exit)
