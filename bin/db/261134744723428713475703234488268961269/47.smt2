(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (and (bvsge #x1e7ef421  bv_3) (=> false false))))
(assert (bvsge (bvand (bvashr #xd2930411  bv_3) (bvashr #xd67901f2  #xd4e6e6be )) (bvlshr (bvsub bv_2 bv_0) (bvnor #xf2b97776  #x44d9ad49 ))))
(assert (xor (bvult (bvlshr bv_2 #xf4d2cedd ) (bvudiv bv_3 #x347aa0bf )) (xor (and true true) (bvult #x96231416  #x828e0d4e ))))
(assert (bvsge (bvmul (bvadd bv_4 bv_4) (bvnand bv_0 #x64dbc220 )) (bvurem (bvashr bv_4 bv_2) (bvand bv_0 #x935753b0 ))))
(assert (and (=> (=> bool_0 false) (xor false bool_1)) (bvugt (bvsrem bv_0 bv_0) (bvsmod #xb338a230  bv_1))))
(check-sat)
(exit)
