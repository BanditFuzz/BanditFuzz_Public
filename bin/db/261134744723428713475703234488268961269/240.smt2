(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvule (bvnand (bvor bv_2 bv_3) (bvlshr #xa9295831  bv_1)) (bvor (bvnor bv_2 bv_1) (bvnand #x643681fc  bv_3))))
(assert (bvult (bvxnor (bvor bv_4 bv_3) (bvxor bv_0 bv_3)) (bvashr (bvsub #x5a34ed53  bv_2) (bvadd #x63dd442d  bv_3))))
(assert (=> (not (xor bool_1 bool_0)) (=> (bvugt bv_0 #x9f32084b ) (and true false))))
(assert (xor (not (and bool_0 true)) (xor (bvsge #x77b16729  bv_3) (bvsge bv_3 bv_0))))
(assert (bvuge (bvxnor (bvnor #x8f4c7e13  bv_1) (bvlshr bv_4 #x0cb857d3 )) (bvnor (bvlshr bv_4 bv_4) (bvnor #x51a4df0f  #x1c216e87 ))))
(check-sat)
(exit)
