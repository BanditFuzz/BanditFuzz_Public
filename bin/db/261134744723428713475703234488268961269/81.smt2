(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsle (bvudiv (bvurem bv_0 bv_4) (bvshl bv_4 #x7ddeab32 )) (bvnor (bvnor #xf475de00  bv_4) (bvnand bv_4 #x95534698 ))))
(assert (not (bvult (bvsmod bv_4 bv_4) (bvsrem bv_1 bv_0))))
(assert (bvult (bvudiv (bvxor bv_1 bv_0) (bvxnor bv_0 bv_3)) (bvnor (bvashr bv_0 #x7d81929b ) (bvxor bv_0 #x3636d37d ))))
(assert (or (bvsge (bvashr #x5d53bf79  bv_2) (bvsdiv #x9ae3197b  #x00be74cb )) (=> (and false bool_2) (not true))))
(assert (and (bvule (bvxnor #x8ff7e9d4  bv_1) (bvnand bv_3 bv_2)) (bvslt (bvand #xff2485a6  #xc221d8c5 ) (bvsdiv #x93d11a17  #xa2ddf78b ))))
(check-sat)
(exit)
