(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvugt (bvshl (bvsmod bv_0 bv_2) (bvnand bv_1 #x5f060b43 )) (bvor (bvudiv bv_4 bv_2) (bvshl #xd343290f  #x657527ad ))))
(assert (or (not (bvult bv_1 bv_2)) (xor (xor false bool_1) (and false bool_1))))
(assert (=> (bvslt (bvnor #xf6050e67  bv_4) (bvxnor #xc66e472e  #xd9a617dc )) (bvuge (bvudiv #x7dd1a2ac  #x97fa0c4f ) (bvxnor bv_0 #x5cf5cc82 ))))
(assert (not (or (xor false false) (and bool_3 bool_4))))
(assert (bvule (bvxor (bvxor bv_4 #xef35252a ) (bvudiv #xe4af69a2  bv_2)) (bvshl (bvsdiv #x635b7919  bv_4) (bvand #x8ebce186  bv_4))))
(check-sat)
(exit)
