(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (and (xor (bvugt #x93b136c3  #xa7bc276a ) (bvugt bv_3 bv_1)) (bvslt (bvand #xd5d01ebc  bv_1) (bvsrem bv_3 #xb461406e ))))
(assert (bvult (bvxor (bvnand #x2e8531d8  #x65a209eb ) (bvsrem #xbe5987f2  #x907e2250 )) (bvudiv (bvadd #x1692262d  #x6eed0944 ) (bvmul #xd67de115  #x7afc4080 ))))
(assert (=> (and (or false bool_1) (=> bool_4 bool_1)) (=> (bvule bv_0 #x2753c59a ) (and bool_4 false))))
(assert (=> (bvsge (bvshl #x5c2ab98c  bv_3) (bvxor bv_1 bv_4)) (and (bvsle #xd16251e4  bv_4) (bvsgt bv_4 bv_4))))
(assert (and (xor (not bool_1) (and true bool_2)) (bvugt (bvshl #x5dfca0f0  #xf469aba2 ) (bvudiv bv_2 #x88fa58d5 ))))
(check-sat)
(exit)
