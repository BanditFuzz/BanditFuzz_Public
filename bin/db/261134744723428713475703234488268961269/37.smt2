(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (=> (bvule (bvsrem bv_4 #x4ef1208c ) (bvnor bv_2 #xad7bbee7 )) (bvsgt (bvsrem #xefd58924  bv_4) (bvlshr bv_0 bv_0))))
(assert (bvule (bvsdiv (bvsmod bv_4 #xad2231ee ) (bvadd bv_1 bv_3)) (bvnand (bvxor #xe45ca91f  bv_2) (bvand #x7d45838b  bv_0))))
(assert (bvsge (bvsrem (bvnor #x31b37552  bv_0) (bvadd #x172dee21  #x3245dcac )) (bvxor (bvmul bv_0 bv_0) (bvashr bv_4 #xebce8be7 ))))
(assert (bvsge (bvor (bvshl #xb347950a  bv_1) (bvudiv #xe285949b  bv_4)) (bvand (bvsub bv_3 bv_0) (bvurem bv_2 bv_2))))
(assert (and (and (bvsge bv_1 bv_1) (bvugt #xf564bde3  bv_0)) (xor (not false) (not bool_3))))
(check-sat)
(exit)
