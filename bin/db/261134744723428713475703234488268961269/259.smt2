(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (or (or bool_2 true) (bvule bv_4 bv_3))))
(assert (and (=> (bvule #x7a572389  bv_2) (or false true)) (not (bvugt #x6d31d998  #xe86d29fc ))))
(assert (or (bvsgt (bvsmod #x2fba5c46  #xac25d044 ) (bvand bv_4 #x137d0cce )) (bvule (bvlshr bv_2 bv_4) (bvlshr #x0d057527  bv_0))))
(assert (bvule (bvudiv (bvnand bv_1 #x5f1cef62 ) (bvxnor #xb254fb7e  #x3e07a458 )) (bvashr (bvurem bv_0 #x57a9fe88 ) (bvxor #xec52eafc  bv_1))))
(assert (or (=> (not bool_3) (bvsge bv_3 bv_1)) (bvult (bvand bv_1 #x0efee095 ) (bvshl bv_0 bv_4))))
(check-sat)
(exit)
