(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (and (bvult (bvand bv_2 bv_1) (bvnand #x65aaa886  bv_1)) (bvsgt (bvsmod #x106f4ac2  #xe653669f ) (bvnor #xb310d5cc  bv_1))))
(assert (=> (xor (bvsgt bv_2 #x196e8d03 ) (bvult #x48aa165a  #x6569074c )) (bvult (bvnor #xffe5a819  #xcb5b847f ) (bvurem bv_4 #x5dea587b ))))
(assert (bvsge (bvor (bvadd #x48cbafdd  #x56b5135e ) (bvxor #xf05cfa6c  bv_3)) (bvxor (bvadd #x596147af  #xd6a9e202 ) (bvxnor bv_0 bv_1))))
(assert (and (bvsge (bvmul #x2b0136bd  #xeaace40e ) (bvlshr #x8a8921fd  #xe5c75c92 )) (bvult (bvurem bv_3 bv_3) (bvor bv_0 #xcf6700b0 ))))
(assert (or (bvugt (bvsrem bv_1 bv_0) (bvudiv #xf88d6bb5  bv_2)) (=> (or bool_2 true) (and true bool_3))))
(check-sat)
(exit)
