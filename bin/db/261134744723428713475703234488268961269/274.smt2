(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvuge (bvand (bvand bv_3 bv_4) (bvadd #x1ae71a80  #x2ed6d8c8 )) (bvadd (bvsmod bv_0 #xb2f1469c ) (bvsrem #xd43a936e  #x4f4c5eb6 ))))
(assert (=> (bvslt (bvsmod bv_2 #x6acb9368 ) (bvxnor #xfe23ce27  bv_1)) (bvult (bvand bv_0 bv_2) (bvor #x94378356  #x18c0ee7d ))))
(assert (bvslt (bvsdiv (bvsmod bv_3 #x8df77389 ) (bvsmod #x61a9f5e4  #x4d84e6f8 )) (bvlshr (bvor #x811fc569  bv_4) (bvudiv bv_0 bv_2))))
(assert (not (xor (or bool_0 bool_1) (xor false true))))
(assert (not (or (or bool_1 true) (or false bool_3))))
(check-sat)
(exit)
