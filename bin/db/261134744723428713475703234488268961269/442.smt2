(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsgt (bvudiv (bvsrem bv_1 bv_4) (bvsmod bv_3 bv_4)) (bvashr (bvxnor bv_3 bv_3) (bvsub #x20066100  bv_0))))
(assert (bvule (bvsub (bvsdiv #x05975702  #x083afbe5 ) (bvsub #x6563fe47  #x2d429179 )) (bvudiv (bvsdiv bv_0 #x707e245e ) (bvlshr #xe2120cca  #xa11f639e ))))
(assert (not (bvugt (bvsdiv bv_2 bv_4) (bvlshr bv_3 #x511e83cb ))))
(assert (or (bvule (bvxor #xc1975851  bv_1) (bvsrem #xb40adb23  bv_1)) (bvule (bvurem bv_2 bv_1) (bvsdiv #x9d48abcf  bv_1))))
(assert (or (bvugt (bvsmod bv_3 bv_2) (bvmul bv_1 #x3a1bed59 )) (and (or bool_2 bool_3) (or bool_4 false))))
(check-sat)
(exit)
