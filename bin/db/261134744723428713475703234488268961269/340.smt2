(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (not (not (xor bool_3 true))))
(assert (and (bvule (bvxor #xee26896c  #x7e33a1e4 ) (bvnand #x66338442  #x8f188cdd )) (bvslt (bvsmod #x84777586  bv_0) (bvsdiv bv_0 bv_2))))
(assert (bvult (bvadd (bvlshr bv_4 #xa84871c1 ) (bvsub bv_2 bv_4)) (bvurem (bvsdiv bv_4 bv_3) (bvand #xd0e866db  bv_1))))
(assert (bvsgt (bvlshr (bvand #x2547abb0  bv_4) (bvshl #x04b930b7  #xc5d49fb6 )) (bvshl (bvurem bv_1 bv_3) (bvxnor bv_4 bv_2))))
(assert (=> (bvsle (bvnor bv_4 #x95124181 ) (bvashr bv_2 bv_2)) (bvule (bvudiv bv_3 #x047c4766 ) (bvsdiv #x3bbf9c59  #xd829f0e4 ))))
(check-sat)
(exit)
