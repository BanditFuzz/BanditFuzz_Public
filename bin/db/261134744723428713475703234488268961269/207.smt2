(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvugt (bvshl (bvnor bv_2 #xd434aa03 ) (bvsub #xa8415d19  #x0d79e2ac )) (bvmul (bvsmod #x9e9547bc  bv_4) (bvashr #xe95e82ba  bv_1))))
(assert (=> (or (and bool_1 bool_4) (=> bool_2 bool_2)) (or (bvule #xfa9e5a27  #x06dd842b ) (not bool_3))))
(assert (xor (bvsge (bvadd #x3faa4b45  #x15533f9d ) (bvnand bv_0 bv_2)) (bvuge (bvshl #x4d43381c  #x307ef779 ) (bvashr #x8f26cfef  #xac13db80 ))))
(assert (bvult (bvadd (bvashr bv_0 bv_3) (bvmul #x53b3b825  #x70a9b050 )) (bvsub (bvsdiv bv_3 #xafaa7db3 ) (bvsub bv_2 bv_1))))
(assert (=> (or (xor bool_1 true) (bvule bv_3 bv_1)) (bvsle (bvsdiv #xf64fb2d9  bv_3) (bvadd bv_1 #xff560316 ))))
(check-sat)
(exit)
