(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvult (bvxor (bvudiv #x510aa938  bv_3) (bvand bv_4 bv_0)) (bvurem (bvnor #x1d1a8298  bv_2) (bvashr #x948f7a0c  #x207183d7 ))))
(assert (bvsge (bvashr (bvurem bv_2 bv_0) (bvsrem bv_3 #xa74fe5ae )) (bvxnor (bvsdiv bv_3 bv_4) (bvurem #x14573089  bv_1))))
(assert (=> (and (bvule #xfd234fc9  bv_0) (bvugt #xa317c936  #x8c9c951b )) (bvsgt (bvshl #x39c0110c  bv_0) (bvsdiv bv_2 bv_4))))
(assert (bvugt (bvnand (bvor #x112e9b8f  #xa18244f7 ) (bvnor bv_3 #xf465bd5e )) (bvnor (bvsub #x1cf60e0f  #xf2908033 ) (bvxor #xe5abe971  #xd6b825c8 ))))
(assert (not (bvuge (bvlshr bv_1 bv_1) (bvand bv_0 bv_4))))
(check-sat)
(exit)
