(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvugt (bvor (bvsub #x006ae17f  #x836ca1d7 ) (bvmul bv_0 #xa40d3f0a )) (bvand (bvnor bv_0 #x72d2127a ) (bvsdiv bv_4 bv_1))))
(assert (xor (bvule (bvsmod #x61f8d0c1  #x389919dc ) (bvurem bv_1 #xe5c6d604 )) (bvult (bvurem #xe9367cbd  #x3fbbb5d0 ) (bvadd #x4e03e0c1  #xfaffd0f8 ))))
(assert (not (not (and false false))))
(assert (bvuge (bvsdiv (bvand bv_1 bv_2) (bvnor #x551f6576  bv_0)) (bvurem (bvsrem #x5faf7b3b  bv_0) (bvlshr #x1ecfc857  #x30b56107 ))))
(assert (not (xor (or true bool_3) (and true bool_1))))
(check-sat)
(exit)
