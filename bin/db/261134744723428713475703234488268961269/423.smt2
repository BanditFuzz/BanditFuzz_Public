(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (bvsgt (bvurem (bvshl bv_1 bv_1) (bvadd bv_4 bv_4)) (bvmul (bvxor bv_2 #xc82873da ) (bvnand bv_2 bv_1))))
(assert (bvsge (bvashr (bvxnor #xb0cb610e  bv_4) (bvsub #x5c072097  bv_2)) (bvshl (bvnand bv_2 #x19e42d98 ) (bvxor bv_4 bv_2))))
(assert (not (and (bvslt bv_0 bv_4) (bvult #x4f0747af  bv_3))))
(assert (bvsle (bvsmod (bvsrem #xcf45c72b  #x0844e409 ) (bvshl bv_2 bv_2)) (bvand (bvshl bv_4 bv_3) (bvudiv bv_3 bv_1))))
(assert (xor (bvugt (bvurem bv_1 #xf280edb4 ) (bvxor bv_0 #x0a6f4283 )) (not (bvslt #xa928cc82  bv_0))))
(check-sat)
(exit)
