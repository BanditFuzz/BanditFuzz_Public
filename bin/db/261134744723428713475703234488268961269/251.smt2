(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (and (bvsge (bvurem bv_3 bv_1) (bvnor bv_0 bv_1)) (bvslt (bvxnor #x7db33b68  bv_2) (bvudiv bv_2 #x54cdffd7 ))))
(assert (=> (and (and true bool_3) (and false bool_4)) (bvsgt (bvxnor #x10377ee2  #xd4cd1b60 ) (bvnand bv_0 #xe3965d55 ))))
(assert (=> (xor (xor bool_4 bool_4) (xor bool_4 false)) (or (not false) (or bool_1 true))))
(assert (bvule (bvand (bvand #xa445f59d  bv_4) (bvlshr bv_1 #x222cd604 )) (bvxor (bvnand bv_3 #xa530a67a ) (bvashr bv_1 #x2739e608 ))))
(assert (bvugt (bvsdiv (bvsdiv #x4ae02368  bv_1) (bvudiv bv_2 #x4110738b )) (bvmul (bvnand bv_1 bv_1) (bvashr #x62959651  bv_3))))
(check-sat)
(exit)
