(set-info :Origin "This instance was generated by: BanditFuzz-- an RL fuzzer for SMT solvers" )
(set-info :Author "Joe Scott, Fed Mora, Vijay Ganesh" )
(set-info :Contact "Joe Scott, joseph.scott@uwaterloo.ca")
(set-logic QF_BV)
(declare-const bool_0 Bool)
(declare-const bool_1 Bool)
(declare-const bool_2 Bool)
(declare-const bool_3 Bool)
(declare-const bool_4 Bool)
(declare-const bv_0 (_ BitVec 32))
(declare-const bv_1 (_ BitVec 32))
(declare-const bv_2 (_ BitVec 32))
(declare-const bv_3 (_ BitVec 32))
(declare-const bv_4 (_ BitVec 32))
(assert (or (bvuge (bvsrem bv_4 bv_2) (bvurem #x623534bf  #xef356f0a )) (bvugt (bvxor bv_0 #x88922bbb ) (bvlshr #xb6a99134  #xa21c8c28 ))))
(assert (or (bvugt (bvurem bv_3 bv_3) (bvsdiv bv_2 bv_1)) (bvugt (bvadd bv_3 #x687e153b ) (bvshl bv_4 bv_4))))
(assert (xor (bvule (bvsub #xc74056c2  bv_2) (bvshl #x45335132  bv_0)) (bvugt (bvadd bv_0 #x18652b8b ) (bvor #x3e0d899d  #x2d83895e ))))
(assert (bvsge (bvlshr (bvmul bv_3 #xee8ff87b ) (bvor bv_0 bv_0)) (bvudiv (bvlshr #x7a1dbfda  bv_4) (bvshl bv_2 #x338b017e ))))
(assert (not (not (or true true))))
(check-sat)
(exit)
